{
  "name": "Rewards",
  "client_id": "https://github.com/wix-private/app-market/tree/master/loyalty/loyalty-rewards#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Rewards",
    "entity": "_com_wixpress_loyalty_reward_Reward"
  }],
  "relatedGuides": [],
  "operations":   [
        {
      "name": "Create Reward",
      "methodName": "CreateReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reward"],
      "params": [      {
        "in": "BODY",
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward to create.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_CreateRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a reward.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRewardRequest",
        "rpcResponseName": "CreateRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Reward",
      "methodName": "DeleteReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the reward to delete.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Revision number. Increments by 1 each time the reward is updated.\nTo prevent conflicting changes, the existing `revision` must be used when updating the reward.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_DeleteRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a reward.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteRewardRequest",
        "rpcResponseName": "DeleteRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Reward",
      "methodName": "GetReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Devcenter Manage Loyalty",
        "description": "can manage loyalty programs"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the reward to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_GetRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a reward.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetRewardRequest",
        "rpcResponseName": "GetRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Rewards",
      "methodName": "ListRewards",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Devcenter Manage Loyalty",
        "description": "can manage loyalty programs"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListRewards",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_ListRewardsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves rewards, given the provided filters.\n\n> **Notes:**\n> * Only `active` rewards are retrieved.\n> * Includes also rewards that cannot be redeemed because no customer has earned enough points yet.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListRewardsRequest",
        "rpcResponseName": "ListRewardsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Reward",
      "methodName": "UpdateReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "reward",
        "reward.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "reward.id",
          "type": "string",
          "doc": " Reward ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "reward",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
          "doc": " Reward to update.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_UpdateRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a reward.\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{reward.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateRewardRequest",
        "rpcResponseName": "UpdateRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_loyalty_reward_RewardDeletedDomainEvent",
      "name": "Reward Deleted Webhook",
      "docs": {"summary": " Triggered when a reward has been deleted.\n"},
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Devcenter Manage Loyalty",
        "description": "can manage loyalty programs"
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_reward_RewardUpdatedDomainEvent",
      "name": "Reward Updated Webhook",
      "docs": {"summary": " Triggered when a reward has been updated.\n"},
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Devcenter Manage Loyalty",
        "description": "can manage loyalty programs"
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_reward_RewardCreatedDomainEvent",
      "name": "Reward Created Webhook",
      "docs": {"summary": " Triggered when a reward has been created.\n"},
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Devcenter Manage Loyalty",
        "description": "can manage loyalty programs"
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_loyalty_reward_RewardDeletedDomainEvent",
      "displayName": "Reward Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"06ddeb75-41e6-4045-940e-05ebe5542195\",\n  \"entityFqdn\" : \"wix.loyalty.v1.reward\",\n  \"slug\" : \"deleted\",\n  \"entityId\" : \"37afb59f-01a1-4255-945f-837c89569e63\",\n  \"deletedEvent\" : { },\n  \"eventTime\" : \"2022-01-04T07:07:04.153082Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityDeletedEvent",
      "displayName": "Reward Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardUpdatedDomainEvent",
      "displayName": "Reward Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"0890d8e0-0334-4fc3-bec6-18a49a922b53\",\n  \"entityFqdn\" : \"wix.loyalty.v1.reward\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"00000000-0000-0000-0001-000000000000\",\n  \"updatedEvent\" : {\n    \"currentEntity\" : {\n      \"requiredPoints\" : 15,\n      \"name\" : \"Order Discount\",\n      \"revision\" : \"4\",\n      \"id\" : \"00000000-0000-0000-0001-000000000000\",\n      \"type\" : \"DISCOUNT_AMOUNT\",\n      \"discountAmount\" : {\n        \"amount\" : \"2\"\n      },\n      \"active\" : true\n    }\n  },\n  \"eventTime\" : \"2022-01-04T06:56:37.131580Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityUpdatedEvent",
      "displayName": "Reward Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardCreatedDomainEvent",
      "displayName": "Reward Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityCreatedEvent",
      "displayName": "Reward Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": ""
        },
                {
          "name": "data",
          "type": "struct",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " For how many items the requested action was successful \n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " For how many items the requested action was not successful \n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " total number of failures without details because detailed-failure-threshold exceeded\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item id. Should always be provided, unless it's impossible (e.g when failing to create an item)\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " The index of the item within the request array to allow the caller to correlate the request and response items\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the action requested was successful for this item. When this value is false, error should be populated\n"
        },
                {
          "name": "error",
          "type": "All APIs.Rewards._wix_api_ApplicationError",
          "doc": " In case of failure, details about the error\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "changedNamespacesMapEntry",
      "displayName": "changed Namespaces Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Changes per namespaces\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Rewards._wix_common_domainevents_ChangedNamespace",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "currentEntityAsJson",
          "type": "string",
          "doc": ""
        },
                {
          "name": "changedNamespaces",
          "type": "All APIs.Rewards.changedNamespacesMapEntry",
          "doc": "Set of key-value pairs. Changes per namespaces\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ChangedNamespace",
      "displayName": "Changed Namespace Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of changed field paths\n"
        },
                {
          "name": "hasMoreChanges",
          "type": "boolean",
          "doc": " Indicates that more fields changed, this indicator goes along with _has_more_data.\n These other fields are not visible to you in current_entity_as_json\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Rewards._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Rewards._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Reward",
      "displayName": "Reward Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Reward ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Reward name.\n"
        },
                {
          "name": "requiredPoints",
          "type": "integer",
          "doc": " Amount of points required to receive the reward.\n"
        },
                {
          "name": "active",
          "type": "boolean",
          "doc": " Whether the reward is active.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardTypeEnum_RewardType",
          "doc": " Reward type.\n"
        },
                {
          "name": "typeDetails",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward_TypeDetails",
          "doc": " Available reward types.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number. Increments by 1 each time the reward is updated.\nTo prevent conflicting changes, the existing `revision` must be used when updating the reward.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the reward was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the reward was last updated.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Reward_TypeDetails",
      "displayName": "Type Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "discountAmount",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_DiscountAmount",
          "doc": " Discount amount.\n"
        },
                {
          "name": "coupon",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Coupon",
          "doc": "        DiscountPercentage discount_percentage = 8;\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_reward_DiscountAmount",
      "displayName": "Discount Amount Object",
      "locations": [],
      "docs":       {
        "summary": "TODO add max amount of\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "amount",
        "type": "string",
        "doc": " Discount amount when redeeming the reward. Must be a positive value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Coupon",
      "displayName": "Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "templateId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "deleted",
          "type": "boolean",
          "doc": "",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CreateRewardRequest",
      "displayName": "Create Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward to create.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CreateRewardResponse",
      "displayName": "Create Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Created reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkCreateRewardsRequest",
      "displayName": "Bulk Create Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rewards",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
        },
        "doc": " Rewards to create.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkCreateRewardsResponse",
      "displayName": "Bulk Create Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_BulkRewardResult"]
          },
          "doc": " Created rewards.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Rewards._wix_common_BulkActionMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkRewardResult",
      "displayName": "Bulk Reward Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Rewards._wix_common_ItemMetadata",
          "doc": ""
        },
                {
          "name": "item",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_GetRewardRequest",
      "displayName": "Get Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the reward to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_GetRewardResponse",
      "displayName": "Get Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Retrieved reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkGetRewardsRequest",
      "displayName": "Bulk Get Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metaSiteIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkGetRewardsResponse",
      "displayName": "Bulk Get Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rewardsInSite",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_RewardsInSite"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardsInSite",
      "displayName": "Rewards In Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_UpdateRewardRequest",
      "displayName": "Update Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward to update.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_UpdateRewardResponse",
      "displayName": "Update Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Updated reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_DeleteRewardRequest",
      "displayName": "Delete Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the reward to delete.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number. Increments by 1 each time the reward is updated.\nTo prevent conflicting changes, the existing `revision` must be used when updating the reward.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_DeleteRewardResponse",
      "displayName": "Delete Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsRequest",
      "displayName": "List Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Rewards._wix_common_CursorPaging",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsResponse",
      "displayName": "List Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": " Retrieved rewards.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Rewards._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardTypeEnum_RewardType",
      "displayName": "Reward Type Object",
      "locations": [],
      "docs":       {
        "summary": " Available reward types.\n \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> DISCOUNT_AMOUNT <\/code><\/li><li><code> COUPON -         DISCOUNT_PERCENTAGE = 2;\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "DISCOUNT_AMOUNT",
        "COUPON"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.loyalty.loyalty-rewards"}
}