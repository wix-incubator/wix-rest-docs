{
  "name": "Redirect Session",
  "client_id": "https://github.com/wix-private/npm-proto-bazel/tree/master/com_wixpress_proto_redirects-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage redirection of users between Wix Headless client sites and Wix-managed pages.",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Redirect Session",
    "entity": null
  }],
  "relatedGuides": [  {
    "path": "../guides/redirect-session/docs/README.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Redirect Session",
      "methodName": "CreateRedirectSession",
      "serviceName": "RedirectSessionService",
      "tag": "Redirect Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["intent"],
      "params":       [
                {
          "in": "BODY",
          "name": "intent",
          "type": "All APIs.Redirect Session._wix_headless_v1_CreateRedirectSessionRequest_intent",
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "callbacks",
          "type": "All APIs.Redirect Session._wix_headless_v1_CallbackParams",
          "doc": " Details of pages to redirect the visitor back to on the Wix Headless client site.\n\n **Note**: For an authentication redirect, don't pass a post-flow URL here. Instead, pass one in `auth.authRequest.redirectUri`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "preferences",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionPreferences",
          "doc": " Optional preferences for customizing redirection to Wix pages.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateRedirectSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Redirect Session._wix_headless_v1_CreateRedirectSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a URL for redirecting a visitor from an external client site to a Wix page for Wix-managed functionality. \n\n\nThe Create Redirect Session endpoint enables your external Wix Headless client site, built on any platform, to integrate Wix-managed frontend functionality for specific processes.\nFor example, your site can temporarily redirect a visitor to Wix for authentication, or for a checkout process for a bookings, eCommerce, events, or paid plans transaction.\n\nTo initiate a redirect session:\n\n1. Call Create Redirect Session with the details required for Wix to take care of one specific process (for example, authentication or a bookings checkout). Provide one or more callback URLs, so Wix can redirect the user back to your site as appropriate when the process is over.\n1. Redirect your visitor to the URL provided in the response. This URL includes query parameters informing Wix where to redirect the visitor back to on your external site.\n1. Make sure the pages at the callback URLs you provided take care of the next stages in your visitor flow.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/redirect-session/v1/redirect-session",
        "links": [],
        "examples": [        {
          "title": "Create a redirect session for an eCommerce checkout",
          "body": ["curl -X POST 'https://www.wixapis.com/redirect-session/v1/redirect-session' \\\n  -H 'authorization: <AUTH>' \\\n  -d '{\n     \"ecomCheckout\": {\n        \"checkoutId\": \"7d2b240c-5c60-4580-8bc3-948bca6b4e4e\"\n     },\n     \"callbacks\": {\n        \"postFlowUrl\": \"https://www.my-store.com\"\n     }\n  }'"],
          "response": ["{\"redirectSession\": {\n  \"id\": \"<REDIRECT_SESSION_ID>\",\n  \"fullUrl\": \"https://www.checkout.my-site.com/checkout?appSectionParams=%7B%22checkoutId%22%3A%227d2b240c-5c60-4580-8bc3-948bca6b4e4e%22%7D&headlessExternalUrls=~%28home~%27https*3a*2f*2fwww.my-store.com*%29\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRedirectSessionRequest",
        "rpcResponseName": "CreateRedirectSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Redirect Session (Additional Binding 1)",
      "methodName": "CreateRedirectSession",
      "serviceName": "RedirectSessionService",
      "tag": "Redirect Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["intent"],
      "params":       [
                {
          "in": "BODY",
          "name": "intent",
          "type": "All APIs.Redirect Session._wix_headless_v1_CreateRedirectSessionRequest_intent",
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "callbacks",
          "type": "All APIs.Redirect Session._wix_headless_v1_CallbackParams",
          "doc": " Details of pages to redirect the visitor back to on the Wix Headless client site.\n\n **Note**: For an authentication redirect, don't pass a post-flow URL here. Instead, pass one in `auth.authRequest.redirectUri`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "preferences",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionPreferences",
          "doc": " Optional preferences for customizing redirection to Wix pages.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateRedirectSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Redirect Session._wix_headless_v1_CreateRedirectSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a URL for redirecting a visitor from an external client site to a Wix page for Wix-managed functionality. \n\n\nThe Create Redirect Session endpoint enables your external Wix Headless client site, built on any platform, to integrate Wix-managed frontend functionality for specific processes.\nFor example, your site can temporarily redirect a visitor to Wix for authentication, or for a checkout process for a bookings, eCommerce, events, or paid plans transaction.\n\nTo initiate a redirect session:\n\n1. Call Create Redirect Session with the details required for Wix to take care of one specific process (for example, authentication or a bookings checkout). Provide one or more callback URLs, so Wix can redirect the user back to your site as appropriate when the process is over.\n1. Redirect your visitor to the URL provided in the response. This URL includes query parameters informing Wix where to redirect the visitor back to on your external site.\n1. Make sure the pages at the callback URLs you provided take care of the next stages in your visitor flow.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/redirect-session/v1/session",
        "links": [],
        "examples": [        {
          "title": "Create a redirect session for an eCommerce checkout",
          "body": ["curl -X POST 'https://www.wixapis.com/redirect-session/v1/redirect-session' \\\n  -H 'authorization: <AUTH>' \\\n  -d '{\n     \"ecomCheckout\": {\n        \"checkoutId\": \"7d2b240c-5c60-4580-8bc3-948bca6b4e4e\"\n     },\n     \"callbacks\": {\n        \"postFlowUrl\": \"https://www.my-store.com\"\n     }\n  }'"],
          "response": ["{\"redirectSession\": {\n  \"id\": \"<REDIRECT_SESSION_ID>\",\n  \"fullUrl\": \"https://www.checkout.my-site.com/checkout?appSectionParams=%7B%22checkoutId%22%3A%227d2b240c-5c60-4580-8bc3-948bca6b4e4e%22%7D&headlessExternalUrls=~%28home~%27https*3a*2f*2fwww.my-store.com*%29\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRedirectSessionRequest",
        "rpcResponseName": "CreateRedirectSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [  {
    "type": "_wix_headless_v1_RedirectSessionCreatedDomainEvent",
    "name": "Redirect Session Created Webhook",
    "docs": {"summary": ""},
    "topic": "domain_events_wix.headless.v1.redirect_session",
    "tag": "Redirect Session",
    "permissions": [],
    "customLabels": [{"id": "maturity-beta"}],
    "eventType": "wix.headless.v1.redirect_session_created",
    "extra": {"isDomainEvent": true}
  }],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_headless_v1_RedirectSessionCreatedDomainEvent",
      "displayName": "Redirect Session Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.headless.v1.redirect_session`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "RedirectSession ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionEntityCreatedEvent",
      "displayName": "Redirect Session Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSession",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_SlotAvailability",
      "displayName": "Slot Availability Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slot",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_Slot",
          "doc": " The slot for the corresponding session, when the session is either a single session \n or a specific session generated from a recurring session. \n"
        },
                {
          "name": "bookable",
          "type": "boolean",
          "doc": " Whether the slot is bookable. Bookability is determined by checking a \n session's open slots and booking policies. Locks are not taken into\n account.\n"
        },
                {
          "name": "totalSpots",
          "type": "integer",
          "doc": " Total number of spots for this slot.\n For example, if a session has a total of 10 spots and 3 spots are booked, \n `spotsTotal` is 10 and `openSpots` is 7.\n"
        },
                {
          "name": "openSpots",
          "type": "integer",
          "doc": " Number of open spots for this slot.\n"
        },
                {
          "name": "waitingList",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_WaitingList",
          "doc": " An object describing the slot's waitlist and its occupancy.\n"
        },
                {
          "name": "bookingPolicyViolations",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_BookingPolicyViolations",
          "doc": " Booking policy violations for the slot.\n"
        },
                {
          "name": "locked",
          "type": "boolean",
          "doc": " Indicates whether the slot is locked because a waitlist exists. \nWhen a slot frees up, the slot is offered to the next customer on the waitlist. Read-only.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_Slot",
      "displayName": "Slot Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionId",
          "type": "string",
          "doc": " ID for the slot's corresponding session, when the session is either a single session \n or a specific session generated from a recurring session.\n"
        },
                {
          "name": "serviceId",
          "type": "string",
          "doc": " Service ID.\n"
        },
                {
          "name": "scheduleId",
          "type": "string",
          "doc": " Schedule ID.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " The start time of this slot in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)\n format.\n\n If `timezone` is specified,\n dates are based on the local date/time. This means that the timezone offset\n in the `start_date` is ignored.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " The end time of this slot in\n [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339) format.\n\n If `timezone` is specified,\n dates are based on the local date/time. This means that the timezone offset\n in the `end_date` is ignored.\n"
        },
                {
          "name": "timezone",
          "type": "string",
          "doc": " The timezone for which slot availability is to be calculated.\n\n Learn more about [handling Daylight Savings Time (DST) for local time zones](https://dev.wix.com/api/rest/wix-bookings/availability-calendar/query-availability#wix-bookings_availability-calendar_query-availability_handling-daylight-savings-time-dst-for-local-time-zones) \n when calculating availability. \n"
        },
                {
          "name": "resource",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_SlotResource",
          "doc": " The resource required for this slot. Currently, the only supported resource\n is the relevant staff member for the slot.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_Location",
          "doc": " Geographic location of the slot.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_SlotResource",
      "displayName": "Slot Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Resource ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Resource name. Read only. \n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Business location ID. Available only for locations that are business locations, \n meaning the `location_type` is `\"OWNER_BUSINESS\"`.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " The full address of this location.\n"
        },
                {
          "name": "locationType",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_LocationType",
          "doc": " Location type.\n \n - `\"OWNER_BUSINESS\"`: The business address, as set in the site’s general settings.\n - `\"OWNER_CUSTOM\"`: The address as set when creating the service.\n - `\"CUSTOM\"`: The address as set for the individual session.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_WaitingList",
      "displayName": "Waiting List Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSpots",
          "type": "integer",
          "doc": " Total number of spots and open spots for this waitlist.\n For example, a Yoga class with 10 waitlist spots and 3 registered \n on the waitlist has 10 `total_spots` and 7 `open_spots`.\n"
        },
                {
          "name": "openSpots",
          "type": "integer",
          "doc": " Number of open spots for this waitlist.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_BookingPolicyViolations",
      "displayName": "Booking Policy Violations Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tooEarlyToBook",
          "type": "boolean",
          "doc": " Bookings policy violation. Too early to book this slot.\n"
        },
                {
          "name": "tooLateToBook",
          "type": "boolean",
          "doc": " Bookings policy violation. Too late to book this slot.\n"
        },
                {
          "name": "bookOnlineDisabled",
          "type": "boolean",
          "doc": " Bookings policy violation. Online booking is disabled for this slot.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_identity_oauth2_v1_AuthorizeRequest",
      "displayName": "Authorize Request Object",
      "locations": [],
      "docs":       {
        "summary": " AuthorizeRequest is sent by the client to the authorization server to initiate\n the authorization process.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "clientId",
          "type": "string",
          "doc": " ID of the Wix OAuth app requesting authorization.\n"
        },
                {
          "name": "responseType",
          "type": "string",
          "doc": " Desired authorization [grant type](https://auth0.com/docs/authenticate/protocols/oauth#grant-types).\n\nSupported values:\n+ `code`: The endpoint returns an authorization code that can be used to obtain an access token.\n"
        },
                {
          "name": "redirectUri",
          "type": "string",
          "doc": " URI to redirect the browser to after authentication and authorization. The browser is redirected to this URI whether the authentication and authorization process is successful or not.\n"
        },
                {
          "name": "scope",
          "type": "string",
          "doc": " Desired scope of access. If this field is left empty, only an access token is granted. \n To received a refresh token, pass `offline_access` as the value of this field.\n"
        },
                {
          "name": "state",
          "type": "string",
          "doc": " A value used to confirm the state of an application before and after it makes an authorization\n request. If a value for this field is set in the request, it's added to the `redirectUri` when the browser\n is redirected there.  \n Learn more about [using the state parameter](https://auth0.com/docs/secure/attack-protection/state-parameters).\n"
        },
                {
          "name": "responseMode",
          "type": "string",
          "doc": "Desired response format.\n\nSupported values:\n+ `query`: The response parameters are encoded as query string parameters and added to the `redirectUri` when redirecting.\n+ `fragment`: The response parameters are encoded as URI fragment parameters and added to the `redirectUri` when redirecting.\n+ `web_message`: The response parameters are encoded as a JSON object and added to the body of a [web message response](https://datatracker.ietf.org/doc/html/draft-sakimura-oauth-wmrm-00). \n\nDefault value: `query`\n"
        },
                {
          "name": "codeChallenge",
          "type": "string",
          "doc": " Code challenge to use for PKCE verification.\n This field is only used if `responseType` is set to `code`.\n"
        },
                {
          "name": "codeChallengeMethod",
          "type": "string",
          "doc": " Code challenge method to use for PKCE verification. \nThis field is only used if `responseType` is set to `code`.\n\nSupported values:\n+ `S256`: The code challenge is transformed using SHA-256 encyption.\n+ `S512`: The code challenge is transformed using SHA-512 encyption.\n"
        },
                {
          "name": "sessionToken",
          "type": "string",
          "doc": " Session token of the site visitor to authorize.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSession",
      "displayName": "Redirect Session Object",
      "locations": [],
      "docs":       {
        "summary": "*\nInformation for redirecting a visitor from an external Wix Headless client site to a Wix page for Wix-managed functionality.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the redirect session created.\n"
        },
                {
          "name": "fullUrl",
          "type": "string",
          "doc": " The full URL of the Wix page to redirect the visitor to. This URL includes query parameters informing Wix where to redirect the visitor back to on the Wix Headless client site.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_CallbackParams",
      "displayName": "Callback Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "thankYouPageUrl",
          "type": "string",
          "doc": " The URL for a custom thank you page implemented on a site outside of Wix. The visitor is directed to this page after the Wix-managed process is completed.\n If the process is abandoned or interrupted, the visitor is redirected to the URL specified in `postFlowUrl` instead.\n\n Default: If you don't pass a URL, the visitor is redirected to a Wix thank you page, and from there to the URL specified in `postFlowUrl`.\n"
        },
                {
          "name": "postFlowUrl",
          "type": "string",
          "doc": " The URL Wix should redirect the visitor to when the Wix-managed process is completed, abandoned, or interrupted.\n\n **Note**: For an authentication redirect, don't pass a URL here. Instead, pass one in `auth.authRequest.redirectUri`.\n"
        },
                {
          "name": "loginUrl",
          "type": "string",
          "doc": " The URL for a custom login page implemented outside of Wix.\n\n Default: If you don't pass a URL, a Wix login page is used.\n"
        },
                {
          "name": "bookingsServiceListUrl",
          "type": "string",
          "doc": " The URL for a custom bookings services page implemented outside of Wix.\n\n Default: If you don't pass a URL, a Wix bookings services page is used.\n"
        },
                {
          "name": "cartPageUrl",
          "type": "string",
          "doc": " The URL for a custom eCommerce cart page implemented outside of Wix.\n\n Default: If you don't pass a URL, a Wix cart page is used.\n"
        },
                {
          "name": "planListUrl",
          "type": "string",
          "doc": " The URL for a custom pricing plans page implemented outside of Wix.\n\n Default: If you don't pass a URL, a Wix pricing plans page is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionBookingsCheckoutParams",
      "displayName": "Redirect Session Bookings Checkout Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timezone",
          "type": "string",
          "doc": " The timezone to use when presenting the selected slot to users, in [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format. For example, `America/Santiago`.\n\n Default: If you don't specify a timezone, the timezone in `slotAvailability.slot.timezone` is used.\n"
        },
                {
          "name": "serviceId",
          "type": "string",
          "doc": " **Required.** ID of the service for which to select the slot. Use [Query Services](https://dev.wix.com/api/rest/wix-bookings/services-v2/query-services) to obtain a service ID.\n"
        },
                {
          "name": "slotAvailability",
          "type": "All APIs.Redirect Session._com_wixpress_bookings_availability_SlotAvailability",
          "doc": " **Required.** The calendar slot to check out.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionAuthorizeParams",
      "displayName": "Redirect Session Authorize Params Object",
      "locations": [],
      "docs":       {
        "summary": " Deprecated - replaced by RedirectSessionAuthParams\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "auth",
        "type": "All APIs.Redirect Session._wix_identity_oauth2_v1_AuthorizeRequest",
        "doc": " (Required) The authorization request to be sent to the authorization server\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionAuthParams",
      "displayName": "Redirect Session Auth Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "authRequest",
        "type": "All APIs.Redirect Session._wix_identity_oauth2_v1_AuthorizeRequest",
        "doc": " **Required.** The authorization request to send to the authorization server.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionEcomCheckoutParams",
      "displayName": "Redirect Session Ecom Checkout Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "checkoutId",
        "type": "string",
        "doc": " **Required.** ID of the checkout to process. Use [Create Checkout From Cart](https://dev.wix.com/api/rest/wix-ecommerce/cart/create-checkout-from-cart) to create a checkout and obtain an ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionPaidPlansCheckoutParams",
      "displayName": "Redirect Session Paid Plans Checkout Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "planId",
          "type": "string",
          "doc": " **Required.** ID of the paid plan selected. Use [Query Public Plans](https://dev.wix.com/api/rest/wix-pricing-plans/pricing-plans/plans/query-public-plans) to obtain a paid plan ID.\n"
        },
                {
          "name": "checkoutData",
          "type": "string",
          "doc": " For use when pricing plan selection is part of a checkout flow, only if the paid plan selection page is implemented on an external Wix Headless client site.\n In this case, a string is received by the external pricing plans page as a `checkoutData` query parameter. Pass this string back here when redirecting back to Wix for checkout.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionEventsCheckoutParams",
      "displayName": "Redirect Session Events Checkout Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "reservationId",
          "type": "string",
          "doc": " **Required.** ID of the temporary event reservation. Use [Create Reservation](https://dev.wix.com/api/rest/wix-events/wix-events/checkout/create-reservation) to reserve a ticket temporarily and obtain a reservation ID.\n"
        },
                {
          "name": "eventSlug",
          "type": "string",
          "doc": " **Required.** URL-friendly event slug, generated from the event title of the event. For example, `my-event-4`. Use [Query Events](https://dev.wix.com/api/rest/wix-events/wix-events/event/query-events) to obtain an event slug.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionLoginParams",
      "displayName": "Redirect Session Login Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionMembersAccountParams",
      "displayName": "Redirect Session Members Account Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "section",
        "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionMembersAccountParams_MembersAccountSection",
        "doc": " The member account page to redirect to.\n\n Default: `ACCOUNT_INFO`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionLogoutParams",
      "displayName": "Redirect Session Logout Params Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "clientId",
        "type": "string",
        "doc": " **Required.** ID of the OAuth app authorizing the client.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionPreferences_CustomMemberPaths",
      "displayName": "Custom Member Paths Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountPagePath",
          "type": "string",
          "doc": " Path of the account page in the site's members area. Required if `useGenericWixPages` is `false` and the account page path has been changed in the Wix editor.\n"
        },
                {
          "name": "profilePagePath",
          "type": "string",
          "doc": " Path of the member profile page in the site's members area. Required if `useGenericWixPages` is `false` and the member profile page path has been changed in the Wix editor.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionPreferences",
      "displayName": "Redirect Session Preferences Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "useGenericWixPages",
        "type": "boolean",
        "doc": " Whether to use a standard Wix template for Wix-managed pages the visitor is redirected to. Set to `false` only if your client site connects with a Wix site that has custom pages.\n\n Default: `true`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_CreateRedirectSessionRequest",
      "displayName": "Create Redirect Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "intent",
          "type": "All APIs.Redirect Session._wix_headless_v1_CreateRedirectSessionRequest_intent",
          "doc": ""
        },
                {
          "name": "callbacks",
          "type": "All APIs.Redirect Session._wix_headless_v1_CallbackParams",
          "doc": " Details of pages to redirect the visitor back to on the Wix Headless client site.\n\n **Note**: For an authentication redirect, don't pass a post-flow URL here. Instead, pass one in `auth.authRequest.redirectUri`.\n"
        },
                {
          "name": "preferences",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionPreferences",
          "doc": " Optional preferences for customizing redirection to Wix pages.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_CreateRedirectSessionRequest_intent",
      "displayName": "intent Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingsCheckout",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionBookingsCheckoutParams",
          "doc": " Information required for generating a custom URL for a Wix Bookings checkout.\n"
        },
                {
          "name": "ecomCheckout",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionEcomCheckoutParams",
          "doc": " Information required for generating a custom URL for a Wix eCommerce checkout.\n"
        },
                {
          "name": "eventsCheckout",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionEventsCheckoutParams",
          "doc": " Information required for generating a custom URL for a Wix Events checkout.\n"
        },
                {
          "name": "paidPlansCheckout",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionPaidPlansCheckoutParams",
          "doc": " Information required for generating a custom URL for a Wix Paid Plans checkout.\n"
        },
                {
          "name": "login",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionLoginParams",
          "doc": " Pass an empty object in this parameter to generate a URL for Wix login without first checking whether the visitor is authenticated.\n"
        },
                {
          "name": "logout",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionLogoutParams",
          "doc": " Information required for generating a custom URL to log out from a Wix account. This process invalidates the visitor or member token and clears cookies associated with the Wix domain from their browser.\n"
        },
                {
          "name": "auth",
          "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSessionAuthParams",
          "doc": " Information required for generating a custom URL for Wix authentication.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_headless_v1_CreateRedirectSessionResponse",
      "displayName": "Create Redirect Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "redirectSession",
        "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSession",
        "doc": " Details for redirecting the visitor to a Wix page.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_SignInURLRequest",
      "displayName": "Sign In URL Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "clientId",
        "type": "string",
        "doc": " The oauth app id used in order to pull the allowed domains from, has to correspond to the same metasite as the site in context\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_SignInURLResponse",
      "displayName": "Sign In URL Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "redirectSession",
        "type": "All APIs.Redirect Session._wix_headless_v1_RedirectSession",
        "doc": " The Wix URL details to redirect into\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_ValidateCallbackURLRequest",
      "displayName": "Validate Callback URL Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "callbackUrl",
          "type": "string",
          "doc": " An external URL to validate\n"
        },
                {
          "name": "callbackType",
          "type": "All APIs.Redirect Session._wix_headless_v1_ValidateCallbackURLRequest_CallbackType",
          "doc": " The type of the callback URL\n"
        },
                {
          "name": "clientId",
          "type": "string",
          "doc": " The oauth app id used in order to pull the allowed domains from, has to correspond to the same metasite as the site in context\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_ValidateCallbackURLResponse",
      "displayName": "Validate Callback URL Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "isValid",
        "type": "boolean",
        "doc": " is the provided url allowed for the given client id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_availability_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> OWNER_BUSINESS <\/code><\/li><li><code> OWNER_CUSTOM <\/code><\/li><li><code> CUSTOM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "OWNER_BUSINESS",
        "OWNER_CUSTOM",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_RedirectSessionMembersAccountParams_MembersAccountSection",
      "displayName": "Members Account Section Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ACCOUNT_INFO -  default - account info section in \"my account\"\n <\/code><\/li><li><code> BOOKINGS -  My Bookings section in \"my account\"\n <\/code><\/li><li><code> ORDERS -  My Orders section in \"my account\"\n <\/code><\/li><li><code> SUBSCRIPTIONS -  Subscriptions section in \"my account\"\n <\/code><\/li><li><code> EVENTS -  Events section in \"my account\"\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ACCOUNT_INFO",
        "BOOKINGS",
        "ORDERS",
        "SUBSCRIPTIONS",
        "EVENTS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_headless_v1_ValidateCallbackURLRequest_CallbackType",
      "displayName": "Callback Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  Invalid value - default\n <\/code><\/li><li><code> LOGOUT -  The callback URL is used for the logout flow\n <\/code><\/li><li><code> CHECKOUT -  The callback URL is used for a checkout flow\n <\/code><\/li><li><code> AUTHORIZE -  The callback URL is used for the authorize flow\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "LOGOUT",
        "CHECKOUT",
        "AUTHORIZE"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.headless.redirects-api"}
}