{
  "name": "Wix Data",
  "client_id": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Access and manage a site's data.",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Data Items",
      "entity": "_com_wixpress_cloud_data_api_data_DataItem",
      "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/data/message/data-item.proto"
    },
        {
      "name": "Data Collections",
      "entity": "_com_wixpress_cloud_data_api_collectionservice_DataCollection",
      "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
    },
        {
      "name": "Indexes",
      "entity": "_com_wixpress_cloud_data_api_index_Index",
      "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/index-service.proto"
    },
        {
      "name": "External Database Connections",
      "entity": "_com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
      "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/externaldatabase/external-database-connection-service.proto"
    },
        {
      "name": "Data Collection Sharing",
      "entity": null
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/wix-data/docs/DataCollectionServiceIntro.md",
      "name": "Introduction",
      "tag": "Data Collections"
    },
        {
      "path": "../guides/wix-data/docs/Indexing.md",
      "name": "Introduction",
      "tag": "Indexes"
    },
        {
      "path": "../guides/wix-data/docs/WixDataServiceIntro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/wix-data/docs/IndexUseCases.md",
      "name": "Querying Indexed Data",
      "tag": "Indexes"
    },
        {
      "path": "../guides/wix-data/docs/DataItemsServiceIntro.md",
      "name": "Introduction",
      "tag": "Data Items"
    },
        {
      "path": "../guides/wix-data/docs/IndexesAndQuerySpeed.md",
      "name": "Indexes and Query Speed",
      "tag": "Indexes"
    },
        {
      "path": "../guides/wix-data/docs/EventualConsistency.md",
      "name": "Eventual Consistency"
    },
        {
      "path": "../guides/wix-data/docs/ExternalDatabaseConnections.md",
      "name": "Introduction",
      "tag": "External Database Connections"
    },
        {
      "path": "../guides/wix-data/docs/IndexTypes.md",
      "name": "Index Types",
      "tag": "Indexes"
    }
  ],
  "operations":   [
        {
      "name": "Aggregate Data Items",
      "methodName": "AggregateDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection on which to run the aggregation.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "initialFilter",
          "type": "struct",
          "doc": " Filter applied to the collection's data prior to running the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "aggregation",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation",
          "doc": " Aggregation applied to the data.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "finalFilter",
          "type": "struct",
          "doc": " Filter applied to the processed data following the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_PagingMethod",
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Sorting"]
          },
          "doc": " Sort object in the following format:\n `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "AggregateDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Runs an aggregation on a data collection and returns the resulting list of items.\n\n\n An aggregation enables you to perform certain calculations on your collection data, or on groups of items that you define, to retrieve meaningful summaries.\n You can also add paging, filtering, and sorting preferences to your aggregation to retrieve exactly what you need.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/aggregate",
        "links": [],
        "examples":         [
                    {
            "title": "Calculate the sum of population in every state of year 2022",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/aggregate' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"initialFilter\": {\n        \"year\": 2022\n    },\n    \"aggregation\": {\n        \"groupingFields\": [\"state\"],\n        \"operations\": [\n            {\n                \"resultFieldName\": \"totalPopulation\",\n                \"sum\": {\n                    \"itemFieldName\": \"population\"\n                }\n            }\n        ]\n    }\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"_id\": {\"state\": \"New York\"},\n      \"totalPopulation\": 2.0E7,\n      \"state\": \"New York\"\n    },\n        {\n      \"_id\": {\"state\": \"California\"},\n      \"totalPopulation\": 3.9E7,\n      \"state\": \"California\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"tooManyToCount\": false,\n    \"hasNext\": false\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Calculate the total population in every state of year 2022 and return only those where population is greater than 1 million.",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/aggregate' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"initialFilter\": {\n        \"year\": 2022\n    },\n    \"aggregation\": {\n        \"groupingFields\": [\"state\"],\n        \"operations\": [\n            {\n                \"resultFieldName\": \"totalPopulation\",\n                \"sum\": {\n                    \"itemFieldName\": \"population\"\n                }\n            }\n        ]\n    },\n    \"finalFilter\": {\n        \"totalPopulation\": {\n            \"$gt\": 1000000\n        }\n    },\n    \"sort\": [\n        {\n            \"fieldName\": \"totalPopulation\",\n            \"order\": \"ASC\"\n        }\n    ]\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"_id\": {\"state\": \"New York\"},\n      \"totalPopulation\": 2.0E7,\n      \"state\": \"New York\"\n    },\n        {\n      \"_id\": {\"state\": \"California\"},\n      \"totalPopulation\": 3.9E7,\n      \"state\": \"California\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"tooManyToCount\": false,\n    \"hasNext\": false\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AggregateDataItemsRequest",
        "rpcResponseName": "AggregateDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Insert Data Item References",
      "methodName": "BulkInsertDataItemReferences",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemReferences",
        "dataItemReferences.referringItemFieldName",
        "dataItemReferences.referringItemId",
        "dataItemReferences.referencedItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring items.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemReferences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference"]
          },
          "doc": " References to insert.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the inserted data item references.\n When `true`, the `results` objects contain a `dataItemReference` field.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkInsertDataItemReferences",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkInsertDataItemReferencesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Inserts one or more references in the specified fields of items in a collection.\n\n\n This endpoint adds one or more references to a collection.\n Each new reference in the `dataItemReferences` field specifies a referring item's ID, the field in which to insert the reference, and the ID of the referenced item.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/insert-references",
        "links": [],
        "examples": [        {
          "title": "Bulk insert references",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/insert-references' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"dataItemReferences\": [\n        {\n            \"referringItemFieldName\": \"songs\",\n            \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n            \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n        },\n        {\n            \"referringItemFieldName\": \"songs\",\n            \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n            \"referencedItemId\": \"e7fe3827-5102-470a-a10a-b6221dd0b4a9\"\n        }\n    ]\n}'"],
          "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"INSERT\",\n      \"referenceMetadata\":       {\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"INSERT\",\n      \"referenceMetadata\":       {\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkInsertDataItemReferencesRequest",
        "rpcResponseName": "BulkInsertDataItemReferencesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Insert Data Items",
      "methodName": "BulkInsertDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItems"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the items.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to insert.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the inserted data items.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkInsertDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkInsertDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds multiple items to a collection.\n\n\n When each item is inserted into a collection, its ID is automatically assigned to random value.\n You can optionally provide your own ID when inserting the item. If you specify an ID that already exists in the collection, the insertion will fail.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/insert",
        "links": [],
        "examples":         [
                    {
            "title": "Bulk insert new items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/insert' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ]\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"aa019290-b546-4b3e-b302-8f6474baedf9\",\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"39cbd938-7b42-4e33-8acf-ff1ce278664c\",\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Bulk insert new items and return inserted items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/insert' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ],\n    \"returnEntity\": true\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n        \"data\":         {\n          \"_id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"Los Angeles\",\n          \"state\": \"California\",\n          \"population\": 3800000,\n          \"year\": 2022\n        }\n      }\n    },\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"originalIndex\": 1,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"data\":         {\n          \"_id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"San Francisco\",\n          \"state\": \"California\",\n          \"population\": 840000,\n          \"year\": 2022\n        }\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkInsertDataItemsRequest",
        "rpcResponseName": "BulkInsertDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Remove Data Item References",
      "methodName": "BulkRemoveDataItemReferences",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemReferences",
        "dataItemReferences.referringItemFieldName",
        "dataItemReferences.referringItemId",
        "dataItemReferences.referencedItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring items.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemReferences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference"]
          },
          "doc": " References to remove.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkRemoveDataItemReferences",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkRemoveDataItemReferencesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes one or more references.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/remove-references",
        "links": [],
        "examples": [        {
          "title": "Bulk remove references",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/remove-references' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"dataItemReferences\": [\n        {\n            \"referringItemFieldName\": \"songs\",\n            \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n            \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n        },\n        {\n            \"referringItemFieldName\": \"songs\",\n            \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n            \"referencedItemId\": \"e7fe3827-5102-470a-a10a-b6221dd0b4a9\"\n        }\n    ]\n}'"],
          "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"DELETE\",\n      \"referenceMetadata\":       {\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"DELETE\",\n      \"referenceMetadata\":       {\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkRemoveDataItemReferencesRequest",
        "rpcResponseName": "BulkRemoveDataItemReferencesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Remove Data Items",
      "methodName": "BulkRemoveDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemIds"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to remove the item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of data items to remove.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkRemoveDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkRemoveDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes multiple items from a collection.\n\n\n If any items in other collections reference the removed items in reference or multi-reference fields, those fields are cleared.\n\n > **Note:** Once an item has been removed from a collection, it can't be restored.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/remove",
        "links": [],
        "examples": [        {
          "title": "Bulk remove existing items",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/remove' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItemIds\": [\n        \"6d717171-6f4d-4794-b6ea-7aea0071a76b\",\n        \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\"\n    ]\n}'"],
          "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"DELETE\",\n      \"itemMetadata\":       {\n        \"id\": \"6d717171-6f4d-4794-b6ea-7aea0071a76b\",\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"DELETE\",\n      \"itemMetadata\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkRemoveDataItemsRequest",
        "rpcResponseName": "BulkRemoveDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Save Data Items",
      "methodName": "BulkSaveDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItems"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert or update the items.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to insert or update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the saved data item.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkSaveDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkSaveDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Inserts or updates multiple items in a collection.\n\n\n The Bulk Save Data Items endpoint inserts or updates each item provided, depending on whether it already exists in the collection. For each item:\n\n + If you don't provide an ID, a new item is created.\n\n + If you provide an ID that doesn't exist in the collection, a new item is created with that ID.\n\n + If an item with the ID you provide already exists in the collection, that item is updated. When an item is updated, its `data._updatedDate` field is changed to the current date and time.\n\n > **Note:** When you provide an item with an ID that already exists in the collection, the item you provide completely replaces the existing item with that ID.\n > This means that all of the item's previous fields and values are lost.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/save",
        "links": [],
        "examples":         [
                    {
            "title": "Bulk save new items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/save' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ]\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"aa019290-b546-4b3e-b302-8f6474baedf9\",\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"39cbd938-7b42-4e33-8acf-ff1ce278664c\",\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Bulk save new items by inserting first one and updating another",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/save' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ],\n    \"returnEntity\": true\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"INSERT\",\n      \"itemMetadata\":       {\n        \"id\": \"6d717171-6f4d-4794-b6ea-7aea0071a76b\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"6d717171-6f4d-4794-b6ea-7aea0071a76b\",\n        \"data\":         {\n          \"_id\": \"6d717171-6f4d-4794-b6ea-7aea0071a76b\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"Los Angeles\",\n          \"state\": \"California\",\n          \"population\": 3800000,\n          \"year\": 2022\n        }\n      }\n    },\n        {\n      \"action\": \"UPDATE\",\n      \"itemMetadata\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"originalIndex\": 1,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"data\":         {\n          \"_id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"San Francisco\",\n          \"state\": \"California\",\n          \"population\": 840000,\n          \"year\": 2022\n        }\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkSaveDataItemsRequest",
        "rpcResponseName": "BulkSaveDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Update Data Items",
      "methodName": "BulkUpdateDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItems"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to update items.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the updated data items.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkUpdateDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates multiple items in a collection.\n\n\n This endpoint replaces each specified data item's existing data with the payload provided in the request.\n\n Each item in the request must include an ID. If an item is found in the specified collection with\n the same ID, that item is updated. If the collection doesn't contain an item with that ID, the update fails.\n\n When an item is updated, its `data._updatedDate` field is changed to the current date and time.\n\n > **Note:**\n > After each item is updated, it only contains the fields included in the request. If the existing item has fields with values and those fields\n > aren't included in the updated item, their values are lost.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/bulk/items/update",
        "links": [],
        "examples":         [
                    {
            "title": "Bulk update existing items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/update' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ]\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"UPDATE\",\n      \"itemMetadata\":       {\n        \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n        \"originalIndex\": 0,\n        \"success\": true\n      }\n    },\n        {\n      \"action\": \"UPDATE\",\n      \"itemMetadata\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"originalIndex\": 1,\n        \"success\": true\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Bulk update existing items and return updated items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/bulk/items/update' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItems\": [\n        {\n            \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"Los Angeles\",\n                \"population\": 3800000\n            }\n        },\n        {\n            \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n            \"data\": {\n                \"state\": \"California\",\n                \"year\": 2022,\n                \"city\": \"San Francisco\",\n                \"population\": 840000\n            }\n        }\n    ],\n    \"returnEntity\": true\n}'"],
            "response": ["{\n  \"results\":   [\n        {\n      \"action\": \"UPDATE\",\n      \"itemMetadata\":       {\n        \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n        \"data\":         {\n          \"_id\": \"40877d18-c5fe-4ed5-b495-d84bb4c027bd\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"Los Angeles\",\n          \"state\": \"California\",\n          \"population\": 3800000,\n          \"year\": 2022\n        }\n      }\n    },\n        {\n      \"action\": \"UPDATE\",\n      \"itemMetadata\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"originalIndex\": 1,\n        \"success\": true\n      },\n      \"dataItem\":       {\n        \"id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n        \"data\":         {\n          \"_id\": \"6c38b4f7-7b8d-4702-9283-66a5889f8e17\",\n          \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n          \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n          \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n          \"city\": \"San Francisco\",\n          \"state\": \"California\",\n          \"population\": 840000,\n          \"year\": 2022\n        }\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateDataItemsRequest",
        "rpcResponseName": "BulkUpdateDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Cancel Data Collection Sharing",
      "methodName": "CancelDataCollectionSharing",
      "serviceName": "DataCollectionSharingService",
      "tag": "Data Collection Sharing",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " collection ID on current site\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "targetSiteId",
          "type": "string",
          "doc": " Target site ID to remove shared collection from\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CancelDataCollectionSharing",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_CancelDataCollectionSharingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes shared collection from target\n called from source site context\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v1/shared-data-collections:cancelSharing",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CancelDataCollectionSharingRequest",
        "rpcResponseName": "CancelDataCollectionSharingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Connect Owned Data Collection",
      "methodName": "ConnectOwnedDataCollection",
      "serviceName": "DataCollectionSharingService",
      "tag": "Data Collection Sharing",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "sourceSiteId",
          "type": "string",
          "doc": " Meta Site ID to share collection from\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "details",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharingDetails",
          "doc": " Sharing details\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ConnectOwnedDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_ConnectOwnedDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Connects shared data collection from other site when user owns it on the source\n requires share permissions on current site and connect permissions on target site\n doesn't create (or require) any sharing policy (ad-hoc)\n same action as `ShareAndConnectDataCollection` but should be called from target site\n Possible failures (TODO codes):\n  - insufficient permissions\n  - filter is invalid\n  - namespace collision\n  - collection has single reference to unshared collection\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v1/shared-data-collections:connectOwned",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ConnectOwnedDataCollectionRequest",
        "rpcResponseName": "ConnectOwnedDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Count Data Items",
      "methodName": "CountDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection for which to count query results.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n\n `\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n }`.\n\n Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CountDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_CountDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Counts the number of items in a data collection that match the provided filtering preferences.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/count",
        "links": [],
        "examples": [        {
          "title": "Count items",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/count' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"filter\": {\n        \"state\": \"California\"\n    }\n}'"],
          "response": ["{\"totalCount\": 4} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CountDataItemsRequest",
        "rpcResponseName": "CountDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Data Collection",
      "methodName": "CreateDataCollection",
      "serviceName": "DataCollectionService",
      "tag": "Data Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "collection.id",
        "collection.fields",
        "collection.permissions"
      ],
      "params": [      {
        "in": "BODY",
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Collection details.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "CreateDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_CreateDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new data collection.\n\n The request body must include an ID, details for at least 1 field, and a permissions object. If any of these are missing, the collection isn't created.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/collections",
        "links": [],
        "examples":         [
                    {
            "title": "Create a collection",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/collections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--d '{\n  \"id\": \"my-first-collection\",\n  \"displayName\": \"My First Collection\",\n  \"fields\": [\n    {\n      \"key\": \"name\", \n      \"displayName\": \"First Name\", \n      \"type\": \"TEXT\"\n    },\n    {\n      \"key\": \"age\", \n      \"displayName\": \"Age\", \n      \"type\": \"NUMBER\"\n    }\n  ]\n}'"],
            "response": ["{\"collection\": {\n  \"id\": \"my-first-collection\",\n  \"collectionType\": \"DOCSTORE\",\n  \"maxPageSize\": 1000,\n  \"displayName\": \"My First Collection\",\n  \"defaultDisplayOrder\":   {\n    \"fieldKey\": \"name\",\n    \"direction\": \"ASC\"\n  },\n  \"displayNamespace\": null,\n  \"displayField\": \"name\",\n  \"allowedOperations\":   [\n    \"AGGREGATE\",\n    \"BULK_INSERT\",\n    \"BULK_REMOVE\",\n    \"BULK_SAVE\",\n    \"BULK_UPDATE\",\n    \"COUNT\",\n    \"DISTINCT\",\n    \"FIND\",\n    \"GET\",\n    \"INSERT\",\n    \"INSERT_REFERENCE\",\n    \"IS_REFERENCED\",\n    \"QUERY_REFERENCED\",\n    \"REMOVE\",\n    \"REMOVE_REFERENCE\",\n    \"REPLACE_REFERENCES\",\n    \"SAVE\",\n    \"TRUNCATE\",\n    \"UPDATE\"\n  ],\n  \"fields\":   [\n        {\n      \"key\": \"name\",\n      \"displayName\": \"First Name\",\n      \"type\": \"TEXT\"\n    },\n        {\n      \"key\": \"age\",\n      \"displayName\": \"Age\",\n      \"type\": \"NUMBER\"\n    }\n  ],\n  \"permissions\":   {\n    \"insert\": \"ADMIN\",\n    \"update\": \"ADMIN\",\n    \"remove\": \"ADMIN\",\n    \"read\": \"ADMIN\"\n  },\n  \"translatable\": null,\n  \"revision\": 1,\n  \"plugins\": [],\n  \"pagingModes\": [\"OFFSET\"],\n  \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n  \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create a collection with a multi-reference field",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/collections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--d '{\n  \"id\": \"my-favorite-artists\",\n  \"displayName\": \"My Favorite Artists\",\n  \"fields\": [\n    {\n      \"key\": \"name\", \n      \"displayName\": \"Artist Name\", \n      \"type\": \"TEXT\"\n    },\n    {\n      \"key\": \"date_of_birth\", \n      \"displayName\": \"Date of birth\", \n      \"type\": \"DATE\"},\n    {\n      \"key\": \"songs_multi_ref\",\n      \"displayName\": \"Songs\",\n      \"type\": \"MULTI_REFERENCE\",\n      \"typeMetadata\": {\n        \"multiReference\": {\n          \"referencedCollection\": \"songs-collection\",\n          \"referencingFieldKey\": \"my-favorite-artists\",\n          \"referencingDisplayName\": \"Performed by\"\n        }\n      }\n    }\n  ]\n}'"],
            "response": ["{\"collection\": {\n  \"id\": \"my-first-collection\",\n  \"collectionType\": \"DOCSTORE\",\n  \"maxPageSize\": 1000,\n  \"displayName\": \"My First Collection\",\n  \"defaultDisplayOrder\":   {\n    \"fieldKey\": \"name\",\n    \"direction\": \"ASC\"\n  },\n  \"displayNamespace\": null,\n  \"displayField\": \"name\",\n  \"allowedOperations\":   [\n    \"AGGREGATE\",\n    \"BULK_INSERT\",\n    \"BULK_REMOVE\",\n    \"BULK_SAVE\",\n    \"BULK_UPDATE\",\n    \"COUNT\",\n    \"DISTINCT\",\n    \"FIND\",\n    \"GET\",\n    \"INSERT\",\n    \"INSERT_REFERENCE\",\n    \"IS_REFERENCED\",\n    \"QUERY_REFERENCED\",\n    \"REMOVE\",\n    \"REMOVE_REFERENCE\",\n    \"REPLACE_REFERENCES\",\n    \"SAVE\",\n    \"TRUNCATE\",\n    \"UPDATE\"\n  ],\n  \"fields\":   [\n        {\n      \"key\": \"name\",\n      \"displayName\": \"First Name\",\n      \"type\": \"TEXT\"\n    },\n        {\n      \"key\": \"age\",\n      \"displayName\": \"Age\",\n      \"type\": \"NUMBER\"\n    }\n  ],\n  \"permissions\":   {\n    \"insert\": \"ADMIN\",\n    \"update\": \"ADMIN\",\n    \"remove\": \"ADMIN\",\n    \"read\": \"ADMIN\"\n  },\n  \"translatable\": null,\n  \"revision\": 1,\n  \"plugins\": [],\n  \"pagingModes\": [\"OFFSET\"],\n  \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n  \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateDataCollectionRequest",
        "rpcResponseName": "CreateDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create External Database Connection",
      "methodName": "CreateExternalDatabaseConnection",
      "serviceName": "ExternalDatabaseConnectionService",
      "tag": "External Database Connections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "externalDatabaseConnection.name",
        "externalDatabaseConnection.endpoint",
        "externalDatabaseConnection.configuration"
      ],
      "params": [      {
        "in": "BODY",
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " External database connection details.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "CreateExternalDatabaseConnection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_CreateExternalDatabaseConnectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new external database connection.\n\n The request body must include a name, base URL, and configuration details for the external database within the `externalDatabaseConnection` body parameter. \n If any of these are missing, the external database connection isn't created.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v1/external-database-connections",
        "links": [],
        "examples":         [
                    {
            "title": "Create an external database connection",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"externalDatabaseConnection\": {\n    \"name\":\"MyExternalDatabase\",\n    \"endpoint\":\"https://example.com/my-external-database\",\n    \"configuration\":{\n      \"secretKey\":\"74dbd6d6-ec5b-4668-8229-c77379bc6431\"\n    }\n  }\n}'"],
            "response": ["{\"externalDatabaseConnection\": {\n  \"name\": \"MyExternalDatabase\",\n  \"endpoint\": \"https://example.com/my-external-database\",\n  \"configuration\": {\"secretKey\": \"74dbd6d6-ec5b-4668-8229-c77379bc6431\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create an external database connection (example with more extensive configuration)",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"externalDatabaseConnection\": {\n    \"name\":\"MyExternalDatabase\",\n    \"endpoint\":\"https://example.com/my-external-database\",\n    \"configuration\":{\n      \"secretKey\":\"74dbd6d6-ec5b-4668-8229-c77379bc6431\",\n      \"tenantId\":\"my-wix-site\",\n      \"environment\":\"PRODUCTION\",\n      \"collections\":[\n        \"products\",\n        \"categories\"\n      ]\n    }\n  }\n}'"],
            "response": ["{\"externalDatabaseConnection\": {\n  \"name\": \"MyExternalDatabase\",\n  \"endpoint\": \"https://example.com/my-external-database\",\n  \"configuration\":   {\n    \"secretKey\": \"74dbd6d6-ec5b-4668-8229-c77379bc6431\",\n    \"tenantId\": \"my-wix-site\",\n    \"environment\": \"PRODUCTION\",\n    \"collections\":     [\n      \"products\",\n      \"categories\"\n    ]\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateExternalDatabaseConnectionRequest",
        "rpcResponseName": "CreateExternalDatabaseConnectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Index",
      "methodName": "CreateIndex",
      "serviceName": "IndexService",
      "tag": "Indexes",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "index",
        "index.name",
        "index.fields",
        "index.fields.path"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "index",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index",
          "doc": " Details of the index to be created.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which to generate the index.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateIndex",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_index_CreateIndexResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates an index for a data collection.\n\n The index can't be used immediately, as the process of generating the index takes time.\n You can check whether your index is ready using the [List Indexes](https://dev.wix.com/api/rest/wix-data/wix-data/indexes/list-indexes) endpoint. \n\n Note that when an index fails to create, the failed index still occupies a slot. \n To remove the failed index and free up the slot for a new index, use the Drop Index endpoint.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/indexes",
        "links": [],
        "examples": [        {
          "title": "Create an index for a collection",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/indexes' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"dataCollectionId\": \"my-collection\",\n  \"index\": {\n    \"name\": \"my-index\",\n    \"fields\": [\n      {\n         \"path\": \"my-field\",\n         \"order\": \"ASC\"\n      }\n    ],\n    \"unique\": false,\n    \"caseInsensitive\": false\n   }\n}'"],
          "response": ["{\"index\": {\n  \"name\": \"my-index\",\n  \"fields\": [  {\n    \"path\": \"my-field\",\n    \"order\": \"ASC\"\n  }],\n  \"unique\": false,\n  \"caseInsensitive\": false,\n  \"status\": \"BUILDING\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateIndexRequest",
        "rpcResponseName": "CreateIndexResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Data Collection",
      "methodName": "DeleteDataCollection",
      "serviceName": "DataCollectionService",
      "tag": "Data Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params": [      {
        "in": "PATH",
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the collection to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DeleteDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a data collection.\n\n > **Note:**\n > Once a collection is deleted, it can't be restored.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/wix-data/v2/collections/{dataCollectionId=**}",
        "links": [],
        "examples": [        {
          "title": "Delete a collection",
          "body": ["curl -X DELETE \\\n'https://www.wixapis.com/wix-data/v2/collections/my-first-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteDataCollectionRequest",
        "rpcResponseName": "DeleteDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete External Database Connection",
      "methodName": "DeleteExternalDatabaseConnection",
      "serviceName": "ExternalDatabaseConnectionService",
      "tag": "External Database Connections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["name"],
      "params": [      {
        "in": "PATH",
        "name": "name",
        "type": "string",
        "doc": " Name of the external database connection to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteExternalDatabaseConnection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_DeleteExternalDatabaseConnectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes an external database connection.\n\n > **Note:** Once an external database connection is deleted, it can't be restored. To reconnect the database you need to [create a new external database connection](https://dev.wix.com/api/rest/wix-data/wix-data/external-database-connections/create-external-database-connection).\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/wix-data/v1/external-database-connections/{name}",
        "links": [],
        "examples": [        {
          "title": "Delete an external database connection",
          "body": ["curl -X DELETE \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections/MyExternalDatabase' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'\n\n{}"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteExternalDatabaseConnectionRequest",
        "rpcResponseName": "DeleteExternalDatabaseConnectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Disconnect Shared Data Collection",
      "methodName": "DisconnectSharedDataCollection",
      "serviceName": "DataCollectionSharingService",
      "tag": "Data Collection Sharing",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "dataCollectionId",
        "type": "string",
        "doc": " collection ID on current site\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "DisconnectSharedDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_DisconnectSharedDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes shared collection from target\n called from source site context\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v1/shared-data-collections:disconnect",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DisconnectSharedDataCollectionRequest",
        "rpcResponseName": "DisconnectSharedDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Drop Index",
      "methodName": "DropIndex",
      "serviceName": "IndexService",
      "tag": "Indexes",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["indexName"],
      "params":       [
                {
          "in": "BODY",
          "name": "indexName",
          "type": "string",
          "doc": " Name of the index to drop.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which the index to be dropped is defined.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DropIndex",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_index_DropIndexResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes an index from a data collection.\n\n The process of dropping an index from a collection takes time.\n You can check whether your index has been dropped by using the [List Indexes](https://dev.wix.com/api/rest/wix-data/wix-data/indexes/list-indexes) endpoint. \n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/wix-data/v2/indexes",
        "links": [],
        "examples": [        {
          "title": "Drop an index from a collection",
          "body": ["curl -X DELETE \\\n'https://www.wixapis.com/wix-data/v2/indexes' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'\n-d {\n  \"dataCollectionId\": \"my-collection\",\n  \"indexName\": \"my-index\"\n}"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DropIndexRequest",
        "rpcResponseName": "DropIndexResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Data Collection",
      "methodName": "GetDataCollection",
      "serviceName": "DataCollectionService",
      "tag": "Data Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "PATH",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "includeReferencedCollections",
          "type": "boolean",
          "doc": " Whether to return all collections referenced by the requested collection.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_GetDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a data collection by ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v2/collections/{dataCollectionId=**}",
        "links": [],
        "examples":         [
                    {
            "title": "Get a collection by ID",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/my-first-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collection\":   {\n    \"id\": \"my-first-collection\",\n    \"collectionType\": \"DOCSTORE\",\n    \"maxPageSize\": 1000,\n    \"displayName\": \"My First Collection\",\n    \"defaultDisplayOrder\":     {\n      \"field_key\": \"name\",\n      \"direction\": \"ASC\"\n    },\n    \"displayNamespace\": null,\n    \"displayField\": \"name\",\n    \"allowedOperations\":     [\n      \"AGGREGATE\",\n      \"BULK_INSERT\",\n      \"BULK_REMOVE\",\n      \"BULK_SAVE\",\n      \"BULK_UPDATE\",\n      \"COUNT\",\n      \"DISTINCT\",\n      \"FIND\",\n      \"GET\",\n      \"INSERT\",\n      \"INSERT_REFERENCE\",\n      \"IS_REFERENCED\",\n      \"QUERY_REFERENCED\",\n      \"REMOVE\",\n      \"REMOVE_REFERENCE\",\n      \"REPLACE_REFERENCES\",\n      \"SAVE\",\n      \"TRUNCATE\",\n      \"UPDATE\"\n    ],\n    \"fields\":     [\n            {\n        \"key\": \"name\",\n        \"displayName\": \"First Name\",\n        \"type\": \"TEXT\"\n      },\n            {\n        \"key\": \"age\",\n        \"displayName\": \"Age\",\n        \"type\": \"NUMBER\"\n      }\n    ],\n    \"permissions\":     {\n      \"insert\": \"ADMIN\",\n      \"update\": \"ADMIN\",\n      \"remove\": \"ADMIN\",\n      \"read\": \"ADMIN\"\n    },\n    \"translatable\": null,\n    \"revision\": 1,\n    \"plugins\": [],\n    \"pagingModes\": [\"OFFSET\"],\n    \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n    \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n  },\n  \"referencedCollections\": []\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get a collection by ID with referenced collections",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/my-second-collection?include_referenced_collections=true' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collection\":   {\n    \"id\": \"my-second-collection\",\n    \"collectionType\": \"DOCSTORE\",\n    \"maxPageSize\": 1000,\n    \"displayName\": \"My Second Collection\",\n    \"defaultDisplayOrder\":     {\n      \"fieldKey\": \"name\",\n      \"direction\": \"ASC\"\n    },\n    \"displayNamespace\": null,\n    \"displayField\": \"name\",\n    \"allowedOperations\":     [\n      \"AGGREGATE\",\n      \"BULK_INSERT\",\n      \"BULK_REMOVE\",\n      \"BULK_SAVE\",\n      \"BULK_UPDATE\",\n      \"COUNT\",\n      \"DISTINCT\",\n      \"FIND\",\n      \"GET\",\n      \"INSERT\",\n      \"INSERT_REFERENCE\",\n      \"IS_REFERENCED\",\n      \"QUERY_REFERENCED\",\n      \"REMOVE\",\n      \"REMOVE_REFERENCE\",\n      \"REPLACE_REFERENCES\",\n      \"SAVE\",\n      \"TRUNCATE\",\n      \"UPDATE\"\n    ],\n    \"fields\":     [\n            {\n        \"key\": \"title\",\n        \"displayName\": \"Book title\",\n        \"type\": \"TEXT\"\n      },\n            {\n        \"key\": \"author_ref\",\n        \"displayName\": \"Book author\",\n        \"type\": \"REFERENCE\",\n        \"typeMetadata\": {\"reference\": {\"referencedCollection\": \"my-first-collection\"}}\n      }\n    ],\n    \"permissions\":     {\n      \"insert\": \"ADMIN\",\n      \"update\": \"ADMIN\",\n      \"remove\": \"ADMIN\",\n      \"read\": \"ADMIN\"\n    },\n    \"translatable\": null,\n    \"revision\": 1,\n    \"plugins\": [],\n    \"pagingModes\": [\"OFFSET\"],\n    \"createdDate\": \"2022-09-19T15:15:59.099Z\",\n    \"updatedDate\": \"2022-09-19T15:15:59.099Z\"\n  },\n  \"referencedCollections\": [  {\n    \"id\": \"my-first-collection\",\n    \"collectionType\": \"DOCSTORE\",\n    \"maxPageSize\": 1000,\n    \"displayName\": \"My First Collection\",\n    \"defaultDisplayOrder\":     {\n      \"fieldKey\": \"name\",\n      \"direction\": \"ASC\"\n    },\n    \"displayNamespace\": null,\n    \"displayField\": \"name\",\n    \"allowedOperations\":     [\n      \"AGGREGATE\",\n      \"BULK_INSERT\",\n      \"BULK_REMOVE\",\n      \"BULK_SAVE\",\n      \"BULK_UPDATE\",\n      \"COUNT\",\n      \"DISTINCT\",\n      \"FIND\",\n      \"GET\",\n      \"INSERT\",\n      \"INSERT_REFERENCE\",\n      \"IS_REFERENCED\",\n      \"QUERY_REFERENCED\",\n      \"REMOVE\",\n      \"REMOVE_REFERENCE\",\n      \"REPLACE_REFERENCES\",\n      \"SAVE\",\n      \"TRUNCATE\",\n      \"UPDATE\"\n    ],\n    \"fields\":     [\n            {\n        \"key\": \"name\",\n        \"displayName\": \"First Name\",\n        \"type\": \"TEXT\"\n      },\n            {\n        \"key\": \"age\",\n        \"displayName\": \"Age\",\n        \"type\": \"NUMBER\"\n      }\n    ],\n    \"permissions\":     {\n      \"insert\": \"ADMIN\",\n      \"update\": \"ADMIN\",\n      \"remove\": \"ADMIN\",\n      \"read\": \"ADMIN\"\n    },\n    \"translatable\": null,\n    \"revision\": 1,\n    \"plugins\": [],\n    \"pagingModes\": [\"OFFSET\"],\n    \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n    \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n  }]\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get a collection by ID (example of a collection containing an array data field)",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/my-third-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collection\":   {\n    \"id\": \"my-third-collection\",\n    \"collectionType\": \"DOCSTORE\",\n    \"maxPageSize\": 1000,\n    \"displayName\": null,\n    \"defaultDisplayOrder\":     {\n      \"fieldKey\": \"title\",\n      \"direction\": \"ASC\"\n    },\n    \"displayNamespace\": null,\n    \"displayField\": \"name\",\n    \"allowedOperations\":     [\n      \"AGGREGATE\",\n      \"COUNT\",\n      \"DISTINCT\",\n      \"FIND\",\n      \"GET\",\n      \"INSERT\",\n      \"REMOVE\",\n      \"SAVE\",\n      \"TRUNCATE\",\n      \"UPDATE\"\n    ],\n    \"fields\":     [\n            {\n        \"key\": \"title\",\n        \"displayName\": \"Book title\",\n        \"type\": \"TEXT\"\n      },\n            {\n        \"key\": \"author_names\",\n        \"display\": \"Book authors\",\n        \"type\": \"ARRAY\",\n        \"typeMetadata\": {\"array\": {\"elementType\": \"TEXT\"}}\n      }\n    ],\n    \"permissions\":     {\n      \"insert\": \"ADMIN\",\n      \"update\": \"ADMIN\",\n      \"remove\": \"ADMIN\",\n      \"read\": \"SITE_MEMBER\"\n    },\n    \"translatable\": null,\n    \"revision\": 1,\n    \"plugins\": [],\n    \"pagingModes\": [\"OFFSET\"],\n    \"createdDate\": \"2022-09-23T14:15:59.099Z\",\n    \"updatedDate\": \"2022-09-23T14:15:59.099Z\"\n  },\n  \"referencedCollections\": []\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get a collection by ID (example of a collection containing an object data field)",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/my-fourth-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collection\":   {\n    \"id\": \"my-fourth-collection\",\n    \"collectionType\": \"DOCSTORE\",\n    \"maxPageSize\": 1000,\n    \"displayName\": \"My Fourth Collection\",\n    \"defaultDisplayOrder\":     {\n      \"fieldKey\": \"title\",\n      \"direction\": \"ASC\"\n    },\n    \"displayNamespace\": null,\n    \"displayField\": \"name\",\n    \"allowedOperations\":     [\n      \"AGGREGATE\",\n      \"COUNT\",\n      \"DISTINCT\",\n      \"FIND\",\n      \"GET\",\n      \"INSERT\",\n      \"REMOVE\",\n      \"SAVE\",\n      \"TRUNCATE\",\n      \"UPDATE\"\n    ],\n    \"fields\":     [\n            {\n        \"key\": \"buildingName\",\n        \"displayName\": \"Building Name\",\n        \"type\": \"TEXT\"\n      },\n            {\n        \"key\": \"meeting_rooms\",\n        \"display\": \"Meeting rooms\",\n        \"type\": \"OBJECT\",\n        \"typeMetadata\": {\"object\": {\"fields\":         [\n                    {\n            \"key\": \"name\",\n            \"displayName\": \"Room name\",\n            \"elementType\": \"TEXT\",\n            \"sortable\": true,\n            \"queryOperators\": [\"EQ\"]\n          },\n                    {\n            \"key\": \"floor\",\n            \"displayName\": \"Floor\",\n            \"elementType\": \"NUMBER\",\n            \"sortable\": true,\n            \"queryOperators\": [\"EQ\"]\n          },\n                    {\n            \"key\": \"capacity\",\n            \"displayName\": \"Room capacity\",\n            \"elementType\": \"NUMBER\",\n            \"sortable\": true,\n            \"queryOperators\":             [\n              \"EQ\",\n              \"GT\",\n              \"LT\"\n            ]\n          },\n                    {\n            \"key\": \"busy\",\n            \"displayName\": \"Currently taken\",\n            \"elementType\": \"BOOLEAN\",\n            \"sortable\": true,\n            \"queryOperators\": [\"EQ\"]\n          }\n        ]}}\n      }\n    ],\n    \"permissions\":     {\n      \"insert\": \"SITE_MEMBER\",\n      \"update\": \"ADMIN\",\n      \"remove\": \"ADMIN\",\n      \"read\": \"ANYONE\"\n    },\n    \"translatable\": null,\n    \"revision\": 1,\n    \"plugins\": [],\n    \"pagingModes\": [\"OFFSET\"],\n    \"createdDate\": \"2022-09-23T15:15:59.099Z\",\n    \"updatedDate\": \"2022-09-23T15:15:59.099Z\"\n  },\n  \"referencedCollections\": []\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDataCollectionRequest",
        "rpcResponseName": "GetDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Data Item",
      "methodName": "GetDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the data item to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to retrieve the data item.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_GetDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an item from a collection.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v2/items/{dataItemId}",
        "links": [],
        "examples":         [
                    {
            "title": "Get existing item",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228?dataCollectionId=cities' \\\n-H 'Authorization: <AUTH>' \\\n\n{\n    \"dataItem\": {\n        \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n        \"data\": {\n            \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n            \"_createdDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_updatedDate\": { \"$date\": \"2023-03-28T13:24:45.845Z\" },\n            \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n            \"state\": \"California\",\n            \"year\": 2022.0,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000.0\n        }\n    }\n}\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get existing item with complex id and consistent read",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/get' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItemId\": \"%id1\",\n    \"consistentRead\": true\n}'"],
            "response": ["{\"dataItem\": {\n  \"id\": \"%id1\",\n  \"data\":   {\n    \"_id\": \"%id1\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDataItemRequest",
        "rpcResponseName": "GetDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Data Item (Additional Binding 1)",
      "methodName": "GetDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to retrieve the data item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the data item to retrieve.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_GetDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an item from a collection.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/get",
        "links": [],
        "examples":         [
                    {
            "title": "Get existing item",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228?dataCollectionId=cities' \\\n-H 'Authorization: <AUTH>' \\\n\n{\n    \"dataItem\": {\n        \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n        \"data\": {\n            \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n            \"_createdDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_updatedDate\": { \"$date\": \"2023-03-28T13:24:45.845Z\" },\n            \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n            \"state\": \"California\",\n            \"year\": 2022.0,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000.0\n        }\n    }\n}\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get existing item with complex id and consistent read",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/get' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItemId\": \"%id1\",\n    \"consistentRead\": true\n}'"],
            "response": ["{\"dataItem\": {\n  \"id\": \"%id1\",\n  \"data\":   {\n    \"_id\": \"%id1\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T13:24:45.845Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDataItemRequest",
        "rpcResponseName": "GetDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get External Database Connection",
      "methodName": "GetExternalDatabaseConnection",
      "serviceName": "ExternalDatabaseConnectionService",
      "tag": "External Database Connections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["name"],
      "params": [      {
        "in": "PATH",
        "name": "name",
        "type": "string",
        "doc": " Name of the external database connection to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetExternalDatabaseConnection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_GetExternalDatabaseConnectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an external database connection by name.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v1/external-database-connections/{name}",
        "links": [],
        "examples": [        {
          "title": "Get an external database connection",
          "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections/MyExternalDatabase' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"externalDatabaseConnection\": {\n  \"name\": \"MyExternalDatabase\",\n  \"endpoint\": \"https://example.com/my-external-database\",\n  \"configuration\": {\"secretKey\": \"74dbd6d6-ec5b-4668-8229-c77379bc6431\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetExternalDatabaseConnectionRequest",
        "rpcResponseName": "GetExternalDatabaseConnectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Insert Data Item",
      "methodName": "InsertDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItem"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Item to insert.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "InsertDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_InsertDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds an item to a collection.\n\n\n An item can only be inserted into an existing connection.\n You can create a new collection using the [Data Collections API](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections).\n\n When an item is inserted into a collection, the item's ID is automatically assigned a random value.\n You can optionally provide a custom ID in `dataItem.id` when inserting the item.\n If you specify an ID that already exists in the collection, the insertion will fail.\n\n If `dataItem.data` is empty, a new item is created with no data fields.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items",
        "links": [],
        "examples":         [
                    {
            "title": "Insert new item",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItem\": {\n        \"data\": {\n            \"state\": \"California\",\n            \"year\": 2022,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000\n        }\n    }\n}'"],
            "response": ["{\"dataItem\": {\n  \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n  \"data\":   {\n    \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Insert new item with a predefined id value",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItem\": {\n        \"id\": \"abc123\",\n        \"data\": {\n            \"state\": \"California\",\n            \"year\": 2022,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000\n        }\n    }\n}'"],
            "response": ["{\n  \"id\": \"abc123\",\n  \"data\":   {\n    \"_id\": \"abc123\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "InsertDataItemRequest",
        "rpcResponseName": "InsertDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Insert Data Item Reference",
      "methodName": "InsertDataItemReference",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemReference.referringItemFieldName",
        "dataItemReference.referringItemId",
        "dataItemReference.referencedItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the reference.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
          "doc": " Reference to insert\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "InsertDataItemReference",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_InsertDataItemReferenceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Inserts a reference in the specified field in an item in a collection.\n\n\n A reference in the `dataItemReference` field specifies a referring item's ID, the field in which to insert the reference, and the ID of the referenced item.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/insert-reference",
        "links": [],
        "examples": [        {
          "title": "Insert item reference",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/insert-reference' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"dataItemReference\": {\n        \"referringItemFieldName\": \"songs\",\n        \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n        \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n    }\n}'"],
          "response": ["{\"dataItemReference\": {\n  \"referringItemFieldName\": \"songs\",\n  \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n  \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "InsertDataItemReferenceRequest",
        "rpcResponseName": "InsertDataItemReferenceResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Is Referenced Data Item",
      "methodName": "IsReferencedDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "referringItemFieldName",
        "referringItemId",
        "referencedItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring data item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field to check for a reference to the item that may be referenced.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referencedItemId",
          "type": "string",
          "doc": " ID of the item that may be referenced.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "IsReferencedDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_IsReferencedDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checks whether a field in a referring item contains a reference to a specified item.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/is-referenced",
        "links": [],
        "examples": [        {
          "title": "Is item referenced",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/is-referenced' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"referringItemFieldName\": \"songs\",\n    \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n    \"referencedItemId\": \"99cb26d5-dd42-4384-af30-3bb6e4026bd0\"\n}'"],
          "response": ["{\"isReferenced\": true} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "IsReferencedDataItemRequest",
        "rpcResponseName": "IsReferencedDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Data Collections",
      "methodName": "ListDataCollections",
      "serviceName": "DataCollectionService",
      "tag": "Data Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "sort.fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort.order",
          "type": "All APIs.Wix Data._upstream_wix_common_SortOrder",
          "doc": " Sort order.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsRequest_pagingMethod",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListDataCollections",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of all data collections associated with the site.\n\n By default, the list is ordered by ID in ascending order.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v2/collections",
        "links": [],
        "examples":         [
                    {
            "title": "List collections",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/collections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collections\":   [\n        {\n      \"id\": \"my-second-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": null,\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"title\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"BULK_INSERT\",\n        \"BULK_REMOVE\",\n        \"BULK_SAVE\",\n        \"BULK_UPDATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"INSERT_REFERENCE\",\n        \"IS_REFERENCED\",\n        \"QUERY_REFERENCED\",\n        \"REMOVE\",\n        \"REMOVE_REFERENCE\",\n        \"REPLACE_REFERENCES\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"title\",\n          \"displayName\": \"Book title\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"author_ref\",\n          \"displayName\": \"Book author\",\n          \"type\": \"REFERENCE\",\n          \"typeMetadata\": {\"reference\": {\"referencedCollection\": \"my-first-collection\"}}\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"ADMIN\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"ADMIN\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-19T15:15:59.099Z\",\n      \"updatedDate\": \"2022-09-19T15:15:59.099Z\"\n    },\n        {\n      \"id\": \"my-first-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": \"My First Collection\",\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"name\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"BULK_INSERT\",\n        \"BULK_REMOVE\",\n        \"BULK_SAVE\",\n        \"BULK_UPDATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"INSERT_REFERENCE\",\n        \"IS_REFERENCED\",\n        \"QUERY_REFERENCED\",\n        \"REMOVE\",\n        \"REMOVE_REFERENCE\",\n        \"REPLACE_REFERENCES\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"name\",\n          \"displayName\": \"First Name\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"age\",\n          \"displayName\": \"Age\",\n          \"type\": \"NUMBER\"\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"ADMIN\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"ADMIN\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n      \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List collections with referenced collections included",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/collections?include_referenced_collections=true&sort.field=NAME&sort.direction=ASC' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collections\":   [\n        {\n      \"id\": \"my-first-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": \"My First Collection\",\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"name\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"BULK_INSERT\",\n        \"BULK_REMOVE\",\n        \"BULK_SAVE\",\n        \"BULK_UPDATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"INSERT_REFERENCE\",\n        \"IS_REFERENCED\",\n        \"QUERY_REFERENCED\",\n        \"REMOVE\",\n        \"REMOVE_REFERENCE\",\n        \"REPLACE_REFERENCES\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"name\",\n          \"displayName\": \"First Name\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"age\",\n          \"displayName\": \"Age\",\n          \"type\": \"NUMBER\"\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"ADMIN\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"ADMIN\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n      \"updatedDate\": \"2022-09-19T15:10:56.603Z\"\n    },\n        {\n      \"id\": \"my-second-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": \"My Second Collection\",\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"name\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"BULK_INSERT\",\n        \"BULK_REMOVE\",\n        \"BULK_SAVE\",\n        \"BULK_UPDATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"INSERT_REFERENCE\",\n        \"IS_REFERENCED\",\n        \"QUERY_REFERENCED\",\n        \"REMOVE\",\n        \"REMOVE_REFERENCE\",\n        \"REPLACE_REFERENCES\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"title\",\n          \"displayName\": \"Book title\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"author_ref\",\n          \"displayName\": \"Book author\",\n          \"type\": \"REFERENCE\",\n          \"typeMetadata\": {\"reference\": {\"referencedCollection\": \"my-first-collection\"}}\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"ADMIN\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"ADMIN\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-19T15:15:59.099Z\",\n      \"updatedDate\": \"2022-09-19T15:15:59.099Z\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List collections (examples containing object and array data fields)",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/collections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collections\":   [\n        {\n      \"id\": \"my-third-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": null,\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"title\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"REMOVE\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"title\",\n          \"displayName\": \"Book title\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"author_names\",\n          \"display\": \"Book authors\",\n          \"type\": \"ARRAY\",\n          \"typeMetadata\": {\"array\": {\"elementType\": \"TEXT\"}}\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"ADMIN\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"SITE_MEMBER\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-23T14:15:59.099Z\",\n      \"updatedDate\": \"2022-09-23T14:15:59.099Z\"\n    },\n        {\n      \"id\": \"my-fourth-collection\",\n      \"collectionType\": \"DOCSTORE\",\n      \"maxPageSize\": 1000,\n      \"displayName\": \"My Fourth Collection\",\n      \"defaultDisplayOrder\":       {\n        \"fieldKey\": \"title\",\n        \"direction\": \"ASC\"\n      },\n      \"displayNamespace\": null,\n      \"displayField\": \"name\",\n      \"allowedOperations\":       [\n        \"AGGREGATE\",\n        \"COUNT\",\n        \"DISTINCT\",\n        \"FIND\",\n        \"GET\",\n        \"INSERT\",\n        \"REMOVE\",\n        \"SAVE\",\n        \"TRUNCATE\",\n        \"UPDATE\"\n      ],\n      \"fields\":       [\n                {\n          \"key\": \"building_name\",\n          \"displayName\": \"Building Name\",\n          \"type\": \"TEXT\"\n        },\n                {\n          \"key\": \"meeting_rooms\",\n          \"display\": \"Meeting rooms\",\n          \"type\": \"OBJECT\",\n          \"typeMetadata\": {\"object\": {\"fields\":           [\n                        {\n              \"key\": \"name\",\n              \"displayName\": \"Room name\",\n              \"elementType\": \"TEXT\",\n              \"sortable\": true,\n              \"queryOperators\": [\"EQ\"]\n            },\n                        {\n              \"key\": \"floor\",\n              \"displayName\": \"Floor\",\n              \"elementType\": \"NUMBER\",\n              \"sortable\": true,\n              \"queryOperators\": [\"EQ\"]\n            },\n                        {\n              \"key\": \"capacity\",\n              \"displayName\": \"Room capacity\",\n              \"elementType\": \"NUMBER\",\n              \"sortable\": true,\n              \"queryOperators\":               [\n                \"EQ\",\n                \"GT\",\n                \"LT\"\n              ]\n            },\n                        {\n              \"key\": \"busy\",\n              \"displayName\": \"Currently taken\",\n              \"elementType\": \"BOOLEAN\",\n              \"sortable\": true,\n              \"queryOperators\": [\"EQ\"]\n            }\n          ]}}\n        }\n      ],\n      \"permissions\":       {\n        \"insert\": \"SITE_MEMBER\",\n        \"update\": \"ADMIN\",\n        \"remove\": \"ADMIN\",\n        \"read\": \"ANYONE\"\n      },\n      \"translatable\": null,\n      \"revision\": 1,\n      \"plugins\": [],\n      \"pagingModes\": [\"OFFSET\"],\n      \"createdDate\": \"2022-09-23T15:15:59.099Z\",\n      \"updatedDate\": \"2022-09-23T15:15:59.099Z\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": 0\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List collections (example with a failed source)",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/collections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"collections\": [],\n  \"paging_metadata\":   {\n    \"count\": 0,\n    \"offset\": 0\n  },\n  \"failed_sources\": [\"DOCSTORE\"]\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListDataCollectionsRequest",
        "rpcResponseName": "ListDataCollectionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List External Database Connections",
      "methodName": "ListExternalDatabaseConnections",
      "serviceName": "ExternalDatabaseConnectionService",
      "tag": "External Database Connections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "ListExternalDatabaseConnections",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ListExternalDatabaseConnectionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of all external database collections associated with the site.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v1/external-database-connections",
        "links": [],
        "examples": [        {
          "title": "List all external database connections",
          "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"externalDatabaseConnections\": [\n    {\n    \"name\": \"MyFirstExternalDatabase\",\n    \"endpoint\": \"https://example.com/my-first-external-database\",\n    \"configuration\": {\"secretKey\": \"74dbd6d6-ec5b-4668-8229-c77379bc6431\"}\n  },\n    {\n    \"name\": \"MySecondExternalDatabase\",\n    \"endpoint\": \"https://example.com/my-second-external-database\",\n    \"configuration\": {\"secretKey\": \"2b723306-4d74-42a2-8438-2ff40da3e6b6\"}\n  },\n    {\n    \"name\": \"MyThirdExternalDatabase\",\n    \"endpoint\": \"https://example.com/my-third-external-database\",\n    \"configuration\": {\"secretKey\": \"5bdfed23-629a-4fa2-85f7-c3dba9b5d423\"}\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListExternalDatabaseConnectionsRequest",
        "rpcResponseName": "ListExternalDatabaseConnectionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Indexes",
      "methodName": "ListIndexes",
      "serviceName": "IndexService",
      "tag": "Indexes",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "QUERY",
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which to list indexes.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "ListIndexes",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_index_ListIndexesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Lists all indexes defined for a data collection.\n\n When an index's status is `ACTIVE`, it is ready to use. \n While it is still being created, its status is `BUILDING`.\n\n When an index's status is `DROPPED`, it has been dropped successfully.\n While it is still in the process of being removed, its status is `DROPPING`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v2/indexes",
        "links": [],
        "examples":         [
                    {
            "title": "List all indexes defined for a collection",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/indexes?dataCollectionId=my-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\"indexes\": [{\n  \"name\": \"my-index\",\n  \"fields\":   [\n        {\n      \"path\": \"my-field-1\",\n      \"order\": \"ASC\"\n    },\n        {\n      \"path\": \"my-field-2\",\n      \"order\": \"DESC\"\n    }\n  ],\n  \"unique\": false,\n  \"caseInsensitive\": false,\n  \"status\": \"ACTIVE\"\n}]} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List indexes (example with a failed index)",
            "body": ["curl -X GET \\\n'https://www.wixapis.com/wix-data/v2/indexes?collectionName=my-collection' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>'"],
            "response": ["{\"indexes\": [{\n  \"name\": \"my-unique-index\",\n  \"fields\": [  {\n    \"path\": \"my-field\",\n    \"order\": \"DESC\"\n  }],\n  \"unique\": true,\n  \"caseInsensitive\": false,\n  \"status\": \"FAILED\",\n  \"failure\":   {\n    \"code\": \"WDE0113\",\n    \"description\": \"Duplicate key error while building collection index\",\n    \"itemId\": \"7708c9f7-e6e9-44a9-b90b-34f3ee57017b\"\n  }\n}]} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListIndexesRequest",
        "rpcResponseName": "ListIndexesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Shared Data Collections",
      "methodName": "ListSharedDataCollections",
      "serviceName": "DataCollectionSharingService",
      "tag": "Data Collection Sharing",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "dataCollectionIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " only return records with given collection IDs as seen from current site\n if empty returns all shared collections\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListSharedDataCollections",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_ListSharedDataCollectionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Lists shared collections, both shared by current site and with current site\n If collection is shared with current site source and filter is not returned\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/wix-data/v1/shared-data-collections",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListSharedDataCollectionsRequest",
        "rpcResponseName": "ListSharedDataCollectionsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Data Items",
      "methodName": "QueryDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_QueryV2",
          "doc": " Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "includeReferencedItems",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Properties for which to include referenced items in the query's results.\n Up to 50 referenced items can be included for each item that matches the query.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of items, on the basis of the filtering, sorting, and paging preferences you provide.\n\n\n For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/query",
        "links": [],
        "examples":         [
                    {
            "title": "Query existing items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"query\": {\n        \"filter\": {\n            \"state\": \"California\"\n        },\n        \"paging\": {\n            \"limit\": 2\n        }\n    }\n}'"],
            "response": ["{\n  \"dataItems\":   [\n        {\n      \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n      \"data\":       {\n        \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n        \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n        \"state\": \"California\",\n        \"year\": 2022,\n        \"city\": \"Los Angeles\",\n        \"population\": 3800000\n      }\n    },\n        {\n      \"id\": \"9b05dd0f-b3b6-481f-a9af-97379f4c81bb\",\n      \"data\":       {\n        \"_id\": \"9b05dd0f-b3b6-481f-a9af-97379f4c81bb\",\n        \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n        \"state\": \"California\",\n        \"year\": 2022,\n        \"city\": \"San Francisco\",\n        \"population\": 840000\n      }\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"tooManyToCount\": false,\n    \"hasNext\": true\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Query existing items with filter, sort, paging, projection and total count calculation",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"query\": {\n        \"filter\": {\n            \"state\": \"California\"\n        },\n        \"sort\": [\n            {\n                \"fieldName\": \"population\",\n                \"order\": \"ASC\"\n            }\n        ],\n        \"paging\": {\n            \"limit\": 2\n        },\n        \"fields\": [\"population\"]\n    },\n    \"returnTotalCount\": true\n}'"],
            "response": ["{\n  \"dataItems\":   [\n        {\n      \"id\": \"9b05dd0f-b3b6-481f-a9af-97379f4c81bb\",\n      \"data\": {\"population\": 840000}\n    },\n        {\n      \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n      \"data\": {\"population\": 3800000}\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"total\": 4,\n    \"tooManyToCount\": false,\n    \"hasNext\": true\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryDataItemsRequest",
        "rpcResponseName": "QueryDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Distinct Values",
      "methodName": "QueryDistinctValues",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection to query.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldName",
          "type": "string",
          "doc": " Item field name for which to return all distinct values.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n\n `\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n }`.\n\n Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryDistinctValuesRequest_PagingMethod",
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryDistinctValues",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryDistinctValuesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of distinct values for a given field in all items that match a query, without duplicates.\n\n\n As with the [Query Data Items](https://dev.wix.com/api/rest/wix-data/wix-data/data-items/query-data-items) endpoint, this endpoint retrieves items based on the filtering, sorting, and paging preferences you provide.\n However, the Query Distinct Values endpoint doesn't return all of the full items that match the query.\n Rather, it returns all unique values of the field you specify in `fieldName` for items that match the query.\n If more than one item has the same value for that field, that value appears only once.\n\n For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/query-distinct-values",
        "links": [],
        "examples":         [
                    {
            "title": "Query distinct cities",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query-distinct-values' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"fieldName\": \"city\"\n}'"],
            "response": ["{\n  \"distinctValues\":   [\n    \"San Francisco\",\n    \"Los Angeles\"\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"tooManyToCount\": false,\n    \"hasNext\": false\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Query filtered distinct cities sorted in ascending order, calculate the total count of the result set.",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query-distinct-values' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"fieldName\": \"city\",\n    \"filter\": {\n        \"state\": \"California\"\n    },\n    \"order\": \"ASC\",\n    \"returnTotalCount\": true\n}'"],
            "response": ["{\n  \"distinctValues\":   [\n    \"Los Angeles\",\n    \"San Francisco\"\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"total\": 2,\n    \"tooManyToCount\": false,\n    \"hasNext\": false\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryDistinctValuesRequest",
        "rpcResponseName": "QueryDistinctValuesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Referenced Data Items",
      "methodName": "QueryReferencedDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "View Content",
        "description": "Can view content in collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field containing references in the referring item.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
          "doc": " Order of the returned referenced items. Sorted by the date each item was referenced.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsRequest_PagingMethod",
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryReferencedDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the full items referenced in the specified field of an item.\n\n\n Reference and multi-reference fields refer to items in different collections.\n Use this endpoint to retrieve the full details of the referenced items themselves.\n \n For example, suppose you have a **Movies** collection with an **Actors** field that contains references to items in a **People** collection.\n Querying the **Movies** collection using the Query Referenced Data Items endpoint returns the relevant **People** items referenced in the **Actors** field of the specified **Movie** item.\n This gives you information from the **People** collection about each of the actors in the specified movie.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/query-referenced",
        "links": [],
        "examples":         [
                    {
            "title": "Query referenced items",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query-referenced' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"referringItemFieldName\": \"songs\",\n    \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\"\n}'"],
            "response": ["{\n  \"results\":   [\n    {\"dataItem\":     {\n      \"id\": \"99cb26d5-dd42-4384-af30-3bb6e4026bd0\",\n      \"data\":       {\n        \"_id\": \"99cb26d5-dd42-4384-af30-3bb6e4026bd0\",\n        \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n        \"title\": \"I Should Have Known Better\"\n      }\n    }},\n    {\"dataItem\":     {\n      \"id\": \"b10170b2-2e0d-4093-b472-cf8f2982a247\",\n      \"data\":       {\n        \"_id\": \"b10170b2-2e0d-4093-b472-cf8f2982a247\",\n        \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n        \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n        \"title\": \"If I Fell\"\n      }\n    }}\n  ],\n  \"pagingMetadata\": {\"count\": 2}\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Query referenced items, order by reference creation date and return only the first one",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/query-referenced' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"referringItemFieldName\": \"songs\",\n    \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n    \"order\": \"ASC\",\n    \"paging\": {\n        \"limit\": 1\n    }\n}'"],
            "response": ["{\n  \"results\": [{\"dataItem\":   {\n    \"id\": \"99cb26d5-dd42-4384-af30-3bb6e4026bd0\",\n    \"data\":     {\n      \"_id\": \"99cb26d5-dd42-4384-af30-3bb6e4026bd0\",\n      \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n      \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n      \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n      \"title\": \"I Should Have Known Better\"\n    }\n  }}],\n  \"pagingMetadata\": {\"count\": 1}\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryReferencedDataItemsRequest",
        "rpcResponseName": "QueryReferencedDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Remove Data Item",
      "methodName": "RemoveDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the item to remove.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to remove the item.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "RemoveDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_RemoveDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes an item from a collection.\n\n\n If any items in other collections reference the removed item in reference or multi-reference fields, those fields are cleared.\n\n > **Note:**\n > Once an item has been removed from a collection, it can't be restored.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/wix-data/v2/items/{dataItemId}",
        "links": [],
        "examples":         [
                    {
            "title": "Remove existing item",
            "body": ["curl -X DELETE \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228?dataCollectionId=cities' \\\n-H 'Authorization: <AUTH>' \\\n\n{\n    \"dataItem\": {\n        \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n        \"data\": {\n            \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n            \"_createdDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_updatedDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n            \"state\": \"California\",\n            \"year\": 2022.0,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000.0\n        }\n    }\n}\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Remove existing item with complex id",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/remove' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItemId\": \"%id1\"\n}'"],
            "response": ["{\"dataItem\": {\n  \"id\": \"%id1\",\n  \"data\":   {\n    \"_id\": \"%id1\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveDataItemRequest",
        "rpcResponseName": "RemoveDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Remove Data Item (Additional Binding 1)",
      "methodName": "RemoveDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to remove the item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the item to remove.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "RemoveDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_RemoveDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes an item from a collection.\n\n\n If any items in other collections reference the removed item in reference or multi-reference fields, those fields are cleared.\n\n > **Note:**\n > Once an item has been removed from a collection, it can't be restored.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/remove",
        "links": [],
        "examples":         [
                    {
            "title": "Remove existing item",
            "body": ["curl -X DELETE \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228?dataCollectionId=cities' \\\n-H 'Authorization: <AUTH>' \\\n\n{\n    \"dataItem\": {\n        \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n        \"data\": {\n            \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n            \"_createdDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_updatedDate\": { \"$date\": \"2023-03-28T12:20:43.745Z\" },\n            \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n            \"state\": \"California\",\n            \"year\": 2022.0,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000.0\n        }\n    }\n}\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Remove existing item with complex id",
            "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/remove' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItemId\": \"%id1\"\n}'"],
            "response": ["{\"dataItem\": {\n  \"id\": \"%id1\",\n  \"data\":   {\n    \"_id\": \"%id1\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveDataItemRequest",
        "rpcResponseName": "RemoveDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Remove Data Item Reference",
      "methodName": "RemoveDataItemReference",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItemReference",
        "dataItemReference.referringItemFieldName",
        "dataItemReference.referringItemId",
        "dataItemReference.referencedItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItemReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
          "doc": " Reference to remove.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "RemoveDataItemReference",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_RemoveDataItemReferenceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes the specified reference from the specified field.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/remove-reference",
        "links": [],
        "examples": [        {
          "title": "Remove item reference",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/remove-reference' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"dataItemReference\": {\n        \"referringItemFieldName\": \"songs\",\n        \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n        \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n    }\n}'"],
          "response": ["{\"dataItemReference\": {\n  \"referringItemFieldName\": \"songs\",\n  \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n  \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveDataItemReferenceRequest",
        "rpcResponseName": "RemoveDataItemReferenceResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Replace Data Item References",
      "methodName": "ReplaceDataItemReferences",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "referringItemFieldName",
        "referringItemId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field containing references in the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newReferencedItemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of new referenced item IDs to replace the existing ones.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ReplaceDataItemReferences",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_ReplaceDataItemReferencesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Replaces references in a specified field of a specified data item.\n\n\n This endpoint replaces the existing reference or references contained in the field specified in `referringItemFieldName` within the data item specified in `referringItemId`.\n The endpoint removes existing references and in their place it adds references to the items specified in `newReferencedItemIds`.\n\n > **Note:** If you pass an empty array in `newReferencedItemIds`, all existing references are removed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/replace-references",
        "links": [],
        "examples": [        {
          "title": "Replace existing references with new references",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/replace-references' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"albums\",\n    \"referringItemFieldName\": \"songs\",\n    \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n    \"newReferencedItemIds\": [\"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"]\n}'"],
          "response": ["{\"dataItemReferences\": [{\n  \"referringItemFieldName\": \"songs\",\n  \"referringItemId\": \"37de298e-026d-4b2e-b87f-fbec11d53105\",\n  \"referencedItemId\": \"aafeaaf4-6192-4cc2-a79b-97ce0f1b3646\"\n}]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ReplaceDataItemReferencesRequest",
        "rpcResponseName": "ReplaceDataItemReferencesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Save Data Item",
      "methodName": "SaveDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItem"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert or update the item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Data item to insert or update.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "SaveDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_SaveDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Inserts or updates an item in a collection.\n\n\n The Save Data Item endpoint inserts or updates the specified item, depending on whether it already exists in the collection.\n\n + If you don't provide an ID, a new item is created.\n\n + If you provide an ID that does not exist in the collection, a new item is created with that ID.\n\n + If an item with the ID you provide already exists in the collection, that item is updated. When an item is updated, its `data._updatedDate` field is changed to the current date and time.\n\n > **Note:** When you provide an item with an ID that already exists in the collection, the payload you provide in `dataItem.data` replaces the existing item with that ID.\n > This means that the item's previous fields and values are lost.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/save",
        "links": [],
        "examples": [        {
          "title": "Save item",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/save' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItem\": {\n        \"data\": {\n            \"state\": \"California\",\n            \"year\": 2022,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000\n        }\n    }\n}'"],
          "response": ["{\"dataItem\": {\n  \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n  \"data\":   {\n    \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SaveDataItemRequest",
        "rpcResponseName": "SaveDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Share And Connect Data Collection",
      "methodName": "ShareAndConnectDataCollection",
      "serviceName": "DataCollectionSharingService",
      "tag": "Data Collection Sharing",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "targetSiteId",
          "type": "string",
          "doc": " Meta Site ID to share collection from current site with\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "details",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharingDetails",
          "doc": " Sharing details\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ShareAndConnectDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_ShareAndConnectDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Shares a collection with other site and connects to it in one call\n requires share permissions on current site and connect permissions on target site\n doesn't create any sharing policy allowing other connections (ad-hoc)\n same action as `ConnectOwnedDataCollection` but should be called from the source site\n Possible failures (TODO codes):\n  - insufficient permissions\n  - filter is invalid\n  - namespace collision\n  - collection has single reference to unshared collection\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v1/shared-data-collections:shareAndConnect",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ShareAndConnectDataCollectionRequest",
        "rpcResponseName": "ShareAndConnectDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Truncate Data Items",
      "methodName": "TruncateDataItems",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["dataCollectionId"],
      "params": [      {
        "in": "BODY",
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the collection to truncate.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "TruncateDataItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_TruncateDataItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes all items from a collection.\n\n\n If any items in other collections reference the removed items in reference or multi-reference fields, those fields are cleared.\n\n > **Note:**\n > Once items have been removed from a collection, they can't be restored.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/truncate",
        "links": [],
        "examples": [        {
          "title": "Remove all items",
          "body": ["curl -X POST \\\n'https://www.wixapis.com/wix-data/v2/items/truncate' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\"\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "TruncateDataItemsRequest",
        "rpcResponseName": "TruncateDataItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Data Collection",
      "methodName": "UpdateDataCollection",
      "serviceName": "DataCollectionService",
      "tag": "Data Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "collection.id",
        "collection.fields",
        "collection.permissions",
        "collection.revision"
      ],
      "params": [      {
        "in": "BODY",
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Updated collection details. The existing collection is replaced with this version.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "UpdateDataCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_UpdateDataCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a data collection.\n\n A collection ID, revision number, permissions, and at least 1 field must be provided within the `collection` body parameter.\n If a collection with that ID exists, and if its current `revision` number matches the one provided, it is updated.\n Otherwise, the request fails.\n\n When a collection is updated, its `updatedDate` property is changed to the current date and its `revision` property is incremented.\n\n > **Note:**\n > After a collection is updated, it only contains the properties included in the Update Data Collection request. If the existing collection has properties with values and those properties\n > aren't included in the updated collection details, their values are lost.\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/wix-data/v2/collections",
        "links": [],
        "examples":         [
                    {
            "title": "Update a collection",
            "body": ["curl -X PUT \\\n    'https://www.wixapis.com/wix-data/v2/collections' \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: <AUTH>' \\\n    --data-raw '{\n        {\n            \"id\": \"my-first-collection\",\n            \"revision\": \"1\",\n            \"displayName\": \"Author Collection\",\n            \"fields\": [\n                {\"key\": \"first_name\", \"displayName\": \"First Name\", \"type\": \"TEXT\"},\n                {\"key\": \"last_name\", \"displayName\": \"Last Name\", \"type\": \"TEXT\"}\n            ],\n            \"permissions\": {\n                \"insert\": \"ADMIN\",\n                \"update\": \"ADMIN\",\n                \"remove\": \"ADMIN\",\n                \"read\": \"ANYONE\"\n            }\n        }'"],
            "response": ["{\"collection\": {\n  \"id\": \"my-first-collection\",\n  \"collectionType\": \"DOCSTORE\",\n  \"maxPageSize\": 1000,\n  \"displayName\": \"Author Collection\",\n  \"defaultDisplayOrder\":   {\n    \"fieldKey\": \"first_name\",\n    \"direction\": \"ASC\"\n  },\n  \"displayNamespace\": null,\n  \"displayField\": \"first_name\",\n  \"allowedOperations\":   [\n    \"AGGREGATE\",\n    \"BULK_INSERT\",\n    \"BULK_REMOVE\",\n    \"BULK_SAVE\",\n    \"BULK_UPDATE\",\n    \"COUNT\",\n    \"DISTINCT\",\n    \"FIND\",\n    \"GET\",\n    \"INSERT\",\n    \"INSERT_REFERENCE\",\n    \"IS_REFERENCED\",\n    \"QUERY_REFERENCED\",\n    \"REMOVE\",\n    \"REMOVE_REFERENCE\",\n    \"REPLACE_REFERENCES\",\n    \"SAVE\",\n    \"TRUNCATE\",\n    \"UPDATE\"\n  ],\n  \"fields\":   [\n        {\n      \"key\": \"first_name\",\n      \"displayName\": \"First Name\",\n      \"type\": \"TEXT\"\n    },\n        {\n      \"key\": \"last_name\",\n      \"displayName\": \"Last Name\",\n      \"type\": \"TEXT\"\n    }\n  ],\n  \"permissions\":   {\n    \"insert\": \"ADMIN\",\n    \"update\": \"ADMIN\",\n    \"remove\": \"ADMIN\",\n    \"read\": \"ANYONE\"\n  },\n  \"translatable\": null,\n  \"revision\": 2,\n  \"plugins\": [],\n  \"pagingModes\": [\"OFFSET\"],\n  \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n  \"updatedDate\": \"2022-09-22T11:29:41.822Z\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Update a collection (example containing an array data field)",
            "body": ["curl -X PUT \\\n    'https://www.wixapis.com/wix-data/v2/collections' \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: <AUTH>' \\\n    --data-raw '{\n        {\n            \"id\": \"my-first-collection\",\n            \"revision\": \"1\",\n            \"displayName\": \"Author Collection\",\n            \"fields\": [\n                {\"key\": \"first_name\", \"displayName\": \"First Name\", \"type\": \"TEXT\"},\n                {\"key\": \"last_name\", \"displayName\": \"Last Name\", \"type\": \"TEXT\"},\n                {\n                    \"key\": \"books\",\n                    \"display\": \"Books\",\n                    \"type\": \"ARRAY\",\n                    \"typeMetadata\": {\"array\": {\"elementType\": \"TEXT\"}}\n                }\n            ],\n            \"permissions\": {\n                \"insert\": \"ADMIN\",\n                \"update\": \"ADMIN\",\n                \"remove\": \"ADMIN\",\n                \"read\": \"ANYONE\"\n            }\n        }'"],
            "response": ["{\"collection\": {\n  \"id\": \"my-first-collection\",\n  \"collectionType\": \"DOCSTORE\",\n  \"maxPageSize\": 1000,\n  \"displayName\": \"Author Collection\",\n  \"defaultDisplayOrder\":   {\n    \"fieldKey\": \"first_name\",\n    \"direction\": \"ASC\"\n  },\n  \"display_namespace\": null,\n  \"displayField\": \"first_name\",\n  \"allowedOperations\":   [\n    \"AGGREGATE\",\n    \"BULK_INSERT\",\n    \"BULK_REMOVE\",\n    \"BULK_SAVE\",\n    \"BULK_UPDATE\",\n    \"COUNT\",\n    \"DISTINCT\",\n    \"FIND\",\n    \"GET\",\n    \"INSERT\",\n    \"INSERT_REFERENCE\",\n    \"IS_REFERENCED\",\n    \"QUERY_REFERENCED\",\n    \"REMOVE\",\n    \"REMOVE_REFERENCE\",\n    \"REPLACE_REFERENCES\",\n    \"SAVE\",\n    \"TRUNCATE\",\n    \"UPDATE\"\n  ],\n  \"fields\":   [\n        {\n      \"key\": \"first_name\",\n      \"displayName\": \"First Name\",\n      \"type\": \"TEXT\"\n    },\n        {\n      \"key\": \"last_name\",\n      \"displayName\": \"Last Name\",\n      \"type\": \"TEXT\"\n    },\n        {\n      \"key\": \"books\",\n      \"display\": \"Books\",\n      \"type\": \"ARRAY\",\n      \"typeMetadata\": {\"array\": {\"elementType\": \"TEXT\"}}\n    }\n  ],\n  \"permissions\":   {\n    \"insert\": \"ADMIN\",\n    \"update\": \"ADMIN\",\n    \"remove\": \"ADMIN\",\n    \"read\": \"ANYONE\"\n  },\n  \"translatable\": null,\n  \"revision\": 2,\n  \"plugins\": [],\n  \"pagingModes\": [\"OFFSET\"],\n  \"createdDate\": \"2022-09-19T15:10:56.603Z\",\n  \"updatedDate\": \"2022-09-22T11:29:41.822Z\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateDataCollectionRequest",
        "rpcResponseName": "UpdateDataCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Data Item",
      "methodName": "UpdateDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItem",
        "dataItem.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "dataItem.id",
          "type": "string",
          "doc": " Data item ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the existing item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Updated data item content. The existing data item's content is replaced entirely.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_UpdateDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an item in a collection.\n\n\n This endpoint replaces the data item's existing data with the payload provided in `dataItem.data` in the request.\n\n To update an item, you need to specify an item ID and a collection ID.\n If an item is found in the specified collection with the specified ID, that item is updated.\n If the collection doesn't contain an item with that ID, the request fails.\n\n When an item is updated, its `data._updatedDate` field is changed to the current date and time.\n\n > **Note:**\n > After an item is updated, it only contains the fields included in the `dataItem.data` payload in Update Data Item request.\n > If the existing item has fields with values and those fields aren't included in the updated item, their values are lost.\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/wix-data/v2/items/{dataItem.id}",
        "links": [],
        "examples": [        {
          "title": "Update existing item",
          "body": ["curl -X PUT \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItem\": {\n        \"data\": {\n            \"state\": \"California\",\n            \"year\": 2022,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000\n        }\n    }\n}'"],
          "response": ["{\"dataItem\": {\n  \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n  \"data\":   {\n    \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateDataItemRequest",
        "rpcResponseName": "UpdateDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Data Item (Additional Binding 1)",
      "methodName": "UpdateDataItem",
      "serviceName": "DataItemService",
      "tag": "Data Items",
      "permissions": [      {
        "name": "Modify content in the data collections",
        "description": "Can add and edit content in existing collections."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "dataCollectionId",
        "dataItem",
        "dataItem.id"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the existing item.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Updated data item content. The existing data item's content is replaced entirely.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateDataItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_UpdateDataItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an item in a collection.\n\n\n This endpoint replaces the data item's existing data with the payload provided in `dataItem.data` in the request.\n\n To update an item, you need to specify an item ID and a collection ID.\n If an item is found in the specified collection with the specified ID, that item is updated.\n If the collection doesn't contain an item with that ID, the request fails.\n\n When an item is updated, its `data._updatedDate` field is changed to the current date and time.\n\n > **Note:**\n > After an item is updated, it only contains the fields included in the `dataItem.data` payload in Update Data Item request.\n > If the existing item has fields with values and those fields aren't included in the updated item, their values are lost.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/wix-data/v2/items/update",
        "links": [],
        "examples": [        {
          "title": "Update existing item",
          "body": ["curl -X PUT \\\n'https://www.wixapis.com/wix-data/v2/items/5331fc15-9441-4fd4-bc7b-7f6870c69228' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n    \"dataCollectionId\": \"cities\",\n    \"dataItem\": {\n        \"data\": {\n            \"state\": \"California\",\n            \"year\": 2022,\n            \"city\": \"Los Angeles\",\n            \"population\": 3800000\n        }\n    }\n}'"],
          "response": ["{\"dataItem\": {\n  \"id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n  \"data\":   {\n    \"_id\": \"5331fc15-9441-4fd4-bc7b-7f6870c69228\",\n    \"_createdDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_updatedDate\": {\"$date\": \"2023-03-28T12:20:43.745Z\"},\n    \"_owner\": \"690264f5-29a0-4aa8-a9b5-0842fc5ab360\",\n    \"state\": \"California\",\n    \"year\": 2022,\n    \"city\": \"Los Angeles\",\n    \"population\": 3800000\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateDataItemRequest",
        "rpcResponseName": "UpdateDataItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update External Database Connection",
      "methodName": "UpdateExternalDatabaseConnection",
      "serviceName": "ExternalDatabaseConnectionService",
      "tag": "External Database Connections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "externalDatabaseConnection.name",
        "externalDatabaseConnection.endpoint",
        "externalDatabaseConnection.configuration"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "externalDatabaseConnection.name",
          "type": "string",
          "doc": " Name of the external database connection.\n An external database connection may connect to one or more external data collections or tables. \n These are represented as `connectionName/dataCollectionId`.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "externalDatabaseConnection",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
          "doc": " Updated external database connection details. The existing collection is replaced with this version.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateExternalDatabaseConnection",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_UpdateExternalDatabaseConnectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an external database connection.\n\n An external database collection name must be submitted as a path parameter.\n If an existing external database connection is found with the same name, that connection's details are updated. \n If no external database connection has that name, the request fails.\n\n > **Note:** After an external database connection is updated, it only contains the values provided in the request. All previous values are lost.\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/wix-data/v1/external-database-connections/{externalDatabaseConnection.name}",
        "links": [],
        "examples": [        {
          "title": "Update an external database connection",
          "body": ["curl -X PUT \\\n'https://www.wixapis.com/wix-data/v1/external-database-connections/MyExternalDatabase' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"externalDatabaseConnection\": {\n    \"endpoint\":\"https://example.com/my-external-database\",\n    \"configuration\":{\n      \"secretKey\":\"74dbd6d6-ec5b-4668-8229-c77379bc6431\"\n    }\n  }\n}'"],
          "response": ["{\"externalDatabaseConnection\": {\n  \"name\": \"MyExternalDatabase\",\n  \"endpoint\": \"https://example.com/my-external-database\",\n  \"configuration\": {\"secretKey\": \"74dbd6d6-ec5b-4668-8229-c77379bc6431\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateExternalDatabaseConnectionRequest",
        "rpcResponseName": "UpdateExternalDatabaseConnectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEventDomainEvent",
      "name": "Data Collection Cloned Webhook",
      "docs":       {
        "summary": " Event triggered when collection is cloned from other instance\n CREATED event will be also triggered along with this action\n",
        "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
      },
      "topic": "domain_events_wix.data.v1.data_collection",
      "tag": "Data Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.data.v1.data_collection_data_collection_cloned_event",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEventDomainEvent",
      "name": "Data Collection Changed Webhook",
      "docs":       {
        "summary": " Event triggered when collection is changed, describing some of changes\n UPDATED event will be also triggered along with this action\n",
        "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
      },
      "topic": "domain_events_wix.data.v1.data_collection",
      "tag": "Data Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.data.v1.data_collection_data_collection_changed_event",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionCreatedDomainEvent",
      "name": "Data Collection Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
      },
      "topic": "domain_events_wix.data.v1.data_collection",
      "tag": "Data Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.data.v1.data_collection_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionUpdatedDomainEvent",
      "name": "Data Collection Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
      },
      "topic": "domain_events_wix.data.v1.data_collection",
      "tag": "Data Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.data.v1.data_collection_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionDeletedDomainEvent",
      "name": "Data Collection Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/cloud/tree/master/data/cloud-data-api/src/main/proto/com/wixpress/cloud/data/api/collection/data-collection-service.proto"
      },
      "topic": "domain_events_wix.data.v1.data_collection",
      "tag": "Data Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.data.v1.data_collection_deleted",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionUpdatedDomainEvent",
      "displayName": "Data Collection Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.data.v1.data_collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DataCollection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityUpdatedEvent",
      "displayName": "Data Collection Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionCreatedDomainEvent",
      "displayName": "Data Collection Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.data.v1.data_collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DataCollection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityCreatedEvent",
      "displayName": "Data Collection Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionDeletedDomainEvent",
      "displayName": "Data Collection Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.data.v1.data_collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DataCollection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionEntityDeletedEvent",
      "displayName": "Data Collection Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEventDomainEvent",
      "displayName": "Data Collection Cloned Event Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.data.v1.data_collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `data_collection_cloned_event`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEventActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DataCollectionClonedEvent ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEventActionEvent",
      "displayName": "Data Collection Cloned Event Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEvent",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEventDomainEvent",
      "displayName": "Data Collection Changed Event Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.data.v1.data_collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `data_collection_changed_event`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEventActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DataCollectionChangedEvent ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEventActionEvent",
      "displayName": "Data Collection Changed Event Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEvent",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Wix Data._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Wix Data._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Wix Data._upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Data._upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_CreateDataCollectionRequest",
      "displayName": "Create Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Collection details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_CreateDataCollectionResponse",
      "displayName": "Create Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Details of collection created.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_GetDataCollectionRequest",
      "displayName": "Get Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection to retrieve.\n"
        },
                {
          "name": "includeReferencedCollections",
          "type": "boolean",
          "doc": " Whether to return all collections referenced by the requested collection.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_GetDataCollectionResponse",
      "displayName": "Get Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collection",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
          "doc": " Details of the collection requested.\n"
        },
                {
          "name": "referencedCollections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection"]
          },
          "doc": " Details of collections referenced by the collection requested.\n Only populated when `includeReferencedCollections` is `true` in the request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsRequest",
      "displayName": "List Data Collections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sort",
          "type": "All APIs.Wix Data._upstream_wix_common_Sorting",
          "doc": " Defines how collections in the response are sorted.\n\n Default: Ordered by ID in ascending order.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsRequest_pagingMethod",
          "doc": " Pagination information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsRequest_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Data._upstream_wix_common_Paging",
          "doc": " Offset-based paging.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Data._upstream_wix_common_CursorPaging",
          "doc": " Cursor-based paging.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_ListDataCollectionsResponse",
      "displayName": "List Data Collections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection"]
          },
          "doc": " List of collections.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._upstream_wix_common_PagingMetadataV2",
          "doc": " Paging information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_BulkGetDataCollectionsBySnapshotsRequest",
      "displayName": "Bulk Get Data Collections By Snapshots Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "snapshotIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Ids of schema snapshot\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_BulkGetDataCollectionsBySnapshotsResponse",
      "displayName": "Bulk Get Data Collections By Snapshots Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "snapshotCollections",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_SnapshotDataCollections"]
        },
        "doc": " List of snapshot collection map\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_BulkGetDataCollectionsRequest",
      "displayName": "Bulk Get Data Collections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the collections to retrieve.\n"
        },
                {
          "name": "showDeletedCollections",
          "type": "boolean",
          "doc": " Whether to include deleted collections.\n\n Default: `false`\n"
        },
                {
          "name": "includeReferencedCollections",
          "type": "boolean",
          "doc": " Whether the returned collection list should include referenced collections.\n\n Default: `false`\n"
        },
                {
          "name": "sort",
          "type": "All APIs.Wix Data._upstream_wix_common_Sorting",
          "doc": " Sorting preferences.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_BulkGetDataCollectionsResponse",
      "displayName": "Bulk Get Data Collections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "activeCollections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection"]
          },
          "doc": " List of requested collections.\n When `include_referenced_collections` is `true` in the request, referenced collections are included here.\n"
        },
                {
          "name": "deletedCollections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection"]
          },
          "doc": " List of requested deleted collections. Only populated when `showDeletedCollections` is true in the request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_UpdateDataCollectionRequest",
      "displayName": "Update Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Updated collection details. The existing collection is replaced with this version.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_UpdateDataCollectionResponse",
      "displayName": "Update Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection",
        "doc": " Updated collection details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DeleteDataCollectionRequest",
      "displayName": "Delete Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the collection to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DeleteDataCollectionResponse",
      "displayName": "Delete Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollection",
      "displayName": "Data Collection Object",
      "locations": [],
      "docs":       {
        "summary": " A data collection determines the structure of data to be stored in a database.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Collection ID. For example, `my-first-collection`. May include a namespace.\n"
        },
                {
          "name": "collectionType",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_CollectionType",
          "doc": " Collection type. Indicates how the collection was created and is stored.\n\n * `NATIVE`: User-created collection.\n * `WIX_APP`: [Collection](https://support.wix.com/en/article/velo-working-with-wix-app-collections-and-code#what-are-wix-app-collections) created by a Wix app, including [starter collections](https://support.wix.com/en/article/velo-working-with-wix-app-collections-and-code#what-are-wix-app-starter-collections) created when a Wix app is installed.\n * `BLOCKS_APP`: Collection created by a Wix Blocks app.\n * `EXTERNAL`: Collection located in externally connected storage.\n",
          "readOnly": true
        },
                {
          "name": "ownerAppId",
          "type": "string",
          "doc": " ID of the app that defined this collection. For user-defined collections, this value is null.\n",
          "readOnly": true
        },
                {
          "name": "maxPageSize",
          "type": "integer",
          "doc": " Maximum number of items returned in a single query, based on the underlying storage.\n Native collections have a maximum page size of 1000 for offset-based queries or 100 for cursor-based queries.\n External collections' maximum page size defaults to 50, but an external provider can set any maximum value up to 1000.\n",
          "readOnly": true
        },
                {
          "name": "displayName",
          "type": "string",
          "doc": " Collection's display name as shown in the Content Manager. For example, `My First Collection`.\n"
        },
                {
          "name": "defaultDisplayOrder",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Sort",
          "doc": " Indicates how the collection's items are sorted by default when a query doesn't specify an order.\n",
          "readOnly": true
        },
                {
          "name": "displayNamespace",
          "type": "string",
          "doc": " UI-friendly namespace of the Wix app with which the data collection is associated, such as Stores or Bookings.\n Empty for all data collections not owned by internal Wix apps.\n"
        },
                {
          "name": "displayField",
          "type": "string",
          "doc": " The field whose value the Content Manager displays to represent the collection item when referenced in a different collection.\n",
          "readOnly": true
        },
                {
          "name": "capabilities",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_CollectionCapabilities",
          "doc": " Capabilities the collection supports.\n",
          "readOnly": true
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field"]
          },
          "doc": " Collection's field structure. A collection must have at least 1 field.\n"
        },
                {
          "name": "permissions",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Permissions",
          "doc": " Levels of permission for accessing and modifying data, defined by lowest role needed to perform each action.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Collection's current revision number, which increments each time the collection is updated. For an update operation to succeed, you must pass the latest revision number.\n",
          "readOnly": true
        },
                {
          "name": "plugins",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin"]
          },
          "doc": " All plugins the collection uses. Plugins apply additional capabilities to the collection or extend its functionality.\n"
        },
                {
          "name": "pagingModes",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_PagingMode"]
          },
          "doc": " All paging modes the collection supports. In native collections, offset-based paging is supported by default.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date the collection was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date the collection was last updated.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Reference",
      "displayName": "Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "referencedCollectionId",
        "type": "string",
        "doc": " Referenced collection ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_MultiReference",
      "displayName": "Multi Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "referencedCollectionId",
          "type": "string",
          "doc": " Referenced collection ID.\n"
        },
                {
          "name": "referencingFieldKey",
          "type": "string",
          "doc": " Referencing field key.\n"
        },
                {
          "name": "referencingDisplayName",
          "type": "string",
          "doc": " Display name in the Content Manager for the referenced data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Object_ObjectField",
      "displayName": "Object Field Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "key",
          "type": "string",
          "doc": " Field key.\n"
        },
                {
          "name": "displayName",
          "type": "string",
          "doc": " Display name for the field.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeEnum",
          "doc": " Field type.\n"
        },
                {
          "name": "typeMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata",
          "doc": " Metadata for complex data types. This property only exists for references, multi-references, objects, and arrays.\n"
        },
                {
          "name": "capabilities",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_FieldCapabilities",
          "doc": " Capabilities the object field supports.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Object",
      "displayName": "Object Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fields",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Object_ObjectField"]
        },
        "doc": " Fields within the object.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Array",
      "displayName": "Array Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "elementType",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeEnum",
          "doc": " Element's data type.\n"
        },
                {
          "name": "typeMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata",
          "doc": " Metadata for complex data types. This property only exists for references, multi-references, objects, and arrays.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_FieldsPattern",
      "displayName": "Fields Pattern Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "pattern",
          "type": "string",
          "doc": ""
        },
                {
          "name": "lowercase",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_UrlizedOnlyPattern",
      "displayName": "Urlized Only Pattern Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "pattern",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator",
      "displayName": "Calculator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": ""
        },
                {
          "name": "pattern",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_pattern",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_pattern",
      "displayName": "pattern Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldsPattern",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_FieldsPattern",
          "doc": " Value is calculated according to pattern, whitespaces are replaced with dash [-].\n"
        },
                {
          "name": "urlizedOnlyPattern",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator_UrlizedOnlyPattern",
          "doc": " Value is only URL encoded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink",
      "displayName": "Page Link Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "calculator",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink_Calculator",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata",
      "displayName": "Type Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metadata",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_metadata",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_metadata",
      "displayName": "metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "reference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Reference",
          "doc": " Metadata for a reference field.\n"
        },
                {
          "name": "multiReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_MultiReference",
          "doc": " Metadata for a multi-reference field.\n"
        },
                {
          "name": "object",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Object",
          "doc": " Metadata for an object field.\n"
        },
                {
          "name": "array",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_Array",
          "doc": " Metadata for an array field.\n"
        },
                {
          "name": "pageLink",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata_PageLink",
          "doc": " Metadata for a page link field.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_NumberRange",
      "displayName": "Number Range Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "min",
          "type": "number",
          "doc": " Minimum permitted value for a numerical field.\n\n Default: No validation\n"
        },
                {
          "name": "max",
          "type": "number",
          "doc": " Maximum permitted value for a numerical field.\n\n Default: No validation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_StringLengthRange",
      "displayName": "String Length Range Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "minLength",
          "type": "integer",
          "doc": " Minimum permitted length for a text field.\n\n Default: No validation\n"
        },
                {
          "name": "maxLength",
          "type": "integer",
          "doc": " Maximum permitted length for a text field.\n\n Default: No validation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_ArraySizeRange",
      "displayName": "Array Size Range Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "minSize",
          "type": "integer",
          "doc": " Minimum permitted number of items in an array field. Relevant for fields that hold arrays, such as those of type `ARRAY`, `ARRAY_STRING`, or `ARRAY_DOCUMENT`.\n\n Default: No validation\n"
        },
                {
          "name": "maxSize",
          "type": "integer",
          "doc": " Maximum permitted number of items in an array field. Relevant for fields that hold arrays, such as those of type `ARRAY`, `ARRAY_STRING`, or `ARRAY_DOCUMENT`.\n\n Default: No validation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "key",
          "type": "string",
          "doc": " Unique identifier for the field. For example, `firstName`.\n"
        },
                {
          "name": "displayName",
          "type": "string",
          "doc": " Field's display name when shown in the Content Manager. For example, `First Name`.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeEnum",
          "doc": " Field's data type.\n"
        },
                {
          "name": "typeMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_TypeMetadata",
          "doc": " Metadata for complex data types. This property only exists for references, multi-references, objects, and arrays.\n"
        },
                {
          "name": "systemField",
          "type": "boolean",
          "doc": " Whether the field is a system field (created automatically).\n",
          "readOnly": true
        },
                {
          "name": "capabilities",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_FieldCapabilities",
          "doc": " Capabilities the field supports.\n"
        },
                {
          "name": "encrypted",
          "type": "boolean",
          "doc": " Indicates if field is encrypted.\n"
        },
                {
          "name": "linkedRouterPage",
          "type": "string",
          "doc": " Defines reference to router pattern in the site document.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the field.\n"
        },
                {
          "name": "plugin",
          "type": "string",
          "doc": ""
        },
                {
          "name": "rangeValidations",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_RangeValidations",
          "doc": ""
        },
                {
          "name": "readOnly",
          "type": "boolean",
          "doc": " Whether the field is read-only. A read-only field can't be changed.\n\n Default: `false`\n"
        },
                {
          "name": "immutable",
          "type": "boolean",
          "doc": " Whether the field is immutable. An immutable field can be set once, but then cannot be updated.\n\n Default: `false`\n"
        },
                {
          "name": "required",
          "type": "boolean",
          "doc": " Whether the field is required.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_RangeValidations",
      "displayName": "Range Validations Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "numberRange",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_NumberRange",
          "doc": " Range of possible values for a numerical field.\n"
        },
                {
          "name": "stringLengthRange",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_StringLengthRange",
          "doc": " Length range permitted for a text field. Relevant for fields that hold strings, such as those of type `TEXT` or `RICH_TEXT`.\n"
        },
                {
          "name": "arraySizeRange",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field_ArraySizeRange",
          "doc": " Array size range permitted. Relevant for fields that hold arrays, such as those of type `ARRAY`, `ARRAY_STRING`, or `ARRAY_DOCUMENT`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Sort",
      "displayName": "Sort Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldKey",
          "type": "string",
          "doc": " Field to sort by.\n"
        },
                {
          "name": "direction",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Direction",
          "doc": " Sort order. Use `ASC` for ascending order or `DESC` for descending order.\n\n Default: `ASC`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Permissions",
      "displayName": "Permissions Object",
      "locations": [],
      "docs":       {
        "summary": " Permissions defined by the lowest role needed to perform each action.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "insert",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Role",
          "doc": " Lowest role needed to add a collection.\n"
        },
                {
          "name": "update",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Role",
          "doc": " Lowest role needed to update a collection.\n"
        },
                {
          "name": "remove",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Role",
          "doc": " Lowest role needed to remove a collection.\n"
        },
                {
          "name": "read",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Role",
          "doc": " Lowest role needed to read a collection.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_PublishPluginOptions",
      "displayName": "Publish Plugin Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "defaultStatus",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_PublishPluginOptions_Status",
        "doc": " Default status.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_SingleItemPluginOptions",
      "displayName": "Single Item Plugin Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "singleItemId",
        "type": "string",
        "doc": " ID of the single item in this collection. If you insert or update an item, its ID value is always changed to this.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_UrlizedPluginOptions",
      "displayName": "Urlized Plugin Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "format",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_UrlizedPluginOptions_Format",
        "doc": " Encoding method for generating a URL in ASCII characters.\n\n * `ORIGINAL`: Letters are converted to lower case and spaces are replaced with dashes before generating the encoded URL.\n * `PLAIN`: No changes are made before generating the encoded URL.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_GridapplessPluginOptions",
      "displayName": "Gridappless Plugin Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "migrated",
        "type": "boolean",
        "doc": " indicates if tenant is migrated to gridappless or initially on it\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin",
      "displayName": "Plugin Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_Type",
          "doc": " Plugin types. The following plugins are supported:\n\n * `PUBLISH`: Allows items to be marked as either draft or published. For each item you can set a publishing time when the item will become visible to site visitors.\n * `SINGLE_ITEM`: Ensures the collection can have one item at most. Can only be applied to a new collection.\n * `URLIZED`: Generates item URLs for collections used by dynamic pages.\n * `GRIDAPPLESS`: This plugin is read-only and can't be manually added. Indicates the collection structure is shared between sandbox and live environments.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_options",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_options",
      "displayName": "options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "publishOptions",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_PublishPluginOptions",
          "doc": " Options for the Publish plugin.\n"
        },
                {
          "name": "singleItemOptions",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_SingleItemPluginOptions",
          "doc": " Options for the Single Item plugin.\n"
        },
                {
          "name": "urlizedOptions",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_UrlizedPluginOptions",
          "doc": " Options for the Urlized plugin.\n"
        },
                {
          "name": "gridapplessOptions",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin_GridapplessPluginOptions",
          "doc": " Options for Gridappless plugin.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_CollectionCapabilities",
      "displayName": "Collection Capabilities Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataOperations",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_CollectionCapabilities_DataOperation"]
        },
        "doc": " Data operations the collection supports.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_FieldCapabilities",
      "displayName": "Field Capabilities Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sortable",
          "type": "boolean",
          "doc": " Whether the collection can be sorted by this field.\n\n Default: `false`\n"
        },
                {
          "name": "queryOperators",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_FieldCapabilities_QueryOperator"]
          },
          "doc": " Query operators that can be used for this field.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_SnapshotDataCollections",
      "displayName": "Snapshot Data Collections Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "snapshotId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "collections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_DataCollection"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionClonedEvent",
      "displayName": "Data Collection Cloned Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": " original instance collection is cloned from\n"
        },
                {
          "name": "originId",
          "type": "string",
          "doc": " original collection ID, may be same as current one\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_DataCollectionChangedEvent",
      "displayName": "Data Collection Changed Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldsAdded",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field"]
          },
          "doc": " list of new fields\n"
        },
                {
          "name": "fieldsUpdated",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field"]
          },
          "doc": " list of changed fields\n"
        },
                {
          "name": "fieldsRemoved",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Field"]
          },
          "doc": " list of removed fields\n"
        },
                {
          "name": "pluginsAdded",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin"]
          },
          "doc": " list of new plugins\n"
        },
                {
          "name": "pluginsUpdated",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin"]
          },
          "doc": " list of changed plugins\n"
        },
                {
          "name": "pluginsRemoved",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_collectionservice_Plugin"]
          },
          "doc": " list of removed plugins\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Wix Data._wix_common_Cursors",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": " Indicates if there are more results after the current page.\n If `true`, another page of results can be retrieved.\n If `false`, this is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_Options_PublishPluginOptions",
      "displayName": "Publish Plugin Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "showDraftItems",
        "type": "boolean",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_Options",
      "displayName": "Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used, `returnTotalCount` is `true` in the request, and `tooManyToCount` is false.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Whether the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Average",
      "displayName": "Average Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemFieldName",
        "type": "string",
        "doc": " Name of the field for which to calculate the average value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Min",
      "displayName": "Min Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemFieldName",
        "type": "string",
        "doc": " Name of the field for which to calculate the minimum value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Max",
      "displayName": "Max Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemFieldName",
        "type": "string",
        "doc": " Name of the field for which to calculate the maximum value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Sum",
      "displayName": "Sum Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemFieldName",
        "type": "string",
        "doc": " Name of the field for which to calculate the sum.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Count",
      "displayName": "Count Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation",
      "displayName": "Operation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resultFieldName",
          "type": "string",
          "doc": " Name of the field containing results of the operation.\n"
        },
                {
          "name": "calculate",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_calculate",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_calculate",
      "displayName": "calculate Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "average",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Average",
          "doc": " Calculate the average value of a specified field for all items in the grouping.\n"
        },
                {
          "name": "min",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Min",
          "doc": " Calculate the minimum value of a specified field for all items in the grouping.\n"
        },
                {
          "name": "max",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Max",
          "doc": " Calculate the maximum value of a specified field for all items in the grouping.\n"
        },
                {
          "name": "sum",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Sum",
          "doc": " Calculate the sum of values of a specified field for all items in the grouping.\n"
        },
                {
          "name": "itemCount",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation_Count",
          "doc": " Calculate the number of items in the grouping.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation",
      "displayName": "Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "groupingFields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Fields by which to group items for the aggregation. If empty, the aggregation is carried out on all items in the collection.\n"
        },
                {
          "name": "operations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation_Operation"]
          },
          "doc": " Operations to carry out on the data in each grouping.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest",
      "displayName": "Aggregate Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection on which to run the aggregation.\n"
        },
                {
          "name": "initialFilter",
          "type": "struct",
          "doc": " Filter applied to the collection's data prior to running the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.\n"
        },
                {
          "name": "aggregation",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_Aggregation",
          "doc": " Aggregation applied to the data.\n"
        },
                {
          "name": "finalFilter",
          "type": "struct",
          "doc": " Filter applied to the processed data following the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_PagingMethod",
          "doc": ""
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Sorting"]
          },
          "doc": " Sort object in the following format:\n `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsRequest_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Paging",
          "doc": " Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_CursorPaging",
          "doc": " Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_AggregateDataItemsResponse",
      "displayName": "Aggregate Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["struct"]
          },
          "doc": " Aggregation results.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_DataItem",
      "displayName": "Data Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Data item ID.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data item contents.\n \n Property-value pairs representing the data item's payload. When retrieving a data item, it also includes the following read-only fields:\n\n + `_id`: Item ID.\n + `_createdDate`: Date and time the item was added to the collection.\n + `_updatedDate`: Date and time the item was last modified. When the item is first inserted, `_createdDate` and `_updatedDate` have the same value.\n + `_ownerId`: ID of the user who created the item. Can be modified with site owner permissions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. This field doesn't appear if there is no item ID, for example, when item creation fails.\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Wix Data._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkDataItemResult",
      "displayName": "Bulk Data Item Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionType",
          "doc": " The action attempted for the data item.\n"
        },
                {
          "name": "itemMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_ItemMetadata",
          "doc": " Metadata related to the data item for which the action was attempted.\n"
        },
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " The data item for which the action was attempted. Only returned if `returnEntity` is `true` in the request and the action is successful.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkInsertDataItemsRequest",
      "displayName": "Bulk Insert Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the items.\n"
        },
                {
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to insert.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the inserted data items.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkInsertDataItemsResponse",
      "displayName": "Bulk Insert Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemResult"]
          },
          "doc": " Information about the inserted items.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkRemoveDataItemsRequest",
      "displayName": "Bulk Remove Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to remove the item.\n"
        },
                {
          "name": "dataItemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of data items to remove.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkRemoveDataItemsResponse",
      "displayName": "Bulk Remove Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemResult"]
          },
          "doc": " Information about the removed data items.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkSaveDataItemsRequest",
      "displayName": "Bulk Save Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert or update the items.\n"
        },
                {
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to insert or update.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the saved data item.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkSaveDataItemsResponse",
      "displayName": "Bulk Save Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemResult"]
          },
          "doc": " Information about the saved items.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkUpdateDataItemsRequest",
      "displayName": "Bulk Update Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to update items.\n"
        },
                {
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Data items to update.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the updated data items.\n When `true`, the `results` objects contain a `dataItem` field.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkUpdateDataItemsResponse",
      "displayName": "Bulk Update Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemResult"]
          },
          "doc": " Information about the updated items.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_CountDataItemsRequest",
      "displayName": "Count Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection for which to count query results.\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n\n `\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n }`.\n\n Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_CountDataItemsResponse",
      "displayName": "Count Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "totalCount",
        "type": "integer",
        "doc": " Number of items matching the query.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryDistinctValuesRequest",
      "displayName": "Query Distinct Values Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection to query.\n"
        },
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Item field name for which to return all distinct values.\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n\n `\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n }`.\n\n Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryDistinctValuesRequest_PagingMethod",
          "doc": ""
        },
                {
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryDistinctValuesRequest_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryDistinctValuesResponse",
      "displayName": "Query Distinct Values Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "distinctValues",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._google_protobuf_Value"]
          },
          "doc": " List of distinct values contained in the field specified in `fieldName`.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_GetDataItemRequest",
      "displayName": "Get Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to retrieve the data item.\n"
        },
                {
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the data item to retrieve.\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_GetDataItemResponse",
      "displayName": "Get Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItem",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
        "doc": " Retrieved item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_InsertDataItemRequest",
      "displayName": "Insert Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the item.\n"
        },
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Item to insert.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_InsertDataItemResponse",
      "displayName": "Insert Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItem",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
        "doc": " Inserted data item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n\n `\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n }`\n\n Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryDataItemsRequest",
      "displayName": "Query Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the item.\n"
        },
                {
          "name": "query",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_QueryV2",
          "doc": " Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n"
        },
                {
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response for a query with offset paging.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n"
        },
                {
          "name": "includeReferencedItems",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Properties for which to include referenced items in the query's results.\n Up to 50 referenced items can be included for each item that matches the query.\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryDataItemsResponse",
      "displayName": "Query Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem"]
          },
          "doc": " Retrieved items.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsRequest",
      "displayName": "Query Referenced Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n"
        },
                {
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n"
        },
                {
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field containing references in the referring item.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
          "doc": " Order of the returned referenced items. Sorted by the date each item was referenced.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsRequest_PagingMethod",
          "doc": ""
        },
                {
          "name": "returnTotalCount",
          "type": "boolean",
          "doc": " Whether to return the total count in the response.\n When `true`, the `pagingMetadata` object in the response contains a `total` field.\n\n Default: `false`\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsRequest_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_UnresolvedReference",
      "displayName": "Unresolved Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n"
        },
                {
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field specified to query for references.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_ReferencedResult",
      "displayName": "Referenced Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_ReferencedResult_entity",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_ReferencedResult_entity",
      "displayName": "entity Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Data item referenced.\n"
        },
                {
          "name": "unresolvedReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_UnresolvedReference",
          "doc": " Unresolved reference. Appears instead of the data item when the reference doesn't resolve, for example, when an ID isn't found or if an item is in draft state.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse",
      "displayName": "Query Referenced Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_QueryReferencedDataItemsResponse_ReferencedResult"]
          },
          "doc": " Referenced items and/or IDs. For successfully resolved references, the referenced data item is returned. For references that can't be resolved, the ID is returned.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_IsReferencedDataItemRequest",
      "displayName": "Is Referenced Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring data item.\n"
        },
                {
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field to check for a reference to the item that may be referenced.\n"
        },
                {
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n"
        },
                {
          "name": "referencedItemId",
          "type": "string",
          "doc": " ID of the item that may be referenced.\n"
        },
                {
          "name": "consistentRead",
          "type": "boolean",
          "doc": " Whether to retrieve data from the primary database instance.\n This decreases performance but ensures data retrieved is up to date even immediately after an update.\n Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_IsReferencedDataItemResponse",
      "displayName": "Is Referenced Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "isReferenced",
        "type": "boolean",
        "doc": " Whether the specified reference exists.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_RemoveDataItemRequest",
      "displayName": "Remove Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection from which to remove the item.\n"
        },
                {
          "name": "dataItemId",
          "type": "string",
          "doc": " ID of the item to remove.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_RemoveDataItemResponse",
      "displayName": "Remove Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItem",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
        "doc": " Removed item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_SaveDataItemRequest",
      "displayName": "Save Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert or update the item.\n"
        },
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Data item to insert or update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_SaveDataItemResponse",
      "displayName": "Save Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_SaveDataItemResponse_Action",
          "doc": " The action carried out for the item.\n\n + `INSERTED`: A new item was added to the collection.\n + `UPDATED`: An existing item in the collection was updated.\n"
        },
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Inserted or updated data item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_TruncateDataItemsRequest",
      "displayName": "Truncate Data Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the collection to truncate.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_TruncateDataItemsResponse",
      "displayName": "Truncate Data Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_UpdateDataItemRequest",
      "displayName": "Update Data Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the existing item.\n"
        },
                {
          "name": "dataItem",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
          "doc": " Updated data item content. The existing data item's content is replaced entirely.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_UpdateDataItemResponse",
      "displayName": "Update Data Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItem",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItem",
        "doc": " Updated data item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_DataItemReference",
      "displayName": "Data Item Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Referring item field containing the references to the referenced items.\n"
        },
                {
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n"
        },
                {
          "name": "referencedItemId",
          "type": "string",
          "doc": " ID of the referenced item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_InsertDataItemReferenceRequest",
      "displayName": "Insert Data Item Reference Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection in which to insert the reference.\n"
        },
                {
          "name": "dataItemReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
          "doc": " Reference to insert\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_InsertDataItemReferenceResponse",
      "displayName": "Insert Data Item Reference Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItemReference",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
        "doc": " Inserted reference.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkDataItemReferenceResult",
      "displayName": "Bulk Data Item Reference Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionType",
          "doc": " The action attempted for the reference.\n"
        },
                {
          "name": "referenceMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_ItemMetadata",
          "doc": " Metadata related to the reference for which the action was attempted.\n"
        },
                {
          "name": "dataItemReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
          "doc": " The reference for which the action was attempted. Only returned if `returnEntity` is `true` in the request and the action is successful.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkInsertDataItemReferencesRequest",
      "displayName": "Bulk Insert Data Item References Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring items.\n"
        },
                {
          "name": "dataItemReferences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference"]
          },
          "doc": " References to insert.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the inserted data item references.\n When `true`, the `results` objects contain a `dataItemReference` field.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkInsertDataItemReferencesResponse",
      "displayName": "Bulk Insert Data Item References Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemReferenceResult"]
          },
          "doc": " Information about the inserted references.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkRemoveDataItemReferencesRequest",
      "displayName": "Bulk Remove Data Item References Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring items.\n"
        },
                {
          "name": "dataItemReferences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference"]
          },
          "doc": " References to remove.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_BulkRemoveDataItemReferencesResponse",
      "displayName": "Bulk Remove Data Item References Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_BulkDataItemReferenceResult"]
          },
          "doc": " Information about the removed references.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_RemoveDataItemReferenceRequest",
      "displayName": "Remove Data Item Reference Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n"
        },
                {
          "name": "dataItemReference",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
          "doc": " Reference to remove.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_RemoveDataItemReferenceResponse",
      "displayName": "Remove Data Item Reference Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItemReference",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference",
        "doc": " Removed reference.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_ReplaceDataItemReferencesRequest",
      "displayName": "Replace Data Item References Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the collection containing the referring item.\n"
        },
                {
          "name": "referringItemFieldName",
          "type": "string",
          "doc": " Field containing references in the referring item.\n"
        },
                {
          "name": "referringItemId",
          "type": "string",
          "doc": " ID of the referring item.\n"
        },
                {
          "name": "newReferencedItemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of new referenced item IDs to replace the existing ones.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_ReplaceDataItemReferencesResponse",
      "displayName": "Replace Data Item References Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataItemReferences",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_data_DataItemReference"]
        },
        "doc": " Updated references.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
      "displayName": "External Database Connection Object",
      "locations": [],
      "docs":       {
        "summary": " An external database connection defines a connection between an external database and a Wix site.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the external database connection.\n An external database connection may connect to one or more external data collections or tables. \n These are represented as `connectionName/dataCollectionId`.\n"
        },
                {
          "name": "endpoint",
          "type": "string",
          "doc": " Base URL for provisioning and managing data in the external database. For example: `https://example.com/my-external-database`.\n"
        },
                {
          "name": "configuration",
          "type": "struct",
          "doc": " Settings passed to the external database connection as part of each request.\n These settings can relate to authentication, tenancy, or provide any other information needed for processing a request.\n Their content and structure depend on the specific requirements of the external database's API.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_GetExternalDatabaseConnectionRequest",
      "displayName": "Get External Database Connection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "name",
        "type": "string",
        "doc": " Name of the external database connection to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_GetExternalDatabaseConnectionResponse",
      "displayName": "Get External Database Connection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " Details of the external database connection requested.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_ListExternalDatabaseConnectionsRequest",
      "displayName": "List External Database Connections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_ListExternalDatabaseConnectionsResponse",
      "displayName": "List External Database Connections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnections",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection"]
        },
        "doc": " List of external database connections.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_CreateExternalDatabaseConnectionRequest",
      "displayName": "Create External Database Connection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " External database connection details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_CreateExternalDatabaseConnectionResponse",
      "displayName": "Create External Database Connection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " Details of external database connection created.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_UpdateExternalDatabaseConnectionRequest",
      "displayName": "Update External Database Connection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " Updated external database connection details. The existing collection is replaced with this version.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_UpdateExternalDatabaseConnectionResponse",
      "displayName": "Update External Database Connection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "externalDatabaseConnection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_externaldatabase_ExternalDatabaseConnection",
        "doc": " Updated external database connection details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_DeleteExternalDatabaseConnectionRequest",
      "displayName": "Delete External Database Connection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "name",
        "type": "string",
        "doc": " Name of the external database connection to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_externaldatabase_DeleteExternalDatabaseConnectionResponse",
      "displayName": "Delete External Database Connection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_Index_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "path",
          "type": "string",
          "doc": " Path of the field to index. For example: `title` or `options.price`.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index_Field_Order",
          "doc": " Sort order for the index. Base on how the data is regularly queried.\n \n Default: `ASC`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_Index_Failure",
      "displayName": "Failure Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n - `WDE0112`: Unknown error while building collection index.\n - `WDE0113`: Duplicate key error while building collection index.\n - `WDE0114`: Document too large while building collection index.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the failure. \n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " ID of the data item that caused the failure.\n For example, if `unique` is `true`, the ID of an item containing a duplicate value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_Index",
      "displayName": "Index Object",
      "locations": [],
      "docs":       {
        "summary": " An index is a map of a collection's data, organized according to specific fields to increase query speed.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the index.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index_Field"]
          },
          "doc": " Fields for which the index is defined. \n\n Max: 3 fields (for a unique index: 1 field)\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index_Status",
          "doc": " Current status of the index.\n - `BUILDING`: Index creation is in progress.\n - `ACTIVE`: Index has been successfully created and can be used in queries.\n - `DROPPING`: Index is in the process of being dropped.\n - `DROPPED`: Index has been dropped successfully.\n - `FAILED`: Index creation has failed.\n - `INVALID`: Index contains incorrectly indexed data.\n",
          "readOnly": true
        },
                {
          "name": "failure",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index_Failure",
          "doc": " Contains details about the reasons for failure when `status` is `FAILED`.\n",
          "readOnly": true
        },
                {
          "name": "unique",
          "type": "boolean",
          "doc": " Whether the index enforces uniqueness of values in the field for which it is defined. \n If `true`, the index can have only one field.\n\n Default: `false`\n"
        },
                {
          "name": "caseInsensitive",
          "type": "boolean",
          "doc": " Whether the index ignores case.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_CreateIndexRequest",
      "displayName": "Create Index Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "index",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index",
          "doc": " Details of the index to be created.\n"
        },
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which to generate the index.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_CreateIndexResponse",
      "displayName": "Create Index Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "index",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index",
        "doc": " Details of the index being generated.  \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_DropIndexRequest",
      "displayName": "Drop Index Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "indexName",
          "type": "string",
          "doc": " Name of the index to drop.\n"
        },
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which the index to be dropped is defined.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_DropIndexResponse",
      "displayName": "Drop Index Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_ListIndexesRequest",
      "displayName": "List Indexes Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataCollectionId",
        "type": "string",
        "doc": " ID of the [data collection](https://dev.wix.com/api/rest/wix-data/wix-data/data-collections) for which to list indexes.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_ListIndexesResponse",
      "displayName": "List Indexes Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indexes",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_index_Index"]
        },
        "doc": " List of all indexes for the requested data collection.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_SharedDataCollection",
      "displayName": "Shared Data Collection Object",
      "locations": [],
      "docs":       {
        "summary": " Shared collection details\n Describes collection actually accessible from two sites\n  - \"source\" means collection owner site\n  - \"target\" means shared collection receiving site\n Permission or policy that allows collection sharing would be described by separate entity\n\n Actual DataCollection can be requested using DataCollectionService\n When getting shared collection record from source site all fields are present,\n from target site `source_*` and filter fields are not returned.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sourceDataCollectionId",
          "type": "string",
          "doc": " Original DataCollection ID with namespace\n"
        },
                {
          "name": "sourceSiteId",
          "type": "string",
          "doc": " Original Meta Site ID\n"
        },
                {
          "name": "targetDataCollectionId",
          "type": "string",
          "doc": " DataCollection ID on shared site with namespace\n"
        },
                {
          "name": "targetSiteId",
          "type": "string",
          "doc": " Target Meta Site ID\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Sharing filter, restricting accessible items\n"
        },
                {
          "name": "targetDisplayNamespace",
          "type": "string",
          "doc": " Displayed target namespace name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ListSharedDataCollectionsRequest",
      "displayName": "List Shared Data Collections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " only return records with given collection IDs as seen from current site\n if empty returns all shared collections\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Wix Data._wix_common_CursorPaging",
          "doc": " paging\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ListSharedDataCollectionsResponse",
      "displayName": "List Shared Data Collections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sharedDataCollections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharedDataCollection"]
          },
          "doc": " shared collections according to request\n collections shared with current site are returned without `source_*` and filter fields\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Data._wix_common_CursorPagingMetadata",
          "doc": " paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_SharingDetails",
      "displayName": "Sharing Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " collection ID to share\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Sharing filter, restricting accessible items\n"
        },
                {
          "name": "targetNamespace",
          "type": "string",
          "doc": " Namespace to build target collection ID\n must be unique on target site\n"
        },
                {
          "name": "targetDisplayNamespace",
          "type": "string",
          "doc": " Displayed namespace name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ShareAndConnectDataCollectionRequest",
      "displayName": "Share And Connect Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "targetSiteId",
          "type": "string",
          "doc": " Meta Site ID to share collection from current site with\n"
        },
                {
          "name": "details",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharingDetails",
          "doc": " Sharing details\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ShareAndConnectDataCollectionResponse",
      "displayName": "Share And Connect Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "sharedDataCollection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharedDataCollection",
        "doc": " resulting share record\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ConnectOwnedDataCollectionRequest",
      "displayName": "Connect Owned Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sourceSiteId",
          "type": "string",
          "doc": " Meta Site ID to share collection from\n"
        },
                {
          "name": "details",
          "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharingDetails",
          "doc": " Sharing details\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_ConnectOwnedDataCollectionResponse",
      "displayName": "Connect Owned Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "sharedDataCollection",
        "type": "All APIs.Wix Data._com_wixpress_cloud_data_api_share_SharedDataCollection",
        "doc": " resulting share record\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_CancelDataCollectionSharingRequest",
      "displayName": "Cancel Data Collection Sharing Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dataCollectionId",
          "type": "string",
          "doc": " collection ID on current site\n"
        },
                {
          "name": "targetSiteId",
          "type": "string",
          "doc": " Target site ID to remove shared collection from\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_CancelDataCollectionSharingResponse",
      "displayName": "Cancel Data Collection Sharing Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_DisconnectSharedDataCollectionRequest",
      "displayName": "Disconnect Shared Data Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dataCollectionId",
        "type": "string",
        "doc": " collection ID on current site\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_share_DisconnectSharedDataCollectionResponse",
      "displayName": "Disconnect Shared Data Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_CollectionType",
      "displayName": "Collection Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NATIVE -  User-created collection.\n <\/code><\/li><li><code> WIX_APP -  [Collection](https://support.wix.com/en/article/velo-working-with-wix-app-collections-and-code#what-are-wix-app-collections) created by a Wix app when it is installed. This type of collection can be modified dynamically by that app (for example, Wix Forms).\n <\/code><\/li><li><code> BLOCKS_APP -  Collection created by a Wix Blocks app.\n <\/code><\/li><li><code> EXTERNAL -  Collection located in externally connected storage.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NATIVE",
        "WIX_APP",
        "BLOCKS_APP",
        "EXTERNAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Direction",
      "displayName": "Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Role",
      "displayName": "Role Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ADMIN -  Site administrator.\n <\/code><\/li><li><code> SITE_MEMBER_AUTHOR -  Signed-in user who added content to this collection.\n <\/code><\/li><li><code> SITE_MEMBER -  Any signed-in user.\n <\/code><\/li><li><code> ANYONE -  Any site visitor.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ADMIN",
        "SITE_MEMBER_AUTHOR",
        "SITE_MEMBER",
        "ANYONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_PagingMode",
      "displayName": "Paging Mode Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> OFFSET -  Offset-based paging.\n <\/code><\/li><li><code> CURSOR -  Cursor-based paging.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "OFFSET",
        "CURSOR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Field_TypeEnum",
      "displayName": "Type Enum Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TEXT <\/code><\/li><li><code> NUMBER <\/code><\/li><li><code> DATE <\/code><\/li><li><code> DATETIME <\/code><\/li><li><code> IMAGE <\/code><\/li><li><code> BOOLEAN <\/code><\/li><li><code> DOCUMENT <\/code><\/li><li><code> URL <\/code><\/li><li><code> RICH_TEXT <\/code><\/li><li><code> VIDEO <\/code><\/li><li><code> ANY <\/code><\/li><li><code> ARRAY_STRING <\/code><\/li><li><code> ARRAY_DOCUMENT <\/code><\/li><li><code> AUDIO <\/code><\/li><li><code> TIME <\/code><\/li><li><code> LANGUAGE <\/code><\/li><li><code> RICH_CONTENT <\/code><\/li><li><code> MEDIA_GALLERY <\/code><\/li><li><code> ADDRESS <\/code><\/li><li><code> PAGE_LINK <\/code><\/li><li><code> REFERENCE <\/code><\/li><li><code> MULTI_REFERENCE <\/code><\/li><li><code> OBJECT <\/code><\/li><li><code> ARRAY <\/code><\/li><li><code> LEGACY_TIME -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_BOOK -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_EXTERNAL_URL -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_BROKEN_REFERENCE -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_IMAGE -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_COLOR -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li><li><code> LEGACY_EXTERNAL_VIDEO -  Deprecated - can’t be added to collections. Can only appear in older collections.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TEXT",
        "NUMBER",
        "DATE",
        "DATETIME",
        "IMAGE",
        "BOOLEAN",
        "DOCUMENT",
        "URL",
        "RICH_TEXT",
        "VIDEO",
        "ANY",
        "ARRAY_STRING",
        "ARRAY_DOCUMENT",
        "AUDIO",
        "TIME",
        "LANGUAGE",
        "RICH_CONTENT",
        "MEDIA_GALLERY",
        "ADDRESS",
        "PAGE_LINK",
        "REFERENCE",
        "MULTI_REFERENCE",
        "OBJECT",
        "ARRAY",
        "LEGACY_TIME",
        "LEGACY_BOOK",
        "LEGACY_EXTERNAL_URL",
        "LEGACY_BROKEN_REFERENCE",
        "LEGACY_IMAGE",
        "LEGACY_COLOR",
        "LEGACY_EXTERNAL_VIDEO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_PublishPluginOptions_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PUBLISHED <\/code><\/li><li><code> DRAFT <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PUBLISHED",
        "DRAFT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_UrlizedPluginOptions_Format",
      "displayName": "Format Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ORIGINAL <\/code><\/li><li><code> PLAIN <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ORIGINAL",
        "PLAIN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_Plugin_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PUBLISH -  Allows items to be marked as either draft or published. For each item you can set a publishing time when the item will become visible to site visitors.\n <\/code><\/li><li><code> SINGLE_ITEM -  Ensures the collection can have one item at most. Can only be applied to a new collection.\n <\/code><\/li><li><code> URLIZED -  Generates item URLs for collections used by dynamic pages.\n <\/code><\/li><li><code> GRIDAPPLESS -  This plugin is read-only and can't be manually added. Indicates collection structure is shared between sandbox and live environments.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PUBLISH",
        "SINGLE_ITEM",
        "URLIZED",
        "GRIDAPPLESS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_CollectionCapabilities_DataOperation",
      "displayName": "Data Operation Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> AGGREGATE <\/code><\/li><li><code> BULK_INSERT <\/code><\/li><li><code> BULK_REMOVE <\/code><\/li><li><code> BULK_SAVE <\/code><\/li><li><code> BULK_UPDATE <\/code><\/li><li><code> COUNT <\/code><\/li><li><code> DISTINCT <\/code><\/li><li><code> FIND <\/code><\/li><li><code> GET <\/code><\/li><li><code> INSERT <\/code><\/li><li><code> INSERT_REFERENCE <\/code><\/li><li><code> IS_REFERENCED <\/code><\/li><li><code> QUERY_REFERENCED <\/code><\/li><li><code> REMOVE <\/code><\/li><li><code> REMOVE_REFERENCE <\/code><\/li><li><code> REPLACE_REFERENCES <\/code><\/li><li><code> SAVE <\/code><\/li><li><code> TRUNCATE <\/code><\/li><li><code> UPDATE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "AGGREGATE",
        "BULK_INSERT",
        "BULK_REMOVE",
        "BULK_SAVE",
        "BULK_UPDATE",
        "COUNT",
        "DISTINCT",
        "FIND",
        "GET",
        "INSERT",
        "INSERT_REFERENCE",
        "IS_REFERENCED",
        "QUERY_REFERENCED",
        "REMOVE",
        "REMOVE_REFERENCE",
        "REPLACE_REFERENCES",
        "SAVE",
        "TRUNCATE",
        "UPDATE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_collectionservice_FieldCapabilities_QueryOperator",
      "displayName": "Query Operator Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EQ <\/code><\/li><li><code> LT <\/code><\/li><li><code> GT <\/code><\/li><li><code> NE <\/code><\/li><li><code> LTE <\/code><\/li><li><code> GTE <\/code><\/li><li><code> STARTS_WITH <\/code><\/li><li><code> ENDS_WITH <\/code><\/li><li><code> CONTAINS <\/code><\/li><li><code> HAS_SOME <\/code><\/li><li><code> HAS_ALL <\/code><\/li><li><code> EXISTS <\/code><\/li><li><code> URLIZED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EQ",
        "LT",
        "GT",
        "NE",
        "LTE",
        "GTE",
        "STARTS_WITH",
        "ENDS_WITH",
        "CONTAINS",
        "HAS_SOME",
        "HAS_ALL",
        "EXISTS",
        "URLIZED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_Environment",
      "displayName": "Environment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LIVE <\/code><\/li><li><code> SANDBOX <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LIVE",
        "SANDBOX"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_upstream_wix_common_BulkActionType",
      "displayName": "Bulk Action Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_ACTION_TYPE <\/code><\/li><li><code> INSERT <\/code><\/li><li><code> UPDATE <\/code><\/li><li><code> DELETE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_ACTION_TYPE",
        "INSERT",
        "UPDATE",
        "DELETE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_data_SaveDataItemResponse_Action",
      "displayName": "Action Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_ACTION <\/code><\/li><li><code> INSERTED <\/code><\/li><li><code> UPDATED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_ACTION",
        "INSERTED",
        "UPDATED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_Index_Field_Order",
      "displayName": "Order Object",
      "locations": [],
      "docs":       {
        "summary": " Order determines how values are ordered in the index. This is important when\n ordering and/or range querying by indexed fields.\n \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_cloud_data_api_index_Index_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  Place holder. Never returned by the service.\n <\/code><\/li><li><code> BUILDING -  Index creation is in progress.\n <\/code><\/li><li><code> ACTIVE -  Index has been successfully created and can be used in queries.\n <\/code><\/li><li><code> DROPPING -  Index is in the process of being dropped.\n <\/code><\/li><li><code> DROPPED -  Index has been dropped successfully.\n <\/code><\/li><li><code> FAILED -  Index creation has failed.\n <\/code><\/li><li><code> INVALID -  Index contains incorrectly indexed data.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "BUILDING",
        "ACTIVE",
        "DROPPING",
        "DROPPED",
        "FAILED",
        "INVALID"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.cloud.cloud-data"}
}