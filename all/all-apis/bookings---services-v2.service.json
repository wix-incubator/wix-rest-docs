{
  "name": "Bookings - Services V2",
  "client_id": "https://github.com/wix-private/scheduler/tree/master/bookings-backend/services-2#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage the services your customers can book.",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Services Service",
    "entity": "_wix_bookings_services_v2_Service",
    "src": "https://github.com/wix-private/scheduler/blob/master/bookings-backend/services-2/wix/bookings/services/v2/service.proto"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/bookings---services-v2/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/bookings---services-v2/docs/services-filter-and-sort.md",
      "name": "Filtering and Sorting"
    },
        {
      "path": "../guides/bookings---services-v2/docs/flows.md",
      "name": "Sample Flows"
    }
  ],
  "operations":   [
        {
      "name": "Get Service",
      "methodName": "GetService",
      "serviceName": "ServicesService",
      "tag": "Services Service",
      "permissions":       [
                {
          "name": "Manage Bookings",
          "description": "Request permission to read, create and change the site's bookings, schedules, sessions, services and resources, including site owner data, staff member data, and participant data."
        },
                {
          "name": "Read Bookings - Public Data",
          "description": "Request permission to read the business's bookings info, including staff member data (calendar, services, etc.)"
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["serviceId"],
      "params": [      {
        "in": "PATH",
        "name": "serviceId",
        "type": "string",
        "doc": " ID of the service to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetService",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_GetServiceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a service.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/bookings/v2/services/{serviceId}",
        "links": [],
        "examples": [        {
          "title": "Retrieve a service",
          "body": ["curl -X GET 'https://wixapis.com/bookings/v2/services/353aa3b7-00ef-42bd-86ff-720d7ef60443' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"service\": {\n  \"id\": \"353aa3b7-00ef-42bd-86ff-720d7ef60443\",\n  \"type\": \"CLASS\",\n  \"sortOrder\": 0,\n  \"name\": \"Dog Yoga\",\n  \"description\": \"Get ready to downward dog with your furry best friend! In this unique class, you and your pup will strike a pose and find your zen. With a mix of stretching, breathing exercises, and playtime, this class is sure to be a tail-waggin' good time. Whether you're a seasoned yogi or a pup-tastic beginner, this class is pawsitively perfect for all levels. Don't forget to bring your sense of humor, as there's sure to be a few doggy distractions and playful paw-terruptions along the way. Namaste!\",\n  \"tagLine\": \"Unleash your zen with downward dog and a wagging tail in our pup-poseful yoga class!\",\n  \"defaultCapacity\": 50,\n  \"media\":   {\n    \"items\": [],\n    \"mainMedia\": {\"image\":     {\n      \"id\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n      \"url\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n      \"height\": 4032,\n      \"width\": 3024,\n      \"filename\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\"\n    }}\n  },\n  \"hidden\": false,\n  \"category\":   {\n    \"id\": \"7b5b9862-490f-491c-8477-d39baed078a1\",\n    \"name\": \"Best for fun dogs\",\n    \"sortOrder\": 1\n  },\n  \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n  \"payment\":   {\n    \"rateType\": \"FIXED\",\n    \"fixed\": {\"price\":     {\n      \"value\": \"15\",\n      \"currency\": \"USD\"\n    }},\n    \"pricingPlansIds\": [],\n    \"options\":     {\n      \"online\": true,\n      \"inPerson\": false,\n      \"deposit\": false,\n      \"pricingPlan\": false\n    }\n  },\n  \"onlineBooking\":   {\n    \"enabled\": true,\n    \"requireManualApproval\": false,\n    \"allowMultipleRequests\": false\n  },\n  \"staffMembersIds\": [],\n  \"conferencing\": {\"enabled\": true},\n  \"locations\": [{\"type\": \"BUSINESS\"}],\n  \"bookingPolicy\": {},\n  \"schedule\":   {\n    \"id\": \"8acb939f-34d1-4ac9-8564-b24c29e11ef7\",\n    \"firstSessionStart\": \"2023-02-13T15:30:00Z\"\n  },\n  \"supportedSlugs\": [  {\n    \"name\": \"dog-yoga\",\n    \"custom\": false,\n    \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n  }],\n  \"mainSlug\":   {\n    \"name\": \"dog-yoga\",\n    \"custom\": false,\n    \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n  },\n  \"urls\":   {\n    \"servicePage\":     {\n      \"relativePath\": \"/service-page/dog-yoga\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    },\n    \"bookingPage\":     {\n      \"relativePath\": \"/book-online/dog-yoga/book\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    },\n    \"calendarPage\":     {\n      \"relativePath\": \"/booking-calendar/dog-yoga\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetServiceRequest",
        "rpcResponseName": "GetServiceResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Services",
      "methodName": "QueryServices",
      "serviceName": "ServicesService",
      "tag": "Services Service",
      "permissions":       [
                {
          "name": "Manage Bookings",
          "description": "Request permission to read, create and change the site's bookings, schedules, sessions, services and resources, including site owner data, staff member data, and participant data."
        },
                {
          "name": "Read Bookings - Public Data",
          "description": "Request permission to read the business's bookings info, including staff member data (calendar, services, etc.)"
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2",
        "doc": " WQL expression.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryServices",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_QueryServicesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 services, given the provided paging, filtering, and sorting.\n\n\n Define queries using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n For field support for filters and sorting, see [Supported Filters and Sorting](https://dev.wix.com/api/rest/wix-bookings/services-v2/supported-filters-and-sorting).\n\n To retrieve all services use an empty query:\n\n ```javascript\n {\n   \"query\": {}\n }\n ```\n `Query Services` runs with these defaults, which you can override:\n + `paging.limit` is `100`.\n + `paging.offset` is `0`.\n\n\n  >**Notes:**\n  > + Use UTC format when filtering with dates.\n  > + Only 1 use of each filter in the same query is supported. If a filter is defined more than once in a query, only the first occurrence is processed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v2/services/query",
        "links": [],
        "examples": [        {
          "title": "Query all services",
          "body": ["curl -X POST 'https://wixapis.com/bookings/v2/services/query' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"query\": {\n    \"limit\": 15,\n    \"filter\": {\n      \"hidden\": {\n        \"$eq\": \"false\"\n      }\n    },\n    \"fields\": [\"name\", \"type\", \"description\"]\n  }\n}'"],
          "response": ["{\n  \"services\":   [\n        {\n      \"id\": \"0f01e746-2943-4893-97a3-9d52d8e9e26e\",\n      \"type\": \"APPOINTMENT\",\n      \"sortOrder\": 1,\n      \"name\": \"Personal Cat Hugging\",\n      \"description\": \"Introducing the Purrfect Hug - the ultimate cat cuddling experience! Our team of expert cuddlers will come to your home and provide your furry feline with the warmest and snuggliest hugs around.\",\n      \"tagLine\": \"Get some purr therapy with our cat hugging service!\",\n      \"defaultCapacity\": 1,\n      \"media\":       {\n        \"items\": [],\n        \"mainMedia\": {\"image\":         {\n          \"id\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\",\n          \"url\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\",\n          \"height\": 4000,\n          \"width\": 6000,\n          \"filename\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\"\n        }}\n      },\n      \"hidden\": false,\n      \"category\":       {\n        \"id\": \"0c54fbd3-9de6-4d2f-8775-e58eac5f5921\",\n        \"name\": \"Our Services\",\n        \"sortOrder\": 0\n      },\n      \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n      \"payment\":       {\n        \"rateType\": \"FIXED\",\n        \"fixed\": {\"price\":         {\n          \"value\": \"25\",\n          \"currency\": \"USD\"\n        }},\n        \"pricingPlansIds\": [],\n        \"options\":         {\n          \"online\": true,\n          \"inPerson\": false,\n          \"deposit\": false,\n          \"pricingPlan\": false\n        }\n      },\n      \"onlineBooking\":       {\n        \"enabled\": true,\n        \"requireManualApproval\": false,\n        \"allowMultipleRequests\": false\n      },\n      \"staffMembersIds\": [\"76570209-101f-409b-af97-b445bdb63125\"],\n      \"conferencing\": {\"enabled\": false},\n      \"locations\": [{\"type\": \"CUSTOMER\"}],\n      \"bookingPolicy\": {\"id\": \"\"},\n      \"schedule\":       {\n        \"id\": \"f986bc0e-ced0-48a7-8557-eb5c75c256cd\",\n        \"availabilityConstraints\":         {\n          \"sessionDurations\": [60],\n          \"timeBetweenSessions\": 0\n        }\n      },\n      \"supportedSlugs\":       [\n                {\n          \"name\": \"personal-cat-hugging\",\n          \"custom\": false,\n          \"createdDate\": \"2023-02-15T14:40:47.408Z\"\n        },\n                {\n          \"name\": \"initial-in-home-consultation\",\n          \"custom\": false,\n          \"createdDate\": \"2023-02-15T11:58:20.313Z\"\n        }\n      ],\n      \"mainSlug\":       {\n        \"name\": \"personal-cat-hugging\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-15T14:40:47.408Z\"\n      },\n      \"urls\":       {\n        \"servicePage\":         {\n          \"relativePath\": \"/service-page/personal-cat-hugging\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"bookingPage\":         {\n          \"relativePath\": \"/book-online/personal-cat-hugging/book\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"calendarPage\":         {\n          \"relativePath\": \"/booking-calendar/personal-cat-hugging\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        }\n      }\n    },\n        {\n      \"id\": \"353aa3b7-00ef-42bd-86ff-720d7ef60443\",\n      \"type\": \"CLASS\",\n      \"sortOrder\": 0,\n      \"name\": \"Dog Yoga\",\n      \"description\": \"Get ready to downward dog with your furry best friend! In this unique class, you and your pup will strike a pose and find your zen. With a mix of stretching, breathing exercises, and playtime, this class is sure to be a tail-waggin' good time. Whether you're a seasoned yogi or a pup-tastic beginner, this class is pawsitively perfect for all levels. Don't forget to bring your sense of humor, as there's sure to be a few doggy distractions and playful paw-terruptions along the way. Namaste!\",\n      \"tagLine\": \"Unleash your zen with downward dog and a wagging tail in our pup-poseful yoga class!\",\n      \"defaultCapacity\": 50,\n      \"media\":       {\n        \"items\": [],\n        \"mainMedia\": {\"image\":         {\n          \"id\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n          \"url\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n          \"height\": 4032,\n          \"width\": 3024,\n          \"filename\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\"\n        }}\n      },\n      \"hidden\": false,\n      \"category\":       {\n        \"id\": \"7b5b9862-490f-491c-8477-d39baed078a1\",\n        \"name\": \"Best for fun dogs\",\n        \"sortOrder\": 1\n      },\n      \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n      \"payment\":       {\n        \"rateType\": \"FIXED\",\n        \"fixed\": {\"price\":         {\n          \"value\": \"15\",\n          \"currency\": \"USD\"\n        }},\n        \"pricingPlansIds\": [],\n        \"options\":         {\n          \"online\": true,\n          \"inPerson\": false,\n          \"deposit\": false,\n          \"pricingPlan\": false\n        }\n      },\n      \"onlineBooking\":       {\n        \"enabled\": true,\n        \"requireManualApproval\": false,\n        \"allowMultipleRequests\": false\n      },\n      \"staffMembersIds\": [],\n      \"conferencing\": {\"enabled\": true},\n      \"locations\": [{\"type\": \"BUSINESS\"}],\n      \"bookingPolicy\": {\"id\": \"\"},\n      \"schedule\":       {\n        \"id\": \"8acb939f-34d1-4ac9-8564-b24c29e11ef7\",\n        \"firstSessionStart\": \"2023-02-13T15:30:00Z\"\n      },\n      \"supportedSlugs\": [      {\n        \"name\": \"dog-yoga\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n      }],\n      \"mainSlug\":       {\n        \"name\": \"dog-yoga\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n      },\n      \"urls\":       {\n        \"servicePage\":         {\n          \"relativePath\": \"/service-page/dog-yoga\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"bookingPage\":         {\n          \"relativePath\": \"/book-online/dog-yoga/book\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"calendarPage\":         {\n          \"relativePath\": \"/booking-calendar/dog-yoga\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        }\n      }\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"cursors\": {}\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryServicesRequest",
        "rpcResponseName": "QueryServicesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_bookings_services_v2_ServiceUpdatedDomainEvent",
      "displayName": "Service Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityUpdatedEvent",
      "displayName": "Service Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceDeletedDomainEvent",
      "displayName": "Service Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityDeletedEvent",
      "displayName": "Service Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceCreatedDomainEvent",
      "displayName": "Service Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityCreatedEvent",
      "displayName": "Service Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugEventDomainEvent",
      "displayName": "Set Custom Slug Event Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `custom_slug_was_set`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_SetCustomSlugEventActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "SetCustomSlugEvent ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugEventActionEvent",
      "displayName": "Set Custom Slug Event Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_SetCustomSlugEvent",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n",
          "readOnly": true
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Order of a category within a category list.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Conferencing",
      "displayName": "Conferencing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enabled",
        "type": "boolean",
        "doc": " Whether a conference link is generated for the service's sessions.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Form",
      "displayName": "Form Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the form associated with the service.\n The form information that is submitted when booking includes contact details, participants, and other form fields set up for the service.\n You can manage the service booking form fields using the [Bookings Forms API](https://dev.wix.com/api/rest/wix-bookings/services-v2/form/form-object).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_FormSettings",
      "displayName": "Form Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "hidden",
        "type": "boolean",
        "doc": " Whether the service booking form should be hidden from the site.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " 2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Postal or zip code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address_street",
          "doc": " Street address. Includes street name, number, and apartment number in separate fields.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " Full address of the location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_StreetAddress",
          "doc": " Street name and number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": " Street address. Includes street name, number, and apartment number in separate fields.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": "Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_LocationTypeEnum_LocationType",
          "doc": " The type of location:  \n - `CUSTOM`: The location is specific to this service, and is not derived from the business location.\n - `BUSINESS`: A business location, either the default business address, or locations defined for the business by the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations).\n - `CUSTOMER`: Will be determined by the customer. For appointments only.\n"
        },
                {
          "name": "calculatedAddress",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
          "doc": " The location address, based on the location `type`. If `type` is `CUSTOMER`, this address is empty.\n",
          "readOnly": true
        },
                {
          "name": "options",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Location_options",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Location_options",
      "displayName": "options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "business",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_BusinessLocationOptions",
          "doc": " The service is offered at the referenced business location, the location has to reference a location from the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations).\n"
        },
                {
          "name": "custom",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_CustomLocationOptions",
          "doc": " The service is offered at a custom location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_BusinessLocationOptions",
      "displayName": "Business Location Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Business location ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Business location name.\n",
          "readOnly": true
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": " Whether this is the default location. There can only be 1 default location per site. The default location can't be archived.\n",
          "readOnly": true
        },
                {
          "name": "address",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
          "doc": " Business location address. The address is derived from the business location and is read-only.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CustomLocationOptions",
      "displayName": "Custom Location Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "address",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
        "doc": " A custom address for the location.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RemovedLocationSessionsAction",
      "displayName": "Removed Location Sessions Action Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_RemovedLocationSessionsAction_Action",
          "doc": "The action to perform on sessions currently set to a removed location.\n"
        },
                {
          "name": "actionOptions",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_RemovedLocationSessionsAction_ActionOptions",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RemovedLocationSessionsAction_ActionOptions",
      "displayName": "Action Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "moveToLocationOptions",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MoveToNewLocationsOptions",
        "doc": " Options related to the action, such as a new location to move existing sessions to.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_MoveToNewLocationsOptions",
      "displayName": "Move To New Locations Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "newLocation",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Location",
        "doc": " The new location to move existing sessions currently set to a removed location, used when `action` is `MOVE_TO_LOCATION`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID. \n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image file name.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem"]
          },
          "doc": " Media items associated with the service.\n"
        },
                {
          "name": "mainMedia",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem",
          "doc": " Primary media associated with the service.\n"
        },
                {
          "name": "coverMedia",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem",
          "doc": " Cover media associated with the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_MediaItem",
      "displayName": "Media Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "item",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem_item",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_MediaItem_item",
      "displayName": "item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "image",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Image",
        "doc": " Details of the image associated with the service, such as URL and size.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_ParticipantNotification",
      "displayName": "Participant Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Whether to send the message about the changes to the customer. `false` by default\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Custom message to send to the participants about the changes to the booking.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_OnlineBooking",
      "displayName": "Online Booking Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether this service can be booked online.\n When set to `true`, customers can book the service online. Configuring the payment options is done via `service.payment` property.\n When set to `false`, customers cannot book the service online, and the service can only be paid for in person.\n"
        },
                {
          "name": "requireManualApproval",
          "type": "boolean",
          "doc": " Booking the service requires approval by the business owner.\n"
        },
                {
          "name": "allowMultipleRequests",
          "type": "boolean",
          "doc": " Multiple customers can request to book the same time slot. Relevant when `requireManualApproval` is `true`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": " Money.\n Default format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency code. Must be valid ISO 4217 currency code (e.g., USD).\n"
        },
                {
          "name": "formattedValue",
          "type": "string",
          "doc": " Monetary amount. Decimal string in local format (e.g., 1 000,30). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Payment",
      "displayName": "Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rateType",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_RateTypeEnum_RateType",
          "doc": " The rate the customer is expected to pay for the service.\n Can be:\n - `FIXED`: The service has a fixed price.\n - `CUSTOM`: The service has a custom price, expressed as a price description.\n - `VARIED`: This service is offered with a set of different prices based on different terms.\n - `NO_FEE`: This service is offered free of charge.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Payment_rate",
          "doc": ""
        },
                {
          "name": "options",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_PaymentOptions",
          "doc": " The payment options a customer can use to pay for the service.\n"
        },
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of pricing plans that can be used as payment for the service.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Payment_rate",
      "displayName": "rate Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixed",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_FixedPayment",
          "doc": " The details for the fixed price of the service.\n\n Required when: `rateType` is `FIXED`\n"
        },
                {
          "name": "custom",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_CustomPayment",
          "doc": " The details for the custom price of the service.\n\n Required when: `rateType` is `CUSTOM`\n"
        },
                {
          "name": "varied",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_VariedPayment",
          "doc": " The details for the varied pricing of the service.\n Read more about [varied price options](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online#offering-varied-price-options).\n \n Required when: `rateType` is `VARIED`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_FixedPayment",
      "displayName": "Fixed Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "price",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The fixed price required to book the service.\n\n Required when: `rateType` is `FIXED`\n"
        },
                {
          "name": "deposit",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The deposit price required to book the service. \n \n Required when: `rateType` is `FIXED` and `paymentOptions.deposit` is `true`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_VariedPayment",
      "displayName": "Varied Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "defaultPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The default price for the service without any variants. It will also be used as the default price for any new variant.\n"
        },
                {
          "name": "deposit",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The deposit price required to book the service. \n \n Required when: `rateType` is `VARIED` and `paymentOptions.deposit` is `true`\n"
        },
                {
          "name": "minPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The minimal price a customer may pay for this service, based on its variants.\n",
          "readOnly": true
        },
                {
          "name": "maxPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The maximum price a customer may pay for this service, based on its variants.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CustomPayment",
      "displayName": "Custom Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "description",
        "type": "string",
        "doc": " A custom description explaining to the customer how to pay for the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_PaymentOptions",
      "displayName": "Payment Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "online",
          "type": "boolean",
          "doc": " Customers can pay for the service online.\n When `true`:\n + `rateType` must be either `FIXED` or `VARIED`.\n + `fixed.price` or `varied.default_price` must be specified respectively. Read more about [getting paid online](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online).\n"
        },
                {
          "name": "inPerson",
          "type": "boolean",
          "doc": " Customers can pay for the service in person.\n"
        },
                {
          "name": "deposit",
          "type": "boolean",
          "doc": " This service requires a deposit to be made online in order to book it.\n When `true`:\n + `rateType` must be `VARIED` or `FIXED`. \n + A `deposit` must be specified.\n"
        },
                {
          "name": "pricingPlan",
          "type": "boolean",
          "doc": " Customers can pay for the service using a pricing plan.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ResourceGroup",
      "displayName": "Resource Group Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourceGroupId",
          "type": "string",
          "doc": " An optional resource group id, if provided it references a resource group in the resource groups API.\n TODO - referenced_entity annotation\n"
        },
                {
          "name": "resourceIds",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ResourceIds",
          "doc": " Resource ids, each referencing a resource in resources API. may be a subset of resources within a resource group.\n TODO - referenced_entity annotation\n"
        },
                {
          "name": "requiredResourcesNumber",
          "type": "integer",
          "doc": " How many resources of the group / resource ids are required in order to book the service.\n Defaults to 1.\n"
        },
                {
          "name": "selectableResource",
          "type": "boolean",
          "doc": " If set to `true`, the custom can select the specific resources while booking the service.\n If set to `false`, the resources required for to book the service would be auto selected at the time of the booking.\n Defaults to false.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ResourceIds",
      "displayName": "Resource Ids Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "values",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Values of the resource ids.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Schedule",
      "displayName": "Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Schedule ID, used to manage the service's sessions.\n",
          "readOnly": true
        },
                {
          "name": "availabilityConstraints",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_AvailabilityConstraints",
          "doc": " Limitations dictating the way session availability is calculated. For appointments only.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_AvailabilityConstraints",
      "displayName": "Availability Constraints Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionDurations",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " A list of duration options for sessions, in minutes. \n \n The availability calculation generates slots for sessions with these durations, unless there is a conflict with existing sessions or other availability constraints exist.\n Required for services of type `APPOINTMENT` to allow the customer to book a session of the service. Not relevant for other service types.\n \n \n Min: 1 minute, Max: 30 days, 23 hours, and 59 minutes\n"
        },
                {
          "name": "timeBetweenSessions",
          "type": "integer",
          "doc": " The number of minutes between the end of a session and the start of the next.\n  \n  \n Min: 0 minutes\n Max: 720 minutes\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
      "displayName": "Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": "*\n`BookingPolicy` is the main entity of `BookingPolicyService` and specifies a set of rules for booking a service\nby visitors and members.\n\nEach `BookingPolicy` consists of a number of sub-policies. When the Bookings App is provisioned to a meta site then a\ndefault `BookingPolicy` will be created with defaults for each of these sub-policies. This also applies when a request\nis received to create a new `BookingPolicy` and one or more of these sub-policies are not provided.\n\nSub-policies are defined in separate objects as specified below.\n\n- The `LimitEarlyBookingPolicy` object defines the policy for limiting early bookings.\n- The `LimitLateBookingPolicy` object defines the policy for limiting late bookings.\n- The `BookAfterStartPolicy` object defines the policy for booking after the start of the schedule.\n- The `CancellationPolicy` object defines the policy for canceling a booked entity.\n- The `ReschedulePolicy` object defines the policy for rescheduling booked entity.\n- The `WaitlistPolicy` object defines the policy for a waitlist.\n- The `ParticipantsPolicy` object defines the policy regarding the participants per booking.\n- The `ResourcesPolicy` object defines the policy regarding the resources per booking.\n\nBy default each sub-policy is disabled. A more detailed specification of the default settings of each sub-policy\ncan be found in the description of the corresponding object.\n\nPartial updates are supported on the main entity level, however in order to update a sub-policy the client needs to provide the whole sub-policy object.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " The ID to the policy for the booking.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the policy is updated. To prevent conflicting changes, the existing revision must be used when updating a policy.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the policy was created. \n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the policy was updated. \n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the policy.\n",
          "readOnly": true
        },
                {
          "name": "customPolicyDescription",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_PolicyDescription",
          "doc": " Custom description for the policy. This policy is displayed to the participant.\n",
          "readOnly": true
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": " Whether the policy is the default for the meta site.\n",
          "readOnly": true
        },
                {
          "name": "limitEarlyBookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_LimitEarlyBookingPolicy",
          "doc": " Policy for limiting early bookings.\n",
          "readOnly": true
        },
                {
          "name": "limitLateBookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_LimitLateBookingPolicy",
          "doc": " Policy for limiting late bookings.\n",
          "readOnly": true
        },
                {
          "name": "bookAfterStartPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookAfterStartPolicy",
          "doc": " Policy on booking an entity after the start of the schedule.\n",
          "readOnly": true
        },
                {
          "name": "cancellationPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_CancellationPolicy",
          "doc": " Policy for canceling a booked entity.\n",
          "readOnly": true
        },
                {
          "name": "reschedulePolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_ReschedulePolicy",
          "doc": " Policy for rescheduling a booked entity.\n",
          "readOnly": true
        },
                {
          "name": "waitlistPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_WaitlistPolicy",
          "doc": " Waitlist policy for the service.\n",
          "readOnly": true
        },
                {
          "name": "participantsPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_ParticipantsPolicy",
          "doc": " Policy regarding the participants per booking.\n",
          "readOnly": true
        },
                {
          "name": "resourcesPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_ResourcesPolicy",
          "doc": " Policy for allocating resources.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_PolicyDescription",
      "displayName": "Policy Description Object",
      "locations": [],
      "docs":       {
        "summary": " A description of the policy to display to participants.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the description should be displayed. If `true`, the description is displayed.\n  \n Default: `false`\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " The description to display.\n  \n Default: Empty  \n Max length: 1000 characters\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_LimitEarlyBookingPolicy",
      "displayName": "Limit Early Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for limiting early bookings.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether there is a limit on how early a customer \n can book. When `false`, there is no limit on the earliest\n booking time and customers can book in advance, as early as they like.\n  \n Default: `false`\n"
        },
                {
          "name": "earliestBookingInMinutes",
          "type": "integer",
          "doc": " Maximum number of minutes before the start of the session that a booking can be made. This value must be greater\n than `latest_booking_in_minutes` in the `LimitLateBookingPolicy` policy.\n  \n Default: 10080 minutes (7 days)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_LimitLateBookingPolicy",
      "displayName": "Limit Late Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for limiting late bookings. \n\n This policy and the `BookAfterStartPolicy` policy cannot be enabled at the same time. So if this policy\n is enabled, `BookAfterStartPolicy` must be disabled.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether there is a limit on how late a customer \n can book. When `false`, there is no limit on the latest\n booking time and customers can book up to the last minute.\n  \n Default: `false`\n"
        },
                {
          "name": "latestBookingInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the session that a booking can be made.\n For a schedule, this is relative to the start time of the next booked session, excluding past-booked sessions.\n This value must be less than `earliest_booking_in_minutes` in the `LimitEarlyBookingPolicy` policy.\n  \n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_BookAfterStartPolicy",
      "displayName": "Book After Start Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for whether a session can be booked after the start of the schedule. \n This policy and `LimitLateBookingPolicy` cannot be enabled at the same time. So if this policy\n is enabled, the `LimitLateBookingPolicy` policy must be disabled.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enabled",
        "type": "boolean",
        "doc": " Whether booking is allowed after the start of the schedule. When `true`, \n customers can book after the start of the schedule.\n  \n Default: `false`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_CancellationPolicy",
      "displayName": "Cancellation Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for canceling a booked session.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether canceling a booking is allowed. When `true`, customers \n can cancel the booking.\n  \n Default: `false`\n"
        },
                {
          "name": "limitLatestCancellation",
          "type": "boolean",
          "doc": " Whether there is a limit on the latest cancellation time. When `true`, \n a time limit is enforced.\n\n Default: `false`\n"
        },
                {
          "name": "latestCancellationInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the booked session that the booking can be canceled.\n\n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_ReschedulePolicy",
      "displayName": "Reschedule Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for rescheduling a booked session.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether rescheduling a booking is allowed. When `true`, customers \n can reschedule the booking.\n  \n Default: `false`\n"
        },
                {
          "name": "limitLatestReschedule",
          "type": "boolean",
          "doc": " Whether there is a limit on the latest reschedule time. When `true`, \n a time limit is enforced.\n\n Default: `false`\n"
        },
                {
          "name": "latestRescheduleInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the booked session that the booking can be rescheduled.\n  \n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_WaitlistPolicy",
      "displayName": "Waitlist Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for the waitlist. \n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the session has a waitlist. If `true`, there is a waitlist.\n  \n Default: `false`\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": " Number of spots available in the waitlist.\n  \n Default: 10 spots  \n Min: 1 spot\n"
        },
                {
          "name": "reservationTimeInMinutes",
          "type": "integer",
          "doc": " Amount of time a participant is given to book, once notified that a spot is available.\n  \n Default: 10 minutes  \n Min: 1 spot\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_ParticipantsPolicy",
      "displayName": "Participants Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for the maximum number of participants per booking.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "maxParticipantsPerBooking",
        "type": "integer",
        "doc": " Maximum number of participants allowed.\n  \n Default: 1 participant  \n Min: 1 participant\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_ResourcesPolicy",
      "displayName": "Resources Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy regarding the allocation of resources (e.g. staff members).\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " `true` if this policy is enabled, `false` otherwise.\n When `false` then the client must always select a resource when booking an appointment.\n"
        },
                {
          "name": "autoAssignAllowed",
          "type": "boolean",
          "doc": " `true`, if it is allowed to automatically assign a resource when booking an appointment,\n `false`, if the client must always select a resource.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Slug",
      "displayName": "Slug Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " The unique part of service's URL that identifies the service's information page. For example, `service-1` in `https:/example.com/services/service-1`. \n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the slug was generated or customized. If `true`, the slug was customized manually by the business owner. Otherwise, the slug was automatically generated from the service name.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the slug was created. This is a system field.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugEvent",
      "displayName": "Set Custom Slug Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "mainSlug",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug",
        "doc": " The main slug for the service after the update\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PageUrlV2",
      "displayName": "Page Url V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "relativePath",
          "type": "string",
          "doc": " The path to that page - e.g /product-page/a-product\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The URL of that page. e.g https://mysite.com/product-page/a-product\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_URLs",
      "displayName": "UR Ls Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "servicePage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the service page.\n",
          "readOnly": true
        },
                {
          "name": "bookingPage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the booking entry point. It can be either to the calendar or to the service page.\n",
          "readOnly": true
        },
                {
          "name": "calendarPage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the calendar. Can be empty if no calendar exists.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Bookings - Services V2._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Bookings - Services V2._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "namespacesMapEntry",
      "displayName": "namespaces Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  \nExtended field data as key:object pairs. Each key corresponds to the namespace of the app that created the extended fields. \nThe value of each key is structured according to the schema defined when the extended fields were created.\n\nYou can only access fields for which you have the appropriate permissions.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "struct",
        "doc": "`key` of type string, `value` of type struct"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_data_dataextensions_ExtendedFields",
      "displayName": "Extended Fields Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "namespaces",
        "type": "All APIs.Bookings - Services V2.namespacesMapEntry",
        "doc": "Set of key-value pairs.  \nExtended field data as key:object pairs. Each key corresponds to the namespace of the app that created the extended fields. \nThe value of each key is structured according to the schema defined when the extended fields were created.\n\nYou can only access fields for which you have the appropriate permissions.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled. \n\n\n Default: `false` (Auto Redirect is enabled.)\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value.\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focus keyword.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tag information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Service",
      "displayName": "Service Object",
      "locations": [],
      "docs":       {
        "summary": " The `Service` object represents the business offering that a business provides to its customers.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Service ID.\n",
          "readOnly": true
        },
                {
          "name": "type",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceTypeEnum_ServiceType",
          "doc": " Service type.\n"
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Order of a service within a category.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Service name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Service description, such as `High-class hair styling, cuts, straightening and color.`\n"
        },
                {
          "name": "tagLine",
          "type": "string",
          "doc": " Short service description, such as `Hair styling.`\n"
        },
                {
          "name": "defaultCapacity",
          "type": "integer",
          "doc": " Default maximum number of customers that can book the service. The service cannot be booked beyond this capacity.\n"
        },
                {
          "name": "media",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Media",
          "doc": " Media associated with the service.\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether the service is hidden from the site.\n"
        },
                {
          "name": "category",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Category",
          "doc": " The category the service is associated with.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Form",
          "doc": " The form used when booking the service.\n"
        },
                {
          "name": "payment",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Payment",
          "doc": " Payment options for booking the service.\n"
        },
                {
          "name": "onlineBooking",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_OnlineBooking",
          "doc": " Online booking settings.\n"
        },
                {
          "name": "conferencing",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Conferencing",
          "doc": " Conferencing options for this service.\n"
        },
                {
          "name": "locations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Location"]
          },
          "doc": " The locations this service is offered at.\n Only multiple locations of type `BUSINESS` are supported. multiple locations of type `CUSTOM` or `CUSTOMER` are not supported.\n For courses only: Currently, only 1 location is supported, for all location types.\n Use `setServiceLocations` method to change the locations this service is offered at.\n",
          "readOnly": true
        },
                {
          "name": "bookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
          "doc": " Policy determining under what conditions this service can be booked. For example, whether the service can only be booked up to 30 minutes before it begins.\n"
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Schedule",
          "doc": " The service's schedule, which can be used to manage the service's sessions.\n"
        },
                {
          "name": "supportedSlugs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug"]
          },
          "doc": " A slug is the last part of the URL address that serves as a unique identifier of the service.\n The list of supported slugs includes past service names for backwards compatibility, and a custom slug if one was set by the business owner.\n",
          "readOnly": true
        },
                {
          "name": "mainSlug",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug",
          "doc": " The main slug for the service. `mainSlug` is either taken from the current service name or is a custom slug set by the business owner.\n `mainSlug` is used to construct the service's URLs.\n",
          "readOnly": true
        },
                {
          "name": "urls",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_URLs",
          "doc": " URLs to various service-related pages, such as the calendar page and the booking page.\n",
          "readOnly": true
        },
                {
          "name": "seoData",
          "type": "All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema",
          "doc": " Custom SEO data for the service.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the service was created. \n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the service was updated. \n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the service is updated. To prevent conflicting changes, the existing revision must be used when updating a service.\n",
          "readOnly": true
        },
                {
          "name": "staffMemberIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the staff members providing the service. For appointments only.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_schedules_v1_SplitInterval",
      "displayName": "Split Interval Object",
      "locations": [],
      "docs":       {
        "summary": "The time between available slots' start times. For example, For 5 minute slots, 3:00, 3:05, 3:15 etc. For 1 hour slots, 3:00, 4:00, 5:00 etc.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sameAsDuration",
          "type": "boolean",
          "doc": "Whether the slot duration is used as the split interval value.\nIf `same_as_duration` is `true`, the `value_in_minutes` is the sum of the first duration in\n`schedule.availabilityConstraints.SlotDurations` field, and `schedule.availabilityConstraints.TimeBetweenSlots` field.\n"
        },
                {
          "name": "valueInMinutes",
          "type": "integer",
          "doc": "Number of minutes between available slots' start times when `same_as_duration` is `false`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceAvailabilityConstraints",
      "displayName": "Service Availability Constraints Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
          "doc": " The booking policy.\n",
          "readOnly": true
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Schedule",
          "doc": " The service schedule, including the schedule id and availability constraints.\n",
          "readOnly": true
        },
                {
          "name": "locations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Location"]
          },
          "doc": " The locations this service is offered at.\n Only multiple locations of type `BUSINESS` are supported. multiple locations of type `CUSTOM` or `CUSTOMER` are not supported.\n For courses only: Currently, only 1 location is supported, for all location types.\n Use `setServiceLocations` method to change the locations this service is offered at.\n",
          "readOnly": true
        },
                {
          "name": "resourceGroups",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_ResourceGroup"]
          },
          "doc": " Resource groups required to book the service\n",
          "readOnly": true
        },
                {
          "name": "slotsSplitInterval",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_schedules_v1_SplitInterval",
          "doc": " The time between available slots' start times.\n For example, For 5 minute slots, 3:00, 3:05, 3:15 etc. For 1 hour slots, 3:00, 4:00, 5:00 etc.\n Is applied to all schedules of the site.\n",
          "readOnly": true
        },
                {
          "name": "onlineBooking",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_OnlineBooking",
          "doc": " Online booking settings.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Cursors",
          "doc": " Use these cursor to paginate between results. [Read more](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_cursor-paging).\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": " Indicates if there are more results after the current page.\n If `true`, another page of results can be retrieved.\n If `false`, this is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format:\n  \n `\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n   }`  \n  \n Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`  \n  \n Read more about [supported fields and operators](https://dev.wix.com/api/rest/wix-bookings/services-v2/filtering-and-sorting).\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Sorting"]
          },
          "doc": " Sort object in the following format:  \n `[ {\"fieldName\":\"sortField1\",\"order\":\"ASC\"},  \n    {\"fieldName\":\"sortField2\",\"order\":\"DESC\"} ]`  \n  \n Read more about [sorting](https://dev.wix.com/api/rest/wix-bookings/services-v2/filtering-and-sorting#wix-bookings_services-v2_filtering-and-sorting_sorting).\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paging",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Paging",
        "doc": " Paging options to limit and skip the number of items.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_CursorQuery",
      "displayName": "Cursor Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_CursorQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_CursorQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Bookings - Services V2._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "customPropertiesMapEntry",
      "displayName": "custom Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Custom properties that can be associated with the category.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": " Categories are used to group multiple services together. A service must be associated with a category in order to be exposed in the Wix Bookings UI.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID. Read-only.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n"
        },
                {
          "name": "customProperties",
          "type": "All APIs.Bookings - Services V2.customPropertiesMapEntry",
          "doc": "Set of key-value pairs. Custom properties that can be associated with the category.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_Category_Status",
          "doc": " Category status Read-only.\n",
          "readOnly": true
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Sorting order of the category for Wix Bookings UI.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_CategoryNotification",
      "displayName": "Category Notification Object",
      "locations": [],
      "docs":       {
        "summary": " An event sent every time a category entity is changed.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_Category",
          "doc": ""
        },
                {
          "name": "event",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_CategoryNotification_Event",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Price",
      "displayName": "Price Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": "Required payment amount.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": "Currency in which the amount is quoted.\n"
        },
                {
          "name": "downPayAmount",
          "type": "string",
          "doc": " Amount of a down payment or deposit as part of the transaction.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "labeledPriceOptionsMapEntry",
      "displayName": "labeled Price Options Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Mapping between a named price option, for example, adult or child prices, and the price, currency, and down payment amount.\n When present in an update request, the `default_varied_price` is ignored to support backward compatibility.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Price",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Rate",
      "displayName": "Rate Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "labeledPriceOptions",
          "type": "All APIs.Bookings - Services V2.labeledPriceOptionsMapEntry",
          "doc": "Set of key-value pairs. Mapping between a named price option, for example, adult or child prices, and the price, currency, and down payment amount.\n When present in an update request, the `default_varied_price` is ignored to support backward compatibility.\n"
        },
                {
          "name": "priceText",
          "type": "string",
          "doc": " Textual price information used when **Price Per Session** is set to **Custom Price** in the app's service details page.\n When present in an update request, the `default_varied_price` is ignored to support backward compatibility.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_BusinessSchedule",
      "displayName": "Business Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "\nBusiness schedule. Regular and exceptional time periods when the business is open or the service is available.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "periods",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_siteproperties_api_v4_TimePeriod"]
          },
          "doc": "\nWeekly recurring time periods when the business is regularly open or the service is available. Limited to 100 time periods.\n"
        },
                {
          "name": "specialHourPeriod",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_siteproperties_api_v4_SpecialHourPeriod"]
          },
          "doc": " Exceptions to the business's regular hours. The business can be open or closed during the exception.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_TimePeriod",
      "displayName": "Time Period Object",
      "locations": [],
      "docs":       {
        "summary": "\nWeekly recurring time periods when the business is regularly open or the service is available.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "openDay",
          "type": "All APIs.Bookings - Services V2._com_wixpress_siteproperties_api_v4_DayOfWeek",
          "doc": " Day of the week the period starts on.\n"
        },
                {
          "name": "openTime",
          "type": "string",
          "doc": "\nTime the period starts in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day.\n"
        },
                {
          "name": "closeDay",
          "type": "All APIs.Bookings - Services V2._com_wixpress_siteproperties_api_v4_DayOfWeek",
          "doc": " Day of the week the period ends on.\n"
        },
                {
          "name": "closeTime",
          "type": "string",
          "doc": "\nTime the period ends in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day.  \n\n__Note:__ If `openDay` and `closeDay` specify the same day of the week `closeTime` must be later than `openTime`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_SpecialHourPeriod",
      "displayName": "Special Hour Period Object",
      "locations": [],
      "docs":       {
        "summary": " Exception to the business's regular hours. The business can be open or closed during the exception.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": "\nStart date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": "\nEnd date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n"
        },
                {
          "name": "isClosed",
          "type": "boolean",
          "doc": " \nWhether the business is closed (or the service is not available) during the exception. \n\nDefault: `true`.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Additional info about the exception. For example, \"We close earlier on New Year's Eve.\"\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Location ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Location description.\n"
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": "\nWhether this is the default location. There can only be one default location per site. The default location can't be archived.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wixpress_locations_LocationStatus",
          "doc": "\nLocation status. Defaults to `ACTIVE`. \n__Note:__ [Archiving a location](https://dev.wix.com/api/rest/business-info/locations/archive-location) \ndoesn't affect the location's status. `INACTIVE` is currently not supported.\n"
        },
                {
          "name": "locationType",
          "type": "All APIs.Bookings - Services V2._com_wixpress_locations_LocationType",
          "doc": " Location type. **Note:** Currently not supported.\n"
        },
                {
          "name": "fax",
          "type": "string",
          "doc": " Fax number.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Timezone in `America/New_York` format.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Email address.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": " Phone number.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Bookings - Services V2._com_wixpress_locations_Address",
          "doc": " Address.\n"
        },
                {
          "name": "businessSchedule",
          "type": "All APIs.Bookings - Services V2._com_wixpress_siteproperties_api_v4_BusinessSchedule",
          "doc": "\nBusiness schedule. Array of weekly recurring time periods when the location is open for business. Limited to 100 time periods.\n\n__Note:__ Not supported by Wix Bookings.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": "\nRevision number, which increments by 1 each time the location is updated. \nTo prevent conflicting changes, the existing revision must be used when updating a location.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": "\nWhether the location is archived. Archived locations can't be updated. \n__Note:__ [Archiving a location](https://dev.wix.com/api/rest/business-info/locations/archive-location) \ndoesn't affect its `status`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " 2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Postal or zip code.\n"
        },
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Services V2._com_wixpress_locations_StreetAddress",
          "doc": " Street address. Includes street name, number, and apartment number in separate fields.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " Full address of the location.\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Extra information that helps finding the location.\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Bookings - Services V2._com_wixpress_locations_AddressLocation",
          "doc": " Geographic coordinates of location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": " Street address. Includes street name, number, and apartment number in separate fields.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": "Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": " Address Geolocation\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Latitude of the location. Must be between -90 and 90.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Longitude of the location. Must be between -180 and 180.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": "Country code.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": "Subdivision. Usually state, region, prefecture or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Zip/postal code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_upstream_wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, and Floor.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " A string containing the full address of this location.\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Free text to help find the address.\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_upstream_wix_common_AddressLocation",
          "doc": " Coordinates of the physical address.\n"
        },
                {
          "name": "countryFullname",
          "type": "string",
          "doc": " Country full name.\n"
        },
                {
          "name": "subdivisions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_upstream_wix_common_Subdivision"]
          },
          "doc": " Multi-level subdivisions from top to bottom.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_upstream_wix_common_StreetAddress",
          "doc": " Street name, number and apartment number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number, as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Subdivision code. Usually state, region, prefecture or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Subdivision full name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": "  Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "locationType",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Location_LocationType",
          "doc": "Location type.\n One of:\n - `\"OWNER_BUSINESS\"` The business address as set in the site’s general settings.\n - `\"OWNER_CUSTOM\"` The address as set when creating the service.\n - `\"CUSTOM\"` The address set for the individual session.\n"
        },
                {
          "name": "address",
          "type": "string",
          "doc": "Free text address used when locationType is `OWNER_CUSTOM`.\n",
          "deprecated": true
        },
                {
          "name": "customAddress",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_upstream_wix_common_Address",
          "doc": "Custom address, used when locationType is `\"OWNER_CUSTOM\"`. Might be used when locationType is `\"CUSTOM\"` in case the owner sets a custom address for the session which is different from the default.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LinkedSchedule",
      "displayName": "Linked Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "transparency",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_LinkedSchedule_Transparency",
          "doc": "Sets this schedule's availability for the duration of the linked schedule's sessions.  Default is `\"BUSY\"`.\n<!--ONLY:REST-->\n If set to `\"BUSY\"`, this schedule cannot have any available slots during the linked schedule's sessions. \n If set to `\"FREE\"`, this schedule can have available slots during the linked schedule's sessions.  \n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\n One of:\n - `\"FREE\"` This schedule can have available slots during the linked schedule's sessions.\n - `\"BUSY\"` This schedule cannot have any available slots during the linked schedule's sessions.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "Owner ID, of the linked schedule.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityPolicy",
      "displayName": "Availability Policy Object",
      "locations": [],
      "docs":       {
        "summary": "Availability policy applied to all site schedules.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "splitInterval",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SplitInterval",
        "doc": "Specify how to split the schedule slots in intervals of minutes.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitInterval",
      "displayName": "Split Interval Object",
      "locations": [],
      "docs":       {
        "summary": "The time between available slots' start times. For example, For 5 minute slots, 3:00, 3:05, 3:15 etc. For 1 hour slots, 3:00, 4:00, 5:00 etc.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sameAsDuration",
          "type": "boolean",
          "doc": "Whether the slot duration is used as the split interval value.\nIf `same_as_duration` is `true`, the `value_in_minutes` is the sum of the first duration in\n`schedule.availabilityConstraints.SlotDurations` field, and `schedule.availabilityConstraints.TimeBetweenSlots` field.\n"
        },
                {
          "name": "valueInMinutes",
          "type": "integer",
          "doc": "Number of minutes between available slots' start times when `same_as_duration` is `false`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Availability",
      "displayName": "Availability Object",
      "locations": [],
      "docs":       {
        "summary": "<!-- Needs updating when recurrence has been tested \nSchedule's availability calculation is executed by the schedule's available intervals and this additional information.\nSchedule's available intervals are recurring intervals (defined in the schedule) minus sessions that has no more spots for bookings (including time between_slots), or schedule's sessions with open spots for bookings.-->\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "start",
          "type": "string",
          "doc": "Date and time the schedule starts to be available for booking.\n"
        },
                {
          "name": "end",
          "type": "string",
          "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.\n"
        },
                {
          "name": "linkedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.\n"
        },
                {
          "name": "constraints",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_AvailabilityConstraints",
          "doc": "Constraints for calculating the schedule's availability.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityConstraints",
      "displayName": "Availability Constraints Object",
      "locations": [],
      "docs":       {
        "summary": "Describes how to calculate the specific slots that are available for booking.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slotDurations",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": "A list of duration options for slots, in minutes. Minimum value for a duration is 1.\nThe availability calculation generates slots with these durations, where there is no conflict with existing sessions or other availability constraints.\n"
        },
                {
          "name": "timeBetweenSlots",
          "type": "integer",
          "doc": "The number of minutes between the `end` of one slot, and the `start` of the next. \nMinimum value is 0, maximum value is 120.\n"
        },
                {
          "name": "splitInterval",
          "type": "integer",
          "doc": "Specify how to split the slots in intervals of minutes.\nThis value indicates the time between available slots' start time. e.g., from 5 minute slots (3:00, 3:05, 3:15) and 1 hour slots (3:00, 4:00, 5:00).\nOptional. The default is the first duration in slot_durations field.\nDeprecated. Use the `split_slots_interval.value_in_minutes`.\n",
          "deprecated": true
        },
                {
          "name": "slotsSplitInterval",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SplitInterval",
          "doc": "An object defining the time between available slots' start times.  For example, a slot with slots_split_interval=5 can start every 5 minutes. The default is the slot duration.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExternalCalendarInfo",
      "displayName": "External Calendar Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "calendarType",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_externalcalendar_spi_v1_CalendarTypeEnum_CalendarType",
        "doc": " The external calendar type (e.g. Google Calendar, iCal, etc).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
      "displayName": "External Calendar Overrides Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": "Synced title of the external calendar event.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": "Synced description of the external calendar event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Frequency",
      "displayName": "Frequency Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "repetition",
        "type": "integer",
        "doc": "The frequency of the recurrence in weeks. i.e. when this value is 4, the interval occurs every 4 weeks. Optional. The default is 1. minimum: 1, maximum: 52.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "daysOfWeek",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Interval_Day",
          "doc": "The day the interval accrue. Optional. The default is the day of the recurring interval's start time.\n"
        },
                {
          "name": "hourOfDay",
          "type": "integer",
          "doc": "The hour of the day the interval accrue. must be consistent with the Interval start time. Options. The default is 0. minimum: 0, maximum: 23.\n"
        },
                {
          "name": "minuteOfHour",
          "type": "integer",
          "doc": "The minutes of hour the interval accrue. must be consistent with the Interval end time. Options. The default is 0. minimum: 0, maximum: 59.\n"
        },
                {
          "name": "duration",
          "type": "integer",
          "doc": "The duration of the interval in minutes. Required. Part of the session end time calculation. minimum: 1, maximum: 86400.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringInterval",
      "displayName": "Recurring Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "The recurring interval identifier.\n",
          "readOnly": true
        },
                {
          "name": "start",
          "type": "string",
          "doc": "The start time of the recurring interval. Required.\n"
        },
                {
          "name": "end",
          "type": "string",
          "doc": "The end time of the recurring interval. Optional. Empty value indicates that there is no end time.\n"
        },
                {
          "name": "interval",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Interval",
          "doc": "The interval rules. The day, hour and minutes the interval is recurring.\n"
        },
                {
          "name": "frequency",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Frequency",
          "doc": "The frequency of the interval. Optional. The default is frequency with the default repetition.\n"
        },
                {
          "name": "affectedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "Specifies the list of linked schedules and the way this link affects the corresponding schedules' availability. Can be calculated from the schedule or overridden on the recurring interval.\n"
        },
                {
          "name": "intervalType",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_RecurringInterval_RecurringIntervalType",
          "doc": "The type of recurring interval.\n<!--ONLY:VELO\nOne of:\n - `\"UNDEFINED\"` The default value. Sessions for this interval will be of type EVENT.\n - `\"EVENT\"` A recurring interval of events.\n - `\"WORKING_HOURS\"` A recurring interval for availability.\n<!--END:ONLY:VELO-->\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Participant",
      "displayName": "Participant Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Participant ID. Currently represents the booking.id.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": "Contact ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": "Participant's name.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": "Participant's phone number. \n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": "Participant's email address. \n"
        },
                {
          "name": "partySize",
          "type": "integer",
          "doc": "Group or party size. The number of people attending. Defaults to 0. Maximum is 250.\n"
        },
                {
          "name": "approvalStatus",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Participant_ApprovalStatus",
          "doc": " Approval status for the participant. \n<!-- Commented out untill updateParticipant is exposed Generally the same status as the booking, unless updated using the `updateParticipant()` API. Defaults to `\"UNDEFINED\"`.-->\n<!--ONLY:VELO\n One of:\n - `\"PENDING\"` Pending business approval.\n - `\"APPROVED\"` Approved by the business.\n - `\"DECLINED\"` Declined by the business. \n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "inherited",
          "type": "boolean",
          "doc": "Whether the participant was inherited from the schedule, as opposed to being booked directly to the session.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ConferenceProvider",
      "displayName": "Conference Provider Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "providerId",
        "type": "string",
        "doc": "Conferencing provider ID\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarConference",
      "displayName": "Calendar Conference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Wix Calendar conference ID.\n"
        },
                {
          "name": "externalId",
          "type": "string",
          "doc": "Conference meeting ID in the provider's conferencing system.\n"
        },
                {
          "name": "providerId",
          "type": "string",
          "doc": "Conference provider ID.\n"
        },
                {
          "name": "hostUrl",
          "type": "string",
          "doc": "URL used by the host to start the conference.\n"
        },
                {
          "name": "guestUrl",
          "type": "string",
          "doc": "URL used by a guest to join the conference.\n"
        },
                {
          "name": "password",
          "type": "string",
          "doc": "Password to join the conference.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": "Conference description.\n"
        },
                {
          "name": "conferenceType",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_CalendarConference_ConferenceType",
          "doc": "Conference type.\n<!--ONLY:VELO\n One of:\n - `\"ONLINE_MEETING_PROVIDER\"` API-generated online meeting.\n - `\"CUSTOM\"` User-defined meeting.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "accountOwnerId",
          "type": "string",
          "doc": "ID of the account owner in the video conferencing service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule_Version",
      "displayName": "Version Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleVersion",
          "type": "integer",
          "doc": "Schedule version number, updated each time the schedule is updated.\n"
        },
                {
          "name": "participantsVersion",
          "type": "integer",
          "doc": "Participants version number, updated each time the schedule participants are updated.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule",
      "displayName": "Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "ID of the schedule's owner entity. This may be a resource ID or a service ID.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Schedule's time zone in [Area/Location](https://en.wikipedia.org/wiki/Tz_database) format. Read-only.\n Derived from the Wix Business time zone.\n",
          "readOnly": true
        },
                {
          "name": "intervals",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_RecurringInterval"]
          },
          "doc": " Deprecated. Please use the [Sessions API](https://dev.wix.com/api/rest/wix-bookings/schedules-and-sessions/session) instead.\n",
          "deprecated": true
        },
                {
          "name": "title",
          "type": "string",
          "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Location",
          "doc": "Default location for the schedule's sessions.\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": "Maximum number of participants that can be added to the schedule's sessions.\nMust be at most `1` for schedule whose availability is affected by another schedule. E.g, appointment schedules of the Wix Bookings app.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Rate",
          "doc": " Deprecated. Please use the [Booking Services V2](https://dev.wix.com/api/rest/wix-bookings/services-v2) payment instead.\n",
          "deprecated": true
        },
                {
          "name": "availability",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Availability",
          "doc": " Deprecated and will be removed soon.\n",
          "deprecated": true
        },
                {
          "name": "totalNumberOfParticipants",
          "type": "integer",
          "doc": "Number of participants registered to sessions in this schedule, calculated as the sum of the party sizes.\n",
          "readOnly": true
        },
                {
          "name": "participants",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Participant"]
          },
          "doc": " **Partial list** of participants which are registered to sessions in this schedule.  \n Participants who are registered in the schedule are automatically registered to any session that is created for the schedule.    \n To retrieve the full list of schedule participants please use the [Query Extended Bookings API](https://dev.wix.com/api/rest/wix-bookings/bookings-reader-v2/query-extended-bookings).\n",
          "readOnly": true
        },
                {
          "name": "externalCalendarOverrides",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
          "doc": "Deprecated and will be removed soon.\n",
          "deprecated": true
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule_ScheduleStatus",
          "doc": "Schedule status.\n",
          "readOnly": true
        },
                {
          "name": "created",
          "type": "string",
          "doc": "Schedule creation date.\n",
          "readOnly": true
        },
                {
          "name": "updated",
          "type": "string",
          "doc": "Schedule last update date.\n",
          "readOnly": true
        },
                {
          "name": "version",
          "type": "integer",
          "doc": "Schedule version number, updated each time the schedule is updated.\n",
          "readOnly": true
        },
                {
          "name": "inheritedFields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Fields which were inherited from the Business Info page under Settings in the Dashboard.\n",
          "readOnly": true
        },
                {
          "name": "conferenceProvider",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ConferenceProvider",
          "doc": " Deprecated and will be removed soon.\n",
          "deprecated": true
        },
                {
          "name": "calendarConference",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_CalendarConference",
          "doc": " A conference created for the schedule. This is used when a participant is added to a schedule.    \n **Partially deprecated.** Only `hostUrl` and `guestUrl` are to be supported. \n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_resources_core_api_v1_resource_Resource",
      "displayName": "Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Resource ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Resource name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Resource email address.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": " Resource phone number.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Resource description.\n"
        },
                {
          "name": "tag",
          "type": "string",
          "doc": " Deprecated. Please use tags.\n",
          "deprecated": true
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Resource tags. Tags are used to identify, group, and filter the different types of resources. For example, 'staff' or 'room'.\n"
        },
                {
          "name": "images",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_common_Image"]
          },
          "doc": " Resource images.\n"
        },
                {
          "name": "schedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule"]
          },
          "doc": " Deprecated. Please use scheduleIds. List of the schedules owned by this resource. Min size 1.\n",
          "deprecated": true
        },
                {
          "name": "scheduleIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of IDs of schedules owned by this resource.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_resources_core_api_v1_resource_Resource_ResourceStatus",
          "doc": " Resource status.\n<!--ONLY:VELO\n One of:\n - `\"CREATED\"` Default status.\n - `\"DELETED\"` The resource was deleted.\n - `\"UPDATED\"` The resource was updated.\n<!--END:ONLY:VELO-->\n",
          "readOnly": true
        },
                {
          "name": "wixUserId",
          "type": "string",
          "doc": " Wix user ID, if the resource is associated with the Wix user.\n A staff member resource can be associated with a Wix user via assignment of a permissions role in the business manager.\n<!--ONLY:VELO\nClick the **Set Permissions** button for the staff member on the Staff page on your site's dashboard.\n<!--END:ONLY:VELO-->\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_resources_core_api_v1_resource_BusinessLocation",
      "displayName": "Business Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "locationId",
        "type": "string",
        "doc": " The ID of the business location. Has to be non-empty\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_resources_core_api_v1_resource_ResourceNotification",
      "displayName": "Resource Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_resources_core_api_v1_resource_Resource",
          "doc": " Updated resource entity.\n 'resource.schedules' is deprecated and will not be returned. Please use 'resource.scheduleIds' instead.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_resources_core_api_v1_resource_ResourceNotification_Event",
          "doc": " Event type.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_EntryPass",
      "displayName": "Entry Pass Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_Discount",
      "displayName": "Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "discount",
        "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_Discount_discount",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_Discount_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "percentOffRate",
          "type": "string",
          "doc": " Fixed-rate percent off discount\n"
        },
                {
          "name": "moneyOffAmount",
          "type": "string",
          "doc": " Absolute amount discount\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_Behavior",
      "displayName": "Behavior Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "behavior",
        "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_behavior",
        "doc": " Behavior of this benefit when applied to resources.\n Entry pass is assumed to be the default behavior if not specified otherwise.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_behavior",
      "displayName": "behavior Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "defaultBehavior",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_EntryPass",
          "doc": " Entry pass for resources, e.g. a ticket for Bookings service or a ticket for Events.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_Behavior_Discount",
          "doc": " Discount applied to paid resources\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "customFieldsMapEntry",
      "displayName": "custom Fields Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. additional details related to benefit; limited to 20 entries, 20 symbols for key and 20 symbols for value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit",
      "displayName": "Benefit Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Benefit unique ID\n",
          "readOnly": true
        },
                {
          "name": "benefitType",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_BenefitType",
          "doc": " Benefit Type\n"
        },
                {
          "name": "resourceIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Resource IDs that serves by this benefit\n"
        },
                {
          "name": "creditAmount",
          "type": "number",
          "doc": " Amount of credits that provided by this benefit\n"
        },
                {
          "name": "customFields",
          "type": "All APIs.Bookings - Services V2.customFieldsMapEntry",
          "doc": "Set of key-value pairs. additional details related to benefit; limited to 20 entries, 20 symbols for key and 20 symbols for value\n"
        },
                {
          "name": "editable",
          "type": "boolean",
          "doc": " return value only in case it required in the ListRequest, true means that benefit's type could be updated\n"
        },
                {
          "name": "behavior",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit_Behavior",
          "doc": " Benefit behavior\n"
        },
                {
          "name": "appDefId",
          "type": "string",
          "doc": " Id of the app associated with this benefit\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_BenefitNotification",
      "displayName": "Benefit Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "planId",
          "type": "string",
          "doc": " Plan unique ID\n"
        },
                {
          "name": "appDefId",
          "type": "string",
          "doc": " App def ID\n"
        },
                {
          "name": "benefit",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit",
          "doc": " Current benefit details\n"
        },
                {
          "name": "prevBenefit",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_Benefit",
          "doc": " Previous benefit\n"
        },
                {
          "name": "event",
          "type": "All APIs.Bookings - Services V2._com_wix_pricingplans_benefits_api_v2_BenefitNotification_Event",
          "doc": " Notification event\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarDateTime",
      "displayName": "Calendar Date Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "UTC date-time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format. If a time zone offset is specified, the time is converted to UTC. For example, if you specify  `new Date('2021-01-06T16:00:00.000-07:00')`, the stored value will be `\"2021-01-06T23:00:00.000Z\"`.\nRequired if `localDateTime` is not specified.\nIf `localDateTime` is specified, `timestamp` is calculated as `localDateTime`, using the business's time zone.\n"
        },
                {
          "name": "localDateTime",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_LocalDateTime",
          "doc": "An object containing the local date and time for the business's time zone.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": "The time zone. Optional. Derived from the schedule's time zone.\nIn case this field is associated with recurring session, this field is empty.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LocalDateTime",
      "displayName": "Local Date Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "year",
          "type": "integer",
          "doc": " Year. 4-digit format.\n"
        },
                {
          "name": "monthOfYear",
          "type": "integer",
          "doc": " Month number, from 1-12.\n"
        },
                {
          "name": "dayOfMonth",
          "type": "integer",
          "doc": " Day of the month, from 1-31.\n"
        },
                {
          "name": "hourOfDay",
          "type": "integer",
          "doc": "Hour of the day in 24-hour format, from 0-23.\n"
        },
                {
          "name": "minutesOfHour",
          "type": "integer",
          "doc": "Minute, from 0-59.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session_Version",
      "displayName": "Version Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "number",
        "type": "string",
        "doc": " Incremental version number, which is updated on each change to the session or on changes affecting the session. \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session",
      "displayName": "Session Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Session ID.\n",
          "readOnly": true
        },
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "ID of the schedule that the session belongs to. \n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "ID of the resource or service that the session's schedule belongs to.\n",
          "readOnly": true
        },
                {
          "name": "originalStart",
          "type": "string",
          "doc": "Original start date and time of the session in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format.\n"
        },
                {
          "name": "start",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_CalendarDateTime",
          "doc": "An object specifying the start date and time of the session. If the session is a recurring session, `start` must contain a `localDateTime`.\n"
        },
                {
          "name": "end",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_CalendarDateTime",
          "doc": "An object specifying the end date and time of the session. The `end` time must be after the `start` time and be same type as `start`.\nIf the session is a recurring session, `end` must contain a `localDateTime`.\n"
        },
                {
          "name": "affectedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "An object specifying a list of schedules and the way each schedule's availability is affected by the session. For example, the schedule of an instructor is affected by sessions of the class that they instruct.\nThe array is inherited from the schedule and can be overridden even if the session is a recurring session.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": "Session title.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Location",
          "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": "Maximum number of participants that can be added to the session. Defaults to the schedule capacity.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_common_api_v1_Rate",
          "doc": " Deprecated. Please use the [Booking Services V2](https://dev.wix.com/api/rest/wix-bookings/services-v2) payment instead.\n",
          "deprecated": true
        },
                {
          "name": "timeReservedAfter",
          "type": "integer",
          "doc": "Time reserved after the session end time, derived from the schedule availability constraints and the time between slots. Read-only.\nIf the session is a recurring session, this field must be empty.\n"
        },
                {
          "name": "notes",
          "type": "string",
          "doc": "Additional information about the session.\nNotes are not supported for recurring sessions.\n"
        },
                {
          "name": "totalNumberOfParticipants",
          "type": "integer",
          "doc": "The number of participants booked for the session. Read-only.\nCalculated as the sum of the party sizes.\n",
          "readOnly": true
        },
                {
          "name": "participants",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Participant"]
          },
          "doc": " **Partial list** list of participants booked for the session.  \n The list includes participants who have registered for this specific session, and participants who have registered for a schedule that includes this session.  \n If the session is a recurring session, this field must be empty.  \n To retrieve the full list of session participants please use the [Query Extended Bookings API](https://dev.wix.com/api/rest/wix-bookings/bookings-reader-v2/query-extended-bookings).\n"
        },
                {
          "name": "inheritedFields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of properties for which values were inherited from the schedule.\nThis does not include participants that were inherited from the schedule.\n",
          "readOnly": true
        },
                {
          "name": "externalCalendarOverrides",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
          "doc": "Deprecated and will be removed soon.\n",
          "deprecated": true
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session_Status",
          "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` The session was deleted.\n<!--END:ONLY:VELO-->\n",
          "readOnly": true
        },
                {
          "name": "recurringIntervalId",
          "type": "string",
          "doc": "Recurring interval ID. Defined when a session will be a recurring session. read-only. Optional.\nFor exmaple, when creating a class service  with recurring sessions, you add a recurrence rule to create recurring sessions.\nThis field is omitted for single sessions or instances of recurring sessions.\nSpecified when the session was originally generated from a schedule recurring interval.\nDeprecated. Use `recurringSessionId`.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "recurringSessionId",
          "type": "string",
          "doc": "The ID of the recurring session if this session is an instance of a recurrence. Use this ID to update the recurrence and all of the instances.\n",
          "readOnly": true
        },
                {
          "name": "type",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SessionType",
          "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course, or blocked time. Events are visible in the Dashboard in the Bookings app's [Booking Calendar](https://support.wix.com/en/article/wix-bookings-about-the-wix-bookings-calendar) page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "calendarConference",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_CalendarConference",
          "doc": " A conference created for the session according to the details set in the schedule's conference provider information.  \n If the session is a recurring session, this field is inherited from the schedule.  \n **Partially deprecated.** Only `hostUrl` and `guestUrl` are to be supported. \n",
          "deprecated": true
        },
                {
          "name": "recurrence",
          "type": "string",
          "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [iCalendar RFC 5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the `instanceOfRecurrence` property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, a session that repeats every second week on a Monday until January 7, 2022 at 8 AM:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->\n"
        },
                {
          "name": "instanceOfRecurrence",
          "type": "string",
          "doc": "A string representing a recurrence rule (RRULE) if the session is an instance of a recurrence pattern.\nEmpty when the session is not an instance of a recurrence rule, or if the session defines a recurrence pattern, and `recurrence` is not empty.\n",
          "readOnly": true
        },
                {
          "name": "version",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session_Version",
          "doc": " The session version.   \n Composed by the schedule, session and participants versions.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ParticipantNotification",
      "displayName": "Participant Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": "\nWhether to send the message about the changes to the customer.\n\nDefault: `false`\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": "\nCustom message to send to the participants about the changes to the booking.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationData_StaffData",
      "displayName": "Staff Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "syncRequestEmail",
          "type": "string",
          "doc": ""
        },
                {
          "name": "refreshToken",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationData",
      "displayName": "Migration Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "businessId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "staffs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_MigrationData_StaffData"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleNotification",
      "displayName": "Schedule Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleNotification_event",
          "doc": ""
        },
                {
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Whether to notify participants about changed sessions. deprecated, use participant_notification\n",
          "deprecated": true
        },
                {
          "name": "siteProperties",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
          "doc": "site properties. Optional. Given in create schedule notification.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleNotification_event",
      "displayName": "event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleCreated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleCreated",
          "doc": ""
        },
                {
          "name": "scheduleUpdated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleUpdated",
          "doc": ""
        },
                {
          "name": "scheduleCancelled",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleCancelled",
          "doc": ""
        },
                {
          "name": "sessionCreated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SessionCreated",
          "doc": ""
        },
                {
          "name": "sessionUpdated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SessionUpdated",
          "doc": ""
        },
                {
          "name": "sessionCancelled",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SessionCancelled",
          "doc": ""
        },
                {
          "name": "availabilityPolicyUpdated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_AvailabilityPolicyUpdated",
          "doc": ""
        },
                {
          "name": "intervalSplit",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_IntervalSplit",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "recurringSessionSplit",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_RecurringSessionSplit",
          "doc": ""
        },
                {
          "name": "scheduleUnassignedFromUser",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleUnassignedFromUser",
          "doc": " Inspect `schedule.scheduleOwnerUserId` on `scheduleUpdated` instead.\n",
          "deprecated": true
        },
                {
          "name": "multipleSessionsCreated",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_MultipleSessionsCreated",
          "doc": "supported only for schedule migration apis.\n"
        },
                {
          "name": "migrationEvent",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_MigrationEvent",
          "doc": "supported only for schedule migration apis.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleCreated",
      "displayName": "Schedule Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleUpdated",
      "displayName": "Schedule Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldSchedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "The old schedule before the update.\n"
        },
                {
          "name": "newSchedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "The new schedule after the update.\n"
        },
                {
          "name": "recurringSessions",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_RecurringSessionsUpdated",
          "doc": "Recurring sessions updated event. If this field is given, the reason for the schedule updated event was\nupdating at least one of the given schedule's recurring sessions.\nThis event is triggered by create/update/delete recurring session apis.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether this notification was created as a result of an anonymization request, such as GDPR.\n An anonymized participant will have the following details:\n name = \"deleted\"\n phone = \"deleted\"\n email = \"deleted@deleted.com\"\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleCancelled",
      "displayName": "Schedule Cancelled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "oldSchedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionCreated",
      "displayName": "Session Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "session",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionUpdated",
      "displayName": "Session Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldSession",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "newSession",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether this notification was created as a result of an anonymization request, such as GDPR.\n An anonymized participant will have the following details:\n name = \"deleted\"\n phone = \"deleted\"\n email = \"deleted@deleted.com\"\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionCancelled",
      "displayName": "Session Cancelled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "session",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityPolicyUpdated",
      "displayName": "Availability Policy Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "availabilityPolicy",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_AvailabilityPolicy",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_IntervalSplit",
      "displayName": "Interval Split Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "intervals",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_RecurringInterval"]
          },
          "doc": ""
        },
                {
          "name": "newScheduleVersion",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "oldScheduleVersion",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringSessionSplit",
      "displayName": "Recurring Session Split Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "recurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": ""
        },
                {
          "name": "newScheduleVersion",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "oldScheduleVersion",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MultipleSessionsCreated",
      "displayName": "Multiple Sessions Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedulesWithSessions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_ScheduleWithSessions"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationEvent",
      "displayName": "Migration Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "migrationData",
        "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_MigrationData",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleWithSessions",
      "displayName": "Schedule With Sessions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        },
                {
          "name": "siteProperties",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
          "doc": ""
        },
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
      "displayName": "Site Properties On Schedule Creation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "timeZone",
        "type": "string",
        "doc": "The global time zone value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringSessionsUpdated",
      "displayName": "Recurring Sessions Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldRecurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": "Old schedule's recurring session list.\n"
        },
                {
          "name": "newRecurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": "New schedule's recurring session list.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleUnassignedFromUser",
      "displayName": "Schedule Unassigned From User Object",
      "locations": [],
      "docs":       {
        "summary": " Schedule unassigned from user.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": " The Wix user id.\n"
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": " The schedule that was unassigned from the user.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dispatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_CreateServiceRequest",
      "displayName": "Create Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " Service to be created.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CreateServiceResponse",
      "displayName": "Create Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The created service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkCreateServicesRequest",
      "displayName": "Bulk Create Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Service"]
          },
          "doc": " Services to create\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " `true` if the created entities must be included in the response, otherwise no entities are included in the response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkCreateServicesResponse",
      "displayName": "Bulk Create Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_BulkServiceResult"]
          },
          "doc": " The result of each service creation.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_BulkActionMetadata",
          "doc": " Create statistics.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceRequest",
      "displayName": "Get Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "serviceId",
        "type": "string",
        "doc": " ID of the service to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceResponse",
      "displayName": "Get Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The retrieved service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceAvailabilityConstraintsRequest",
      "displayName": "Get Service Availability Constraints Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "serviceId",
        "type": "string",
        "doc": " ID of the service to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceAvailabilityConstraintsResponse",
      "displayName": "Get Service Availability Constraints Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "constraints",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceAvailabilityConstraints",
        "doc": " The retrieved availability constraints of the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_UpdateServiceRequest",
      "displayName": "Update Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "service",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": " Service to update. [Partial updates](https://dev.wix.com/api/rest/wix-bookings/bookings/patch-endpoints-and-field-masks-in-update-requests) are supported.\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Bookings - Services V2._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_UpdateServiceResponse",
      "displayName": "Update Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The updated service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkServiceResult",
      "displayName": "Bulk Service Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_ItemMetadata",
          "doc": ""
        },
                {
          "name": "item",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkUpdateServicesRequest_MaskedService",
      "displayName": "Masked Service Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "service",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": " Service to update. [Partial updates](https://dev.wix.com/api/rest/wix-bookings/bookings/patch-endpoints-and-field-masks-in-update-requests) are supported.\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Bookings - Services V2._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkUpdateServicesRequest",
      "displayName": "Bulk Update Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_BulkUpdateServicesRequest_MaskedService"]
          },
          "doc": " Services to update.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " `true` if the updated entities must be included in the response, otherwise no entities are included in the response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkUpdateServicesResponse",
      "displayName": "Bulk Update Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_BulkServiceResult"]
          },
          "doc": " The result of each service update.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_BulkActionMetadata",
          "doc": " Update statistics.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DeleteServiceRequest",
      "displayName": "Delete Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to delete.\n"
        },
                {
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": " Whether to preserve future sessions with participants. Optional, default is false.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DeleteServiceResponse",
      "displayName": "Delete Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkDeleteServicesRequest",
      "displayName": "Bulk Delete Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ids",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": " Whether to preserve future sessions with participants. Optional, default is false.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BulkDeleteServicesResponse",
      "displayName": "Bulk Delete Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_BulkServiceResult"]
          },
          "doc": " The result of each service removal.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_BulkActionMetadata",
          "doc": " Update statistics.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryServicesRequest",
      "displayName": "Query Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2",
        "doc": " WQL expression.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryServicesResponse",
      "displayName": "Query Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Service"]
          },
          "doc": " The retrieved services.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging metadata, including offset and count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SearchServicesRequest",
      "displayName": "Search Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "string",
          "doc": " The search term used to match services.\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Paging",
          "doc": " Pagination, including offset, and limit.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SearchServicesResponse",
      "displayName": "Search Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Service"]
          },
          "doc": " The retrieved services.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging metadata, including offset and count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryPoliciesRequest",
      "displayName": "Query Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_CursorQuery",
        "doc": " WQL expression.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_BookingPolicyWithServices",
      "displayName": "Booking Policy With Services Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
          "doc": " The booking policy.\n"
        },
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Service"]
          },
          "doc": " The services associated with the booking policy.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryPoliciesResponse",
      "displayName": "Query Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingPolicies",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_BookingPolicyWithServices"]
          },
          "doc": " The retrieved policies.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_CursorPagingMetadata",
          "doc": " Paging metadata, including offset and count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CountServicesRequest",
      "displayName": "Count Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " The filters for performing the count.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CountServicesResponse",
      "displayName": "Count Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " The number of services matching the given filter.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_EnablePricingPlansForServiceRequest",
      "displayName": "Enable Pricing Plans For Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to add the pricing plans to.\n"
        },
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the pricing plans to connect to the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_EnablePricingPlansForServiceResponse",
      "displayName": "Enable Pricing Plans For Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the pricing plans connect to the service.\n"
        },
                {
          "name": "service",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": " The service after the pricing plans update\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DisablePricingPlansForServiceRequest",
      "displayName": "Disable Pricing Plans For Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to disconnect the pricing plans from.\n"
        },
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " ID of the pricing plans to disconnect from the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DisablePricingPlansForServiceResponse",
      "displayName": "Disable Pricing Plans For Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The service after the pricing plans update\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugRequest",
      "displayName": "Set Custom Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to assign the custom slug to.\n"
        },
                {
          "name": "slugName",
          "type": "string",
          "doc": " The custom name to set as the active slug for the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugResponse",
      "displayName": "Set Custom Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "slug",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug",
        "doc": " The new slug set as the active slug for the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ValidateSlugRequest",
      "displayName": "Validate Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to validate the slug name for.\n"
        },
                {
          "name": "slugName",
          "type": "string",
          "doc": " The custom name to validate as a slug for the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ValidateSlugResponse",
      "displayName": "Validate Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "valid",
          "type": "boolean",
          "doc": " Whether the requested slug name is valid.\n"
        },
                {
          "name": "slugName",
          "type": "string",
          "doc": " The requested custom slug name to validate. If valid, the slug name can be set as a slug for the service and is populated with the requested slug. Otherwise, `slugName` is empty.\n"
        },
                {
          "name": "errors",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_InvalidSlugErrorEnum_InvalidSlugError"]
          },
          "doc": " If the slug is invalid, this field is populated with the reasons why the slug is invalid. Validation errors may include `SLUG_IS_TOO_LONG`, `SLUG_CONTAIN_ILLEGAL_CHARACTERS`, and `SLUG_ALREADY_EXISTS`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetServiceLocationsRequest",
      "displayName": "Set Service Locations Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service.\n"
        },
                {
          "name": "locations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Location"]
          },
          "doc": " The locations you specify replace the existing service locations.\n"
        },
                {
          "name": "removedLocationSessionsAction",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_RemovedLocationSessionsAction",
          "doc": " The action to perform on sessions currently set to a removed location.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetServiceLocationsResponse",
      "displayName": "Set Service Locations Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The updated service with the newly set locations.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CloneServiceRequest",
      "displayName": "Clone Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sourceServiceId",
          "type": "string",
          "doc": " ID of a source service\n"
        },
                {
          "name": "copyRecurringSessions",
          "type": "boolean",
          "doc": " copy recurring sessions of an active service's schedule\n"
        },
                {
          "name": "copyPricingPlans",
          "type": "boolean",
          "doc": " copy benefits with pricing plans that are connected to the source service. If the source service is connected to more than 120 benefits with pricing plans then they will not be copied. In that case the field `error_types` in the response will include `PRICING_PLANS`.\n"
        },
                {
          "name": "hideService",
          "type": "boolean",
          "doc": " whether to hide service from the list or not. Empty means that we will copy this value from the source service without overriding it\n"
        },
                {
          "name": "cloneServiceName",
          "type": "string",
          "doc": " the name of the clone service. The title of the clone service's schedule will also be set to this name. When this parameter is omitted then the clone service will have the same name as the source service and the clone service's schedule will get the same title as the source service's active schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CloneServiceResponse",
      "displayName": "Clone Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "service",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": " Cloned service\n"
        },
                {
          "name": "errors",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_CloneErrorsEnum_CloneErrors"]
          },
          "doc": " List of entity types that we failed to clone\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_InvalidSlugErrorEnum_InvalidSlugError",
      "displayName": "Invalid Slug Error Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SLUG_ERROR <\/code><\/li><li><code> SLUG_CONTAINS_ILLEGAL_CHARACTERS -  The provided slug name contains illegal characters.\n <\/code><\/li><li><code> SLUG_ALREADY_EXISTS -  The provided slug name already exists for another service.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SLUG_ERROR",
        "SLUG_CONTAINS_ILLEGAL_CHARACTERS",
        "SLUG_ALREADY_EXISTS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CloneErrorsEnum_CloneErrors",
      "displayName": "Clone Errors Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_CLONE_ERROR <\/code><\/li><li><code> SESSIONS -  Failed to clone sessions of active service's schedule\n <\/code><\/li><li><code> OPTIONS_AND_VARIANTS -  Failed to clone service's options and variants even though source service have them\n <\/code><\/li><li><code> FORM -  Failed to clone service's form\n <\/code><\/li><li><code> PRICING_PLANS -  Failed to clone pricing plans connected to the source service\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_CLONE_ERROR",
        "SESSIONS",
        "OPTIONS_AND_VARIANTS",
        "FORM",
        "PRICING_PLANS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_LocationTypeEnum_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_LOCATION_TYPE <\/code><\/li><li><code> CUSTOM -  The location is unique to this service and isn't defined as one of the business locations. `CUSTOM` is the equivalent of the `OWNER_CUSTOM` location type in [Schedules & Sessions API](https://dev.wix.com/api/rest/wix-bookings/schedules-and-sessions).\n <\/code><\/li><li><code> BUSINESS -  The location is one of the business locations available using the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations).\n <\/code><\/li><li><code> CUSTOMER -  The location can be determined by the customer and is not set up beforehand. This is applicable to services of type `APPOINTMENT` only.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_LOCATION_TYPE",
        "CUSTOM",
        "BUSINESS",
        "CUSTOMER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RemovedLocationSessionsAction_Action",
      "displayName": "Action Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_ACTION_TYPE <\/code><\/li><li><code> KEEP_AT_CURRENT_LOCATION - Keep future sessions at their current location. This is the default.\nNote: The location will be set directly on the session. i.e, if the location is currently inherited from the schedule, the inheritance will be overridden.\n <\/code><\/li><li><code> MOVE_TO_LOCATION - Move future sessions to a new location.\nThe new location must be specified in the availability locations to set ('SetAvailabilityLocationsRequest.locations').\n <\/code><\/li><li><code> DELETE - Delete future sessions.\nCurrently not supported.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_ACTION_TYPE",
        "KEEP_AT_CURRENT_LOCATION",
        "MOVE_TO_LOCATION",
        "DELETE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RateTypeEnum_RateType",
      "displayName": "Rate Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_RATE_TYPE <\/code><\/li><li><code> FIXED -  The service has a fixed price.\n <\/code><\/li><li><code> CUSTOM -  The service has a custom price, expressed as a price description.\n <\/code><\/li><li><code> VARIED -  This service is offered with a set of different prices based on different terms.\n <\/code><\/li><li><code> NO_FEE -  This service is offered free of charge.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_RATE_TYPE",
        "FIXED",
        "CUSTOM",
        "VARIED",
        "NO_FEE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceTypeEnum_ServiceType",
      "displayName": "Service Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SERVICE_TYPE <\/code><\/li><li><code> APPOINTMENT -  The service is an appointment.\n <\/code><\/li><li><code> CLASS -  The service is a class.\n <\/code><\/li><li><code> COURSE -  The service is a course.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SERVICE_TYPE",
        "APPOINTMENT",
        "CLASS",
        "COURSE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_Category_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CREATED -  Default status.\n <\/code><\/li><li><code> DELETED -  Category is deleted.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CREATED",
        "DELETED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_CategoryNotification_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> Updated <\/code><\/li><li><code> Deleted <\/code><\/li><li><code> Created <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "Updated",
        "Deleted",
        "Created"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_DayOfWeek",
      "displayName": "Day Of Week Object",
      "locations": [],
      "docs":       {
        "summary": " Enumerates the days of the week.\n \n Possible values are: <li><code> MONDAY <\/code><\/li><li><code> TUESDAY <\/code><\/li><li><code> WEDNESDAY <\/code><\/li><li><code> THURSDAY <\/code><\/li><li><code> FRIDAY <\/code><\/li><li><code> SATURDAY <\/code><\/li><li><code> SUNDAY <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_LocationStatus",
      "displayName": "Location Status Object",
      "locations": [],
      "docs":       {
        "summary": " For future use\n \n Possible values are: <li><code> ACTIVE <\/code><\/li><li><code> INACTIVE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ACTIVE",
        "INACTIVE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " For future use\n \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> BRANCH <\/code><\/li><li><code> OFFICES <\/code><\/li><li><code> RECEPTION <\/code><\/li><li><code> HEADQUARTERS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "BRANCH",
        "OFFICES",
        "RECEPTION",
        "HEADQUARTERS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Location_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> OWNER_BUSINESS <\/code><\/li><li><code> OWNER_CUSTOM <\/code><\/li><li><code> CUSTOM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "OWNER_BUSINESS",
        "OWNER_CUSTOM",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LinkedSchedule_Transparency",
      "displayName": "Transparency Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> FREE - The schedule can have available slots during the session.\n <\/code><\/li><li><code> BUSY - The schedule cannot have available slots during the session. Default value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "FREE",
        "BUSY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_externalcalendar_spi_v1_CalendarTypeEnum_CalendarType",
      "displayName": "Calendar Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> GOOGLE <\/code><\/li><li><code> I_CAL <\/code><\/li><li><code> OUTLOOK -  Use `MICROSOFT` instead.\n <\/code><\/li><li><code> OFFICE_365 -  Use `MICROSOFT` instead.\n <\/code><\/li><li><code> MICROSOFT <\/code><\/li><li><code> OTHER <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "GOOGLE",
        "I_CAL",
        "OUTLOOK",
        "OFFICE_365",
        "MICROSOFT",
        "OTHER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Interval_Day",
      "displayName": "Day Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - Undefined.\n <\/code><\/li><li><code> MON - Monday.\n <\/code><\/li><li><code> TUE - Tuesday.\n <\/code><\/li><li><code> WED - Wednesday.\n <\/code><\/li><li><code> THU - Thursday.\n <\/code><\/li><li><code> FRI - Friday.\n <\/code><\/li><li><code> SAT - Saturday.\n <\/code><\/li><li><code> SUN - Sunday.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringInterval_RecurringIntervalType",
      "displayName": "Recurring Interval Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - The default value. Sessions for this interval will be of type EVENT.\n <\/code><\/li><li><code> EVENT - A recurring interval of events\n <\/code><\/li><li><code> TIME_AVAILABILITY - Deprecated\n <\/code><\/li><li><code> AVAILABILITY - A recurring interval for availability\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "EVENT",
        "TIME_AVAILABILITY",
        "AVAILABILITY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Participant_ApprovalStatus",
      "displayName": "Approval Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - Default.\n <\/code><\/li><li><code> PENDING - Pending business approval.\n <\/code><\/li><li><code> APPROVED - Approved by the business.\n <\/code><\/li><li><code> DECLINED - Declined by the business. \n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "PENDING",
        "APPROVED",
        "DECLINED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarConference_ConferenceType",
      "displayName": "Conference Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> ONLINE_MEETING_PROVIDER - API-generated online meeting.\n <\/code><\/li><li><code> CUSTOM - User-defined meeting.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "ONLINE_MEETING_PROVIDER",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule_ScheduleStatus",
      "displayName": "Schedule Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> CREATED -  The default value when the schedule is created.\n <\/code><\/li><li><code> CANCELLED -  The schedule has been canceled.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "CREATED",
        "CANCELLED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_resources_core_api_v1_resource_Resource_ResourceStatus",
      "displayName": "Resource Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> CREATED -  Default status.\n <\/code><\/li><li><code> DELETED -  The resource was deleted.\n <\/code><\/li><li><code> UPDATED -  The resource was updated.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "CREATED",
        "DELETED",
        "UPDATED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_resources_core_api_v1_resource_ResourceNotification_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> Updated <\/code><\/li><li><code> Deleted <\/code><\/li><li><code> Created <\/code><\/li><li><code> Schedule_Updated <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "Updated",
        "Deleted",
        "Created",
        "Schedule_Updated"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_Benefit_BenefitType",
      "displayName": "Benefit Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED -  Should never be used\n <\/code><\/li><li><code> LIMITED -  Limited benefit type\n <\/code><\/li><li><code> UNLIMITED -  Unlimited benefit type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "LIMITED",
        "UNLIMITED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_pricingplans_benefits_api_v2_BenefitNotification_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> Updated <\/code><\/li><li><code> Deleted <\/code><\/li><li><code> Created <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "Updated",
        "Deleted",
        "Created"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionType",
      "displayName": "Session Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> EVENT - The session creates an event on the calendar for the owner of the schedule that the session belongs to.\nDefault type.\n <\/code><\/li><li><code> WORKING_HOURS - The session represents a resource's available working hours.\n <\/code><\/li><li><code> TIME_AVAILABILITY - Deprecated. please use WORKING_HOURS\n <\/code><\/li><li><code> AVAILABILITY - Deprecated. The session represents a resource's available hours. please use WORKING_HOURS\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "EVENT",
        "WORKING_HOURS",
        "TIME_AVAILABILITY",
        "AVAILABILITY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> CONFIRMED - The session is confirmed. Default status.\n <\/code><\/li><li><code> CANCELLED - The session is cancelled.\nA cancelled session can be the cancellation of a recurring session that should no longer be displayed or a deleted single session.\nThe ListSessions returns cancelled sessions only if 'includeDelete' flag is set to true.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "CONFIRMED",
        "CANCELLED"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.bookings.services-2"}
}