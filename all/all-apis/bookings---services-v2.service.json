{
  "name": "Bookings - Services V2",
  "client_id": "https://github.com/wix-private/scheduler/tree/master/bookings-backend/services-2#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage the services your customers can book.",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Services Service",
    "entity": "_wix_bookings_services_v2_Service",
    "src": "https://github.com/wix-private/scheduler/blob/master/bookings-backend/services-2/wix/bookings/services/v2/service.proto"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/bookings---services-v2/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/bookings---services-v2/docs/services-filter-and-sort.md",
      "name": "Filtering and Sorting"
    }
  ],
  "operations":   [
        {
      "name": "Get Service",
      "methodName": "GetService",
      "serviceName": "ServicesService",
      "tag": "Services Service",
      "permissions": [      {
        "name": "Read Bookings - Public Data",
        "description": "Request permission to read the business's bookings info, including staff member data (calendar, services, etc.)"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["serviceId"],
      "params": [      {
        "in": "PATH",
        "name": "serviceId",
        "type": "string",
        "doc": " ID of the service to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetService",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_GetServiceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a service.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/bookings/v2/services/{serviceId}",
        "links": [],
        "examples": [        {
          "title": "Retrieve a service",
          "body": ["curl -X GET 'https://wixapis.com/bookings/v2/services/353aa3b7-00ef-42bd-86ff-720d7ef60443' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"service\": {\n  \"id\": \"353aa3b7-00ef-42bd-86ff-720d7ef60443\",\n  \"type\": \"CLASS\",\n  \"sortOrder\": 0,\n  \"name\": \"Dog Yoga\",\n  \"description\": \"Get ready to downward dog with your furry best friend! In this unique class, you and your pup will strike a pose and find your zen. With a mix of stretching, breathing exercises, and playtime, this class is sure to be a tail-waggin' good time. Whether you're a seasoned yogi or a pup-tastic beginner, this class is pawsitively perfect for all levels. Don't forget to bring your sense of humor, as there's sure to be a few doggy distractions and playful paw-terruptions along the way. Namaste!\",\n  \"tagLine\": \"Unleash your zen with downward dog and a wagging tail in our pup-poseful yoga class!\",\n  \"defaultCapacity\": 50,\n  \"media\":   {\n    \"items\": [],\n    \"mainMedia\": {\"image\":     {\n      \"id\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n      \"url\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n      \"height\": 4032,\n      \"width\": 3024,\n      \"filename\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\"\n    }}\n  },\n  \"hidden\": false,\n  \"category\":   {\n    \"id\": \"7b5b9862-490f-491c-8477-d39baed078a1\",\n    \"name\": \"Best for fun dogs\",\n    \"sortOrder\": 1\n  },\n  \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n  \"payment\":   {\n    \"rateType\": \"FIXED\",\n    \"fixed\": {\"price\":     {\n      \"value\": \"15\",\n      \"currency\": \"USD\"\n    }},\n    \"pricingPlansIds\": [],\n    \"options\":     {\n      \"online\": true,\n      \"inPerson\": false,\n      \"deposit\": false,\n      \"pricingPlan\": false\n    }\n  },\n  \"onlineBooking\":   {\n    \"enabled\": true,\n    \"requireManualApproval\": false,\n    \"allowMultipleRequests\": false\n  },\n  \"staffMembersIds\": [],\n  \"conferencing\": {\"enabled\": true},\n  \"locations\": [{\"type\": \"BUSINESS\"}],\n  \"bookingPolicy\": {},\n  \"schedule\":   {\n    \"id\": \"8acb939f-34d1-4ac9-8564-b24c29e11ef7\",\n    \"firstSessionStart\": \"2023-02-13T15:30:00Z\"\n  },\n  \"supportedSlugs\": [  {\n    \"name\": \"dog-yoga\",\n    \"custom\": false,\n    \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n  }],\n  \"mainSlug\":   {\n    \"name\": \"dog-yoga\",\n    \"custom\": false,\n    \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n  },\n  \"urls\":   {\n    \"servicePage\":     {\n      \"relativePath\": \"/service-page/dog-yoga\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    },\n    \"bookingPage\":     {\n      \"relativePath\": \"/book-online/dog-yoga/book\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    },\n    \"calendarPage\":     {\n      \"relativePath\": \"/booking-calendar/dog-yoga\",\n      \"url\": \"<SITE_URL>/services-v2\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetServiceRequest",
        "rpcResponseName": "GetServiceResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Services",
      "methodName": "QueryServices",
      "serviceName": "ServicesService",
      "tag": "Services Service",
      "permissions": [      {
        "name": "Read Bookings - Public Data",
        "description": "Request permission to read the business's bookings info, including staff member data (calendar, services, etc.)"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2",
        "doc": " WQL expression.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryServices",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_QueryServicesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 services, given the provided paging, filtering, and sorting.\n Define queries using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n For field support for filters and sorting, see [Supported Filters and Sorting](https://dev.wix.com/api/rest/wix-bookings/services/supported-filters-and-sorting).\n\n To retrieve all services use an empty query:\n\n ```javascript\n {\n   \"query\": {}\n }\n ```\n `Query Services` runs with these defaults, which you can override:\n + `paging.limit` is `100`.\n + `paging.offset` is `0`.\n\n\n  >**Notes:**\n  > + Use UTC format when filtering with dates.\n  > + Only 1 use of each filter in the same query is supported. If a filter is defined more than once in a query, only the first occurrence is processed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v2/services/query",
        "links": [],
        "examples": [        {
          "title": "Query all services",
          "body": ["curl -X POST 'https://wixapis.com/bookings/v2/services/query' \\\n-H 'Authorization: <AUTH>' \\\n-d '{\n  \"query\": {\n    \"limit\": 15,\n    \"filter\": {\n      \"hidden\": {\n        \"$eq\": \"false\"\n      }\n    },\n    \"fields\": [\"name\", \"type\", \"description\"]\n  }\n}'"],
          "response": ["{\n  \"services\":   [\n        {\n      \"id\": \"0f01e746-2943-4893-97a3-9d52d8e9e26e\",\n      \"type\": \"APPOINTMENT\",\n      \"sortOrder\": 1,\n      \"name\": \"Personal Cat Hugging\",\n      \"description\": \"Introducing the Purrfect Hug - the ultimate cat cuddling experience! Our team of expert cuddlers will come to your home and provide your furry feline with the warmest and snuggliest hugs around.\",\n      \"tagLine\": \"Get some purr therapy with our cat hugging service!\",\n      \"defaultCapacity\": 1,\n      \"media\":       {\n        \"items\": [],\n        \"mainMedia\": {\"image\":         {\n          \"id\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\",\n          \"url\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\",\n          \"height\": 4000,\n          \"width\": 6000,\n          \"filename\": \"fb5af50cdfee49a7b8d87f340c969e90.jpg\"\n        }}\n      },\n      \"hidden\": false,\n      \"category\":       {\n        \"id\": \"0c54fbd3-9de6-4d2f-8775-e58eac5f5921\",\n        \"name\": \"Our Services\",\n        \"sortOrder\": 0\n      },\n      \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n      \"payment\":       {\n        \"rateType\": \"FIXED\",\n        \"fixed\": {\"price\":         {\n          \"value\": \"25\",\n          \"currency\": \"USD\"\n        }},\n        \"pricingPlansIds\": [],\n        \"options\":         {\n          \"online\": true,\n          \"inPerson\": false,\n          \"deposit\": false,\n          \"pricingPlan\": false\n        }\n      },\n      \"onlineBooking\":       {\n        \"enabled\": true,\n        \"requireManualApproval\": false,\n        \"allowMultipleRequests\": false\n      },\n      \"staffMembersIds\": [\"76570209-101f-409b-af97-b445bdb63125\"],\n      \"conferencing\": {\"enabled\": false},\n      \"locations\": [{\"type\": \"CUSTOMER\"}],\n      \"bookingPolicy\": {\"id\": \"\"},\n      \"schedule\":       {\n        \"id\": \"f986bc0e-ced0-48a7-8557-eb5c75c256cd\",\n        \"availabilityConstraints\":         {\n          \"sessionDurations\": [60],\n          \"timeBetweenSessions\": 0\n        }\n      },\n      \"supportedSlugs\":       [\n                {\n          \"name\": \"personal-cat-hugging\",\n          \"custom\": false,\n          \"createdDate\": \"2023-02-15T14:40:47.408Z\"\n        },\n                {\n          \"name\": \"initial-in-home-consultation\",\n          \"custom\": false,\n          \"createdDate\": \"2023-02-15T11:58:20.313Z\"\n        }\n      ],\n      \"mainSlug\":       {\n        \"name\": \"personal-cat-hugging\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-15T14:40:47.408Z\"\n      },\n      \"urls\":       {\n        \"servicePage\":         {\n          \"relativePath\": \"/service-page/personal-cat-hugging\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"bookingPage\":         {\n          \"relativePath\": \"/book-online/personal-cat-hugging/book\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"calendarPage\":         {\n          \"relativePath\": \"/booking-calendar/personal-cat-hugging\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        }\n      }\n    },\n        {\n      \"id\": \"353aa3b7-00ef-42bd-86ff-720d7ef60443\",\n      \"type\": \"CLASS\",\n      \"sortOrder\": 0,\n      \"name\": \"Dog Yoga\",\n      \"description\": \"Get ready to downward dog with your furry best friend! In this unique class, you and your pup will strike a pose and find your zen. With a mix of stretching, breathing exercises, and playtime, this class is sure to be a tail-waggin' good time. Whether you're a seasoned yogi or a pup-tastic beginner, this class is pawsitively perfect for all levels. Don't forget to bring your sense of humor, as there's sure to be a few doggy distractions and playful paw-terruptions along the way. Namaste!\",\n      \"tagLine\": \"Unleash your zen with downward dog and a wagging tail in our pup-poseful yoga class!\",\n      \"defaultCapacity\": 50,\n      \"media\":       {\n        \"items\": [],\n        \"mainMedia\": {\"image\":         {\n          \"id\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n          \"url\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\",\n          \"height\": 4032,\n          \"width\": 3024,\n          \"filename\": \"nsplsh_4d7639686a6e4555485234~mv2_d_3024_4032_s_4_2.jpg\"\n        }}\n      },\n      \"hidden\": false,\n      \"category\":       {\n        \"id\": \"7b5b9862-490f-491c-8477-d39baed078a1\",\n        \"name\": \"Best for fun dogs\",\n        \"sortOrder\": 1\n      },\n      \"form\": {\"id\": \"00000000-0000-0000-0000-000000000000\"},\n      \"payment\":       {\n        \"rateType\": \"FIXED\",\n        \"fixed\": {\"price\":         {\n          \"value\": \"15\",\n          \"currency\": \"USD\"\n        }},\n        \"pricingPlansIds\": [],\n        \"options\":         {\n          \"online\": true,\n          \"inPerson\": false,\n          \"deposit\": false,\n          \"pricingPlan\": false\n        }\n      },\n      \"onlineBooking\":       {\n        \"enabled\": true,\n        \"requireManualApproval\": false,\n        \"allowMultipleRequests\": false\n      },\n      \"staffMembersIds\": [],\n      \"conferencing\": {\"enabled\": true},\n      \"locations\": [{\"type\": \"BUSINESS\"}],\n      \"bookingPolicy\": {\"id\": \"\"},\n      \"schedule\":       {\n        \"id\": \"8acb939f-34d1-4ac9-8564-b24c29e11ef7\",\n        \"firstSessionStart\": \"2023-02-13T15:30:00Z\"\n      },\n      \"supportedSlugs\": [      {\n        \"name\": \"dog-yoga\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n      }],\n      \"mainSlug\":       {\n        \"name\": \"dog-yoga\",\n        \"custom\": false,\n        \"createdDate\": \"2023-02-09T16:40:45.267Z\"\n      },\n      \"urls\":       {\n        \"servicePage\":         {\n          \"relativePath\": \"/service-page/dog-yoga\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"bookingPage\":         {\n          \"relativePath\": \"/book-online/dog-yoga/book\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        },\n        \"calendarPage\":         {\n          \"relativePath\": \"/booking-calendar/dog-yoga\",\n          \"url\": \"<SITE_URL>/services-v2\"\n        }\n      }\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"cursors\": {}\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryServicesRequest",
        "rpcResponseName": "QueryServicesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_bookings_services_v2_ServiceUpdatedDomainEvent",
      "displayName": "Service Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityUpdatedEvent",
      "displayName": "Service Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceCreatedDomainEvent",
      "displayName": "Service Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityCreatedEvent",
      "displayName": "Service Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceDeletedDomainEvent",
      "displayName": "Service Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.bookings.services.v2.service`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Service ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceEntityDeletedEvent",
      "displayName": "Service Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n",
          "readOnly": true
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Order of a category within a category list.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Conferencing",
      "displayName": "Conferencing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enabled",
        "type": "boolean",
        "doc": " Whether a conference link is generated for the service's sessions.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Form",
      "displayName": "Form Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the form associated with the service.\n The form information that is submitted when booking includes contact details, participants, and other form fields set up for the service.\n You can manage the service booking form fields using the [Bookings Forms API](https://dev.wix.com/api/rest/wix-bookings/services/form/form-object).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_FormSettings",
      "displayName": "Form Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "hidden",
        "type": "boolean",
        "doc": " Whether the service booking form should be hidden from the site.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " 2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Postal or zip code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address_street",
          "doc": " Street address. Includes street name, number, and apartment number in separate fields.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " Full address of the location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_StreetAddress",
          "doc": " Street name and number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": " Street address. Includes street name, number, and apartment number in separate fields.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": "Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_LocationTypeEnum_LocationType",
          "doc": " The type of location:  \n - `CUSTOM`: The location is specific to this service, and is not derived from the business location.\n - `BUSINESS`: A business location, as defined for the by the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations).\n - `CUSTOMER`: Will be determined by the customer. For appointments only.\n"
        },
                {
          "name": "calculatedAddress",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
          "doc": " The location address, based on the location `type`. If `type` is `CUSTOMER`, this address is empty.\n",
          "readOnly": true
        },
                {
          "name": "options",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Location_options",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Location_options",
      "displayName": "options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "business",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_BusinessLocationOptions",
          "doc": " The service is offered at the referenced business location.\n"
        },
                {
          "name": "custom",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_CustomLocationOptions",
          "doc": " The service is offered at a custom location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_BusinessLocationOptions",
      "displayName": "Business Location Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Business location ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Business location name.\n",
          "readOnly": true
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": " Whether this is the default location. There can only be 1 default location per site. The default location can't be archived.\n",
          "readOnly": true
        },
                {
          "name": "address",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
          "doc": " Business location address. The address is derived from the business location and is read-only.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CustomLocationOptions",
      "displayName": "Custom Location Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "address",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Address",
        "doc": " A custom address for the location.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID. \n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image file name.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem"]
          },
          "doc": " Media items associated with the service.\n"
        },
                {
          "name": "mainMedia",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem",
          "doc": " Primary media associated with the service.\n"
        },
                {
          "name": "coverMedia",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem",
          "doc": " Cover media associated with the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_MediaItem",
      "displayName": "Media Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "item",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_MediaItem_item",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_MediaItem_item",
      "displayName": "item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "image",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Image",
        "doc": " Details of the image associated with the service, such as URL and size.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_OnlineBooking",
      "displayName": "Online Booking Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether this service can be booked online.\n When set to `true`, customers can book the service online. Configuring the payment options is done via `service.payment` property.\n When set to `false`, customers cannot book the service online, and the service can only be paid for in person.\n"
        },
                {
          "name": "requireManualApproval",
          "type": "boolean",
          "doc": " Booking the service requires approval by the business owner.\n"
        },
                {
          "name": "allowMultipleRequests",
          "type": "boolean",
          "doc": " Multiple customers can request to book the same time slot. Relevant when `requireManualApproval` is `true`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": " Money.\n Default format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency code. Must be valid ISO 4217 currency code (e.g., USD).\n"
        },
                {
          "name": "formattedValue",
          "type": "string",
          "doc": " Monetary amount. Decimal string in local format (e.g., 1 000,30). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Payment",
      "displayName": "Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rateType",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_RateTypeEnum_RateType",
          "doc": " The rate the customer is expected to pay for the service.\n Can be:\n - `FIXED`: The service has a fixed price.\n - `CUSTOM`: The service has a custom price, expressed as a price description.\n - `VARIED`: This service is offered with a set of different prices based on different terms.\n - `NO_FEE`: This service is offered free of charge.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Payment_rate",
          "doc": ""
        },
                {
          "name": "pricingPlansIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of pricing plans that can be used as payment for the service.\n",
          "readOnly": true
        },
                {
          "name": "options",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_PaymentOptions",
          "doc": " The payment options a customer can use to pay for the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Payment_rate",
      "displayName": "rate Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixed",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_FixedPayment",
          "doc": " The details for the fixed price of the service.\n\n Required when: `rateType` is `FIXED`\n"
        },
                {
          "name": "custom",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_CustomPayment",
          "doc": " The details for the custom price of the service.\n\n Required when: `rateType` is `CUSTOM`\n"
        },
                {
          "name": "varied",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_VariedPayment",
          "doc": " The details for the varied pricing of the service.\n Read more about [varied price options](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online#offering-varied-price-options).\n \n Required when: `rateType` is `VARIED`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_FixedPayment",
      "displayName": "Fixed Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "price",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The fixed price required to book the service.\n\n Required when: `rateType` is `FIXED`\n"
        },
                {
          "name": "deposit",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The deposit price required to book the service. \n \n Required when: `rateType` is `FIXED` and `paymentOptions.deposit` is `true`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_VariedPayment",
      "displayName": "Varied Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "defaultPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The default price for the service without any variants. It will also be used as the default price for any new variant.\n"
        },
                {
          "name": "deposit",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The deposit price required to book the service. \n \n Required when: `rateType` is `VARIED` and `paymentOptions.deposit` is `true`\n"
        },
                {
          "name": "minPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The minimal price a customer may pay for this service, based on its variants.\n",
          "readOnly": true
        },
                {
          "name": "maxPrice",
          "type": "All APIs.Bookings - Services V2._wix_common_Money",
          "doc": " The maximum price a customer may pay for this service, based on its variants.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CustomPayment",
      "displayName": "Custom Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "description",
        "type": "string",
        "doc": " A custom description explaining to the customer how to pay for the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_PaymentOptions",
      "displayName": "Payment Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "online",
          "type": "boolean",
          "doc": " Customers can pay for the service online.\n When `true`:\n + `rateType` must be either `FIXED` or `VARIED`.\n + `fixed.price` or `varied.default_price` must be specified respectively. Read more about [getting paid online](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online).\n"
        },
                {
          "name": "inPerson",
          "type": "boolean",
          "doc": " Customers can pay for the service in person.\n"
        },
                {
          "name": "deposit",
          "type": "boolean",
          "doc": " This service requires a deposit to be made online in order to book it.\n When `true`:\n + `rateType` must be `VARIED` or `FIXED`. \n + A `deposit` must be specified.\n"
        },
                {
          "name": "pricingPlan",
          "type": "boolean",
          "doc": " Customers can pay for the service using a pricing plan.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Schedule",
      "displayName": "Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Schedule ID, used to manage the service's sessions.\n",
          "readOnly": true
        },
                {
          "name": "availabilityConstraints",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_AvailabilityConstraints",
          "doc": " Limitations dictating the way session availability is calculated. For appointments only.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_AvailabilityConstraints",
      "displayName": "Availability Constraints Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionDurations",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " A list of duration options for sessions, in minutes. \n \n The availability calculation generates slots for sessions with these durations, unless there is a conflict with existing sessions or other availability constraints exist.\n Required for services of type `APPOINTMENT` to allow the customer to book a session of the service. Not relevant for other service types.\n \n \n Min: 1 minute\n"
        },
                {
          "name": "timeBetweenSessions",
          "type": "integer",
          "doc": " The number of minutes between the end of a session and the start of the next.\n  \n  \n Min: 0 minutes\n Max: 720 minutes\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
      "displayName": "Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": "*\n`BookingPolicy` is the main entity of `BookingPolicyService` and specifies a set of rules for booking a service\nby visitors and members.\n\nEach `BookingPolicy` consists of a number of sub-policies. When the Bookings App is provisioned to a meta site then a\ndefault `BookingPolicy` will be created with defaults for each of these sub-policies. This also applies when a request\nis received to create a new `BookingPolicy` and one or more of these sub-policies are not provided.\n\nSub-policies are defined in separate objects as specified below.\n\n- The `LimitEarlyBookingPolicy` object defines the policy for limiting early bookings.\n- The `LimitLateBookingPolicy` object defines the policy for limiting late bookings.\n- The `BookAfterStartPolicy` object defines the policy for booking after the start of the schedule.\n- The `CancellationPolicy` object defines the policy for canceling a booked entity.\n- The `ReschedulePolicy` object defines the policy for rescheduling booked entity.\n- The `WaitlistPolicy` object defines the policy for a waitlist.\n- The `ParticipantsPolicy` object defines the policy regarding the participants per booking.\n\nBy default each sub-policy is disabled. A more detailed specification of the default settings of each sub-policy\ncan be found in the description of the corresponding object.\n\nPartial updates are supported on the main entity level, however in order to update a sub-policy the client needs to provide the whole sub-policy object.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " The ID to the policy for the booking.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the policy is updated. To prevent conflicting changes, the existing revision must be used when updating a policy.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the policy was created. \n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the policy was updated. \n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the policy.\n",
          "readOnly": true
        },
                {
          "name": "customPolicyDescription",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_PolicyDescription",
          "doc": " Custom description for the policy. This policy is displayed to the participant.\n",
          "readOnly": true
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": " Whether the policy is the default for the meta site.\n",
          "readOnly": true
        },
                {
          "name": "limitEarlyBookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_LimitEarlyBookingPolicy",
          "doc": " Policy for limiting early bookings.\n",
          "readOnly": true
        },
                {
          "name": "limitLateBookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_LimitLateBookingPolicy",
          "doc": " Policy for limiting late bookings.\n",
          "readOnly": true
        },
                {
          "name": "bookAfterStartPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookAfterStartPolicy",
          "doc": " Policy on booking an entity after the start of the schedule.\n",
          "readOnly": true
        },
                {
          "name": "cancellationPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_CancellationPolicy",
          "doc": " Policy for canceling a booked entity.\n",
          "readOnly": true
        },
                {
          "name": "reschedulePolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_ReschedulePolicy",
          "doc": " Policy for rescheduling a booked entity.\n",
          "readOnly": true
        },
                {
          "name": "waitlistPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_WaitlistPolicy",
          "doc": " Waitlist policy for the service.\n",
          "readOnly": true
        },
                {
          "name": "participantsPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_ParticipantsPolicy",
          "doc": " Policy regarding the participants per booking.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_PolicyDescription",
      "displayName": "Policy Description Object",
      "locations": [],
      "docs":       {
        "summary": " A description of the policy to display to participants.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the description should be displayed. If `true`, the description is displayed.\n  \n Default: `false`\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " The description to display.\n  \n Default: Empty  \n Max length: 1000 characters\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_LimitEarlyBookingPolicy",
      "displayName": "Limit Early Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for limiting early bookings.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether there is a limit on how early a customer \n can book. When `false`, there is no limit on the earliest\n booking time and customers can book in advance, as early as they like.\n  \n Default: `false`\n"
        },
                {
          "name": "earliestBookingInMinutes",
          "type": "integer",
          "doc": " Maximum number of minutes before the start of the session that a booking can be made. This value must be greater\n than `latest_booking_in_minutes` in the `LimitLateBookingPolicy` policy.\n  \n Default: 10080 minutes (7 days)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_LimitLateBookingPolicy",
      "displayName": "Limit Late Booking Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for limiting late bookings. \n\n This policy and the `BookAfterStartPolicy` policy cannot be enabled at the same time. So if this policy\n is enabled, `BookAfterStartPolicy` must be disabled.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether there is a limit on how late a customer \n can book. When `false`, there is no limit on the latest\n booking time and customers can book up to the last minute.\n  \n Default: `false`\n"
        },
                {
          "name": "latestBookingInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the session that a booking can be made.\n For a schedule, this is relative to the start time of the next booked session, excluding past-booked sessions.\n This value must be less than `earliest_booking_in_minutes` in the `LimitEarlyBookingPolicy` policy.\n  \n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_BookAfterStartPolicy",
      "displayName": "Book After Start Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for whether a session can be booked after the start of the schedule. \n This policy and `LimitLateBookingPolicy` cannot be enabled at the same time. So if this policy\n is enabled, the `LimitLateBookingPolicy` policy must be disabled.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enabled",
        "type": "boolean",
        "doc": " Whether booking is allowed after the start of the schedule. When `true`, \n customers can book after the start of the schedule.\n  \n Default: `false`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_CancellationPolicy",
      "displayName": "Cancellation Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for canceling a booked session.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether canceling a booking is allowed. When `true`, customers \n can cancel the booking.\n  \n Default: `false`\n"
        },
                {
          "name": "limitLatestCancellation",
          "type": "boolean",
          "doc": " Whether there is a limit on the latest cancellation time. When `true`, \n a time limit is enforced.\n\n Default: `false`\n"
        },
                {
          "name": "latestCancellationInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the booked session that the booking can be canceled.\n\n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_ReschedulePolicy",
      "displayName": "Reschedule Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for rescheduling a booked session.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether rescheduling a booking is allowed. When `true`, customers \n can reschedule the booking.\n  \n Default: `false`\n"
        },
                {
          "name": "limitLatestReschedule",
          "type": "boolean",
          "doc": " Whether there is a limit on the latest reschedule time. When `true`, \n a time limit is enforced.\n\n Default: `false`\n"
        },
                {
          "name": "latestRescheduleInMinutes",
          "type": "integer",
          "doc": " Minimum number of minutes before the start of the booked session that the booking can be rescheduled.\n  \n Default: 1440 minutes (1 day)  \n Min: 1 minute\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_WaitlistPolicy",
      "displayName": "Waitlist Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for the waitlist. \n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the session has a waitlist. If `true`, there is a waitlist.\n  \n Default: `false`\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": " Number of spots available in the waitlist.\n  \n Default: 10 spots  \n Min: 1 spot\n"
        },
                {
          "name": "reservationTimeInMinutes",
          "type": "integer",
          "doc": " Amount of time a participant is given to book, once notified that a spot is available.\n  \n Default: 10 minutes  \n Min: 1 spot\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_bookings_v1_ParticipantsPolicy",
      "displayName": "Participants Policy Object",
      "locations": [],
      "docs":       {
        "summary": " The policy for the maximum number of participants per booking.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the maximum number of participants applies. When `false`, there is \n no maximum.\n  \n Default: `false`\n"
        },
                {
          "name": "maxParticipantsPerBooking",
          "type": "integer",
          "doc": " Maximum number of participants allowed.\n  \n Default: 1 participant  \n Min: 1 participant\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Slug",
      "displayName": "Slug Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " The unique part of service's URL that identifies the service's information page. For example, `service-1` in `https:/example.com/services/service-1`. \n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the slug was generated or customized. If `true`, the slug was customized manually by the business owner. Otherwise, the slug was automatically generated from the service name.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the slug was created. This is a system field.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PageUrlV2",
      "displayName": "Page Url V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "relativePath",
          "type": "string",
          "doc": " The path to that page - e.g /product-page/a-product\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The URL of that page. e.g https://mysite.com/product-page/a-product\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_URLs",
      "displayName": "UR Ls Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "servicePage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the service page.\n",
          "readOnly": true
        },
                {
          "name": "bookingPage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the booking entry point. It can be either to the calendar or to the service page.\n",
          "readOnly": true
        },
                {
          "name": "calendarPage",
          "type": "All APIs.Bookings - Services V2._wix_common_PageUrlV2",
          "doc": " The URL for the calendar. Can be empty if no calendar exists.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "namespacesMapEntry",
      "displayName": "namespaces Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  Data Extensions extended fields\nKey: Namespace\nValue: extended fields data in Struct format\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "struct",
        "doc": "`key` of type string, `value` of type struct"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_data_dataextensions_ExtendedFields",
      "displayName": "Extended Fields Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "namespaces",
        "type": "All APIs.Bookings - Services V2.namespacesMapEntry",
        "doc": "Set of key-value pairs.  Data Extensions extended fields\nKey: Namespace\nValue: extended fields data in Struct format\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled. \n\n\n Default: `false` (Auto Redirect is enabled.)\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value.\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focus keyword.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tag information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_Service",
      "displayName": "Service Object",
      "locations": [],
      "docs":       {
        "summary": " The `Service` object represents the business offering that a business provides to its customers.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Service ID.\n",
          "readOnly": true
        },
                {
          "name": "type",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_ServiceTypeEnum_ServiceType",
          "doc": " Service type.\n"
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Order of a service within a category.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Service name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Service description, such as `High-class hair styling, cuts, straightening and color.`\n"
        },
                {
          "name": "tagLine",
          "type": "string",
          "doc": " Short service description, such as `Hair styling.`\n"
        },
                {
          "name": "defaultCapacity",
          "type": "integer",
          "doc": " Default maximum number of customers that can book the service. The service cannot be booked beyond this capacity.\n"
        },
                {
          "name": "media",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Media",
          "doc": " Media associated with the service.\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether the service is hidden from the site.\n"
        },
                {
          "name": "category",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Category",
          "doc": " The category the service is associated with.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Form",
          "doc": " The form used when booking the service.\n"
        },
                {
          "name": "payment",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Payment",
          "doc": " Payment options for booking the service.\n"
        },
                {
          "name": "onlineBooking",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_OnlineBooking",
          "doc": " Online booking settings.\n"
        },
                {
          "name": "staffMembersIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the staff members providing the service. For appointments only.\n",
          "readOnly": true
        },
                {
          "name": "conferencing",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Conferencing",
          "doc": " Conferencing options for this service.\n"
        },
                {
          "name": "locations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Location"]
          },
          "doc": " The locations this service is offered at. For courses only: Currently, only 1 location is supported.\n",
          "readOnly": true
        },
                {
          "name": "bookingPolicy",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_bookings_v1_BookingPolicy",
          "doc": " Policy determining under what conditions this service can be booked. For example, whether the service can only be booked up to 30 minutes before it begins.\n"
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Schedule",
          "doc": " The service's schedule, which can be used to manage the service's sessions.\n",
          "readOnly": true
        },
                {
          "name": "supportedSlugs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug"]
          },
          "doc": " A slug is the last part of the URL address that serves as a unique identifier of the service.\n The list of supported slugs includes past service names for backwards compatibility, and a custom slug if one was set by the business owner.\n",
          "readOnly": true
        },
                {
          "name": "mainSlug",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug",
          "doc": " The main slug for the service. `mainSlug` is either taken from the current service name or is a custom slug set by the business owner.\n `mainSlug` is used to construct the service's URLs.\n",
          "readOnly": true
        },
                {
          "name": "urls",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_URLs",
          "doc": " URLs to various service-related pages, such as the calendar page and the booking page.\n",
          "readOnly": true
        },
                {
          "name": "seoData",
          "type": "All APIs.Bookings - Services V2._com_wixpress_advanced_seo_SeoSchema",
          "doc": " Custom SEO data for the service.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the service was created. \n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the service was updated. \n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the service is updated. To prevent conflicting changes, the existing revision must be used when updating a service.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_StaffMember",
      "displayName": "Staff Member Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Staff member id, can be used to retrieve resource information using wix-bookings-backend resources API.\n",
          "readOnly": true
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Staff member's email address.\n",
          "readOnly": true
        },
                {
          "name": "phone",
          "type": "string",
          "doc": " Staff member's phone number.\n",
          "readOnly": true
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Staff member's description.\n",
          "readOnly": true
        },
                {
          "name": "schedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Schedule"]
          },
          "doc": " Staff member's schedules\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paging",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_Paging",
        "doc": "Paging options to limit and skip the number of items.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "customPropertiesMapEntry",
      "displayName": "custom Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Custom properties that can be associated with the category.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": " Categories are used to group multiple services together. A service must be associated with a category in order to be exposed in the Wix Bookings UI.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID. Read-only.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n"
        },
                {
          "name": "customProperties",
          "type": "All APIs.Bookings - Services V2.customPropertiesMapEntry",
          "doc": "Set of key-value pairs. Custom properties that can be associated with the category.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_Category_Status",
          "doc": " Category status Read-only.\n",
          "readOnly": true
        },
                {
          "name": "sortOrder",
          "type": "integer",
          "doc": " Sorting order of the category for Wix Bookings UI.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_CategoryNotification",
      "displayName": "Category Notification Object",
      "locations": [],
      "docs":       {
        "summary": " An event sent every time a category entity is changed.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_Category",
          "doc": ""
        },
                {
          "name": "event",
          "type": "All APIs.Bookings - Services V2._com_wixpress_bookings_services_api_v1_CategoryNotification_Event",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dispatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Bookings - Services V2._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_bookings_services_v2_CreateServiceRequest",
      "displayName": "Create Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " Service to be created.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CreateServiceResponse",
      "displayName": "Create Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The created service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceRequest",
      "displayName": "Get Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "serviceId",
        "type": "string",
        "doc": " ID of the service to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_GetServiceResponse",
      "displayName": "Get Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The retrieved service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_UpdateServiceRequest",
      "displayName": "Update Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "service",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
          "doc": " Service to update. [Partial updates](https:\\\\example.com) are supported.\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Bookings - Services V2._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_UpdateServiceResponse",
      "displayName": "Update Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "service",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Service",
        "doc": " The updated service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DeleteServiceRequest",
      "displayName": "Delete Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to delete.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DeleteServiceResponse",
      "displayName": "Delete Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryServicesRequest",
      "displayName": "Query Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_QueryV2",
        "doc": " WQL expression.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_QueryServicesResponse",
      "displayName": "Query Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "services",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_Service"]
          },
          "doc": " The retrieved services.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging metadata, including offset and count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CountServicesRequest",
      "displayName": "Count Services Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " The filters for performing the count.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_CountServicesResponse",
      "displayName": "Count Services Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " The number of services matching the given filter.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_AddStaffMembersToServiceRequest",
      "displayName": "Add Staff Members To Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to add the staff members to.\n"
        },
                {
          "name": "staffMembersIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the staff members to add to the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_AddStaffMembersToServiceResponse",
      "displayName": "Add Staff Members To Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "staffMembers",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_StaffMember"]
        },
        "doc": " The added staff members.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RemoveStaffMembersFromServiceRequest",
      "displayName": "Remove Staff Members From Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to remove the staff members from.\n"
        },
                {
          "name": "staffMembersIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the staff members to remove from the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RemoveStaffMembersFromServiceResponse",
      "displayName": "Remove Staff Members From Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ConnectPricingPlansToServiceRequest",
      "displayName": "Connect Pricing Plans To Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to add the pricing plans to.\n"
        },
                {
          "name": "pricingPlansIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of the pricing plans to connect to the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ConnectPricingPlansToServiceResponse",
      "displayName": "Connect Pricing Plans To Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "pricingPlansIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " IDs of the pricing plans connect to the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DisconnectPricingPlansFromServiceRequest",
      "displayName": "Disconnect Pricing Plans From Service Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to disconnect the pricing plans from.\n"
        },
                {
          "name": "pricingPlansIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " ID of the pricing plans to disconnect from the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_DisconnectPricingPlansFromServiceResponse",
      "displayName": "Disconnect Pricing Plans From Service Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugRequest",
      "displayName": "Set Custom Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "serviceId",
          "type": "string",
          "doc": " ID of the service to assign the custom slug to.\n"
        },
                {
          "name": "slugName",
          "type": "string",
          "doc": " The custom name to set as the active slug for the service.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_SetCustomSlugResponse",
      "displayName": "Set Custom Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "slug",
        "type": "All APIs.Bookings - Services V2._wix_bookings_services_v2_Slug",
        "doc": " The new slug set as the active slug for the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ValidateSlugRequest",
      "displayName": "Validate Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "slugName",
        "type": "string",
        "doc": " The custom name to validate as a slug for the service.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ValidateSlugResponse",
      "displayName": "Validate Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "valid",
          "type": "boolean",
          "doc": " Whether the requested slug name is valid.\n"
        },
                {
          "name": "slugName",
          "type": "string",
          "doc": " The requested custom slug name to validate. If valid, the slug name can be set as a slug for the service and is populated with the requested slug. Otherwise, `slugName` is empty.\n"
        },
                {
          "name": "errors",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Services V2._wix_bookings_services_v2_InvalidSlugErrorEnum_InvalidSlugError"]
          },
          "doc": " If the slug is invalid, this field is populated with the reasons why the slug is invalid. Validation errors may include `SLUG_IS_TOO_LONG`, `SLUG_CONTAIN_ILLEGAL_CHARACTERS`, and `SLUG_ALREADY_EXISTS`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_InvalidSlugErrorEnum_InvalidSlugError",
      "displayName": "Invalid Slug Error Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SLUG_ERROR <\/code><\/li><li><code> SLUG_IS_TOO_LONG -  The provided slug name exceeds the maximum amount of characters for slug.\n <\/code><\/li><li><code> SLUG_CONTAIN_ILLEGAL_CHARACTERS -  The provided slug name contains illegal characters.\n <\/code><\/li><li><code> SLUG_ALREADY_EXISTS -  The provided slug name already exists for the same or another service.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SLUG_ERROR",
        "SLUG_IS_TOO_LONG",
        "SLUG_CONTAIN_ILLEGAL_CHARACTERS",
        "SLUG_ALREADY_EXISTS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_LocationTypeEnum_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_LOCATION_TYPE <\/code><\/li><li><code> CUSTOM -  The location is unique to this service and isn't defined as one of the business locations. `CUSTOM` is the equivalent of the `OWNER_CUSTOM` location type in [Schedules & Sessions API](https://dev.wix.com/api/rest/wix-bookings/schedules-and-sessions).\n <\/code><\/li><li><code> BUSINESS -  The location is one of the business locations available using the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations).\n <\/code><\/li><li><code> CUSTOMER -  The location can be determined by the customer and is not set up beforehand. This is applicable to services of type `APPOINTMENT` only.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_LOCATION_TYPE",
        "CUSTOM",
        "BUSINESS",
        "CUSTOMER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_RateTypeEnum_RateType",
      "displayName": "Rate Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_RATE_TYPE <\/code><\/li><li><code> FIXED -  The service has a fixed price.\n <\/code><\/li><li><code> CUSTOM -  The service has a custom price, expressed as a price description.\n <\/code><\/li><li><code> VARIED -  This service is offered with a set of different prices based on different terms.\n <\/code><\/li><li><code> NO_FEE -  This service is offered free of charge.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_RATE_TYPE",
        "FIXED",
        "CUSTOM",
        "VARIED",
        "NO_FEE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_ServiceTypeEnum_ServiceType",
      "displayName": "Service Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SERVICE_TYPE <\/code><\/li><li><code> APPOINTMENT -  The service is an appointment.\n <\/code><\/li><li><code> CLASS -  The service is a class.\n <\/code><\/li><li><code> COURSE -  The service is a course.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SERVICE_TYPE",
        "APPOINTMENT",
        "CLASS",
        "COURSE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_bookings_services_v2_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_Category_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CREATED -  Default status.\n <\/code><\/li><li><code> DELETED -  Category is deleted.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CREATED",
        "DELETED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_bookings_services_api_v1_CategoryNotification_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> Updated <\/code><\/li><li><code> Deleted <\/code><\/li><li><code> Created <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "Updated",
        "Deleted",
        "Created"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.bookings.services-2"}
}