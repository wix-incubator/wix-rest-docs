{
  "name": "Blog",
  "client_id": "https://github.com/wix-private/npm-proto-bazel/tree/master/com_wixpress_proto_communities-blog-platformized-proto/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Draft Posts",
      "entity": null
    },
        {
      "name": "Posts",
      "entity": "_com_wixpress_npm_communities_platformized_blog_v3_Post",
      "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post.proto"
    },
        {
      "name": "Draft posts",
      "entity": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
      "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/draft-post.proto"
    },
        {
      "name": "Categories",
      "entity": "_com_wixpress_npm_communities_platformized_blog_v3_Category",
      "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/category.proto"
    },
        {
      "name": "Tags",
      "entity": "_com_wixpress_npm_communities_platformized_blog_Tag",
      "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/tag.proto"
    },
        {
      "name": "Post Stats",
      "entity": null
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/blog/docs/tags-filter-and-sort.md",
      "name": "Supported Filters and Sorting",
      "tag": "Tags"
    },
        {
      "path": "../guides/blog/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/blog/docs/use-cases.md",
      "name": "Sample Flows"
    },
        {
      "path": "../guides/blog/docs/categories-filter-and-sort.md",
      "name": "Supported Filters and Sorting",
      "tag": "Categories"
    },
        {
      "path": "../guides/blog/docs/draftposts-filter-and-sort.md",
      "name": "Supported Filters and Sorting",
      "tag": "Draft Posts"
    },
        {
      "path": "../guides/blog/docs/posts-filter-and-sort.md",
      "name": "Supported Filters and Sorting",
      "tag": "Posts"
    }
  ],
  "operations":   [
        {
      "name": "Bulk Update Draft Posts",
      "methodName": "BulkUpdateDraftPosts",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "draftPosts.draftPost",
        "draftPosts.draftPost.id"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_MaskedDraftPosts"]
          },
          "doc": " Draft posts to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "action",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdateAction_Action",
          "doc": " Action to perform on the posts.\n\n - `UPDATE`: Update the draft post.\n - `UPDATE_PUBLISH`: Update and publish the draft post.\n - `UPDATE_SCHEDULE`: Update the draft post and schedule a publish date.\n - `UPDATE_REVERT_TO_DRAFT`: Update the post and revert it to a draft post.\n - `UPDATE_CANCEL_SCHEDULE`: Update the draft post and cancel the scheduled publish date.\n - `UPDATE_REJECT`: Update and reject draft post.\n - `UPDATE_PUBLICATION`: Update a published post. This creates and updates a draft version of the post. The original post is still published.\n\n Default: `UPDATE`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "scheduledPublishDate",
          "type": "string",
          "doc": " Posts' scheduled publish date when `action` is set to `UPDATE_SCHEDULE`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full updated draft post entities in the response.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateDraftPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateDraftPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates multiple draft posts.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/update",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH \\\n  'http://www.wixapis.com/blog/v3/draft-posts/update' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'\n  -d '{\n        \"draftPosts\": [\n          {\n            \"draftPost\": {\n              \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n              \"seoSlug\": \"places-to-visit-in-europe\"\n            }\n          },\n          {\n            \"draftPost\": {\n              \"id\": \"d1c6418d-322b-4976-a815-80ee35c2a5e7\",\n              \"seoSlug\": \"places-to-visit-in-america\"\n            }\n          }\n        ],\n        \"action\": \"UPDATE_AND_PUBLISH\",\n      }'\n\n{\n  \"results\": [\n    {\n      \"itemMetadata\": {\n        \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n        \"originalIndex\": 0,\n        \"success\": \"true\"\n      }\n    },\n    {\n      \"itemMetadata\": {\n        \"id\": \"d1c6418d-322b-4976-a815-80ee35c2a5e7\",\n        \"originalIndex\": 1,\n        \"success\": \"true\"\n      }\n    }\n  ],\n  \"bulkActionMetadata\": {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0,\n    \"undetailedFailures\": 0\n  }\n}\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateDraftPostsRequest",
        "rpcResponseName": "BulkUpdateDraftPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Category",
      "methodName": "CreateCategory",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "category",
        "category.label"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Category info.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CreateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/categories",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --location --request POST 'http://www.wixapis.com/blog/v3/categories' \\\n    -H 'Content-Type: application/json'  \\\n    -H 'Authorization: <AUTH>' \\\n    --data-raw '{\n      \"category\": {\n        \"label\": \"Summer\",\n        \"description\": \"Posts about my summer\",\n        \"title\": \"Summer\",\n        \"displayPosition\": 1,\n        \"language\": \"en\",\n        \"slug\": \"summer-slug\"\n      },\n      \"fieldsets\": [\"URL\"]\n}'"],
          "response": ["{\"category\": {\n  \"id\": \"5f2bcaa0879ad500173577f3\",\n  \"label\": \"Summer\",\n  \"postCount\": 0,\n  \"url\":   {\n    \"base\": \"https://some-user.wixsite.com/my-site\",\n    \"path\": \"/blog/categories/summer-slug\"\n  },\n  \"description\": \"Posts about my summer\",\n  \"title\": \"Summer\",\n  \"coverMedia\":   {\n    \"enabled\": true,\n    \"displayed\": true,\n    \"custom\": true\n  },\n  \"displayPosition\": 1,\n  \"language\": \"en\",\n  \"slug\": \"summer-slug\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCategoryRequest",
        "rpcResponseName": "CreateCategoryResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Draft Post",
      "methodName": "CreateDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "draftPost",
        "draftPost.title"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "draftPost",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Draft post to create.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "publish",
          "type": "boolean",
          "doc": " Whether the draft post should be published on creation.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CreateDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a draft post.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/draft-posts",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST \\\n  'http://www.wixapis.com/blog/v3/draft-posts/' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  -d '{\n        \"draftPost\": {\n          \"title\": \"Places to visit in europe\"\n        }\n      }'"],
          "response": ["{\"draftPost\": {\n  \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n  \"title\": \"Places to visit in europe\",\n  \"featured\": false,\n  \"categoryIds\": [],\n  \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a39\",\n  \"hashtags\": [],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 0,\n  \"tagIds\": [],\n  \"relatedPostIds\": [],\n  \"pricingPlanIds\": [],\n  \"language\": \"en\",\n  \"changeOrigin\": \"AUTO_SAVE\",\n  \"contentId\": \"622f285f7952527f485bc138\",\n  \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n  \"status\": \"UNPUBLISHED\",\n  \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hasUnpublishedChanges\": true,\n  \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n  \"seoData\": {\"tags\": []},\n  \"seoShowInSearch\": true,\n  \"seoShowSnippetInSearch\": true,\n  \"slugs\": [],\n  \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateDraftPostRequest",
        "rpcResponseName": "CreateDraftPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Tag",
      "methodName": "CreateTag",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["label"],
      "params":       [
                {
          "in": "BODY",
          "name": "label",
          "type": "string",
          "doc": " Tag label. The label for each tag in a blog must be unique.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "slug",
          "type": "string",
          "doc": " Preferred tag slug. For example, `'tag-slug'`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateTag",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_CreateTagResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new tag with the provided label if a tag with the same label doesn't already exist.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/tags",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST \\\n  'http://www.wixapis.com/blog/v3/tags/' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'\n  -d '{\n       \"label\": \"vacation\",\n       \"language\": \"en\"\n     }'"],
          "response": ["{\"tag\": {\n  \"id\": \"0c20a033-bcdb-42af-a793-84a83f4a5bf1\",\n  \"label\": \"vacation\",\n  \"slug\": \"vacation\",\n  \"createdDate\": \"2021-09-08T11:11:15.949Z\",\n  \"updatedDate\": \"2021-09-08T11:11:15.949Z\",\n  \"publicationCount\": 0,\n  \"postCount\": 0,\n  \"language\": \"en\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateTagRequest",
        "rpcResponseName": "CreateTagResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Category",
      "methodName": "DeleteCategory",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["categoryId"],
      "params": [      {
        "in": "PATH",
        "name": "categoryId",
        "type": "string",
        "doc": " Category ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DeleteCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a category.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/blog/v3/categories/{categoryId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --location --request DELETE 'http://www.wixapis.com/blog/v3/categories/5f2bcaa0879ad500173577f3' \\\n    -H 'Content-Type: application/json'  \\\n    -H 'Authorization: <AUTH>' \\\n}'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCategoryRequest",
        "rpcResponseName": "DeleteCategoryResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Draft Post",
      "methodName": "DeleteDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params":       [
                {
          "in": "PATH",
          "name": "draftPostId",
          "type": "string",
          "doc": " Draft post ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "permanent",
          "type": "boolean",
          "doc": " Whether to bypass the trash bin and delete the post permanently.\n\n Default: `false`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DeleteDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Moves a draft post with the provided ID to the trash bin.\n A published posts can also be deleted by its provided [post `ID`](https://dev.wix.com/api/rest/wix-blog/blog/posts).\n\n The optional `permanent` field enables you to delete a post permanently, bypassing the trash bin. When a draft post is deleted this way, it can't be restored.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/{draftPostId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/blog/v3/draft-posts/0eed85df-8332-4d7b-9184-164a482f0b41' \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: <AUTH>'\n\n{\n}\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteDraftPostRequest",
        "rpcResponseName": "DeleteDraftPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Tag",
      "methodName": "DeleteTag",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["tagId"],
      "params": [      {
        "in": "PATH",
        "name": "tagId",
        "type": "string",
        "doc": " Tag ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteTag",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_DeleteTagResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a tag. Deleting a tag removes that tag from all blog posts that contain it.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/blog/v3/tags/{tagId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE \\\n  'http://www.wixapis.com/blog/v3/tags/0c20a033-bcdb-42af-a793-84a83f4a5bf1' \\\n  -H 'Authorization: <AUTH>'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTagRequest",
        "rpcResponseName": "DeleteTagResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Category",
      "methodName": "GetCategory",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["categoryId"],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a category with the provided ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/categories/{categoryId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/categories/5f2bcaa0879ad500173577f3?fieldsets=URL' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"category\": {\n  \"id\": \"5f2bcaa0879ad500173577f3\",\n  \"label\": \"Summer\",\n  \"url\":   {\n    \"base\": \"https://some-user.wixsite.com/my-site\",\n    \"path\": \"/blog/categories/summer\"\n  },\n  \"postCount\": 17,\n  \"description\": \"Posts about my summer\",\n  \"title\": \"Summer\",\n  \"displayPosition\": 1,\n  \"language\": \"en\",\n  \"slug\": \"summer-slug\",\n  \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCategoryRequest",
        "rpcResponseName": "GetCategoryResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Category By Slug",
      "methodName": "GetCategoryBySlug",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["slug"],
      "params":       [
                {
          "in": "PATH",
          "name": "slug",
          "type": "string",
          "doc": " Slug of the category to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n\n This parameter will be removed on June 30, 2023.\n List of category fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetCategoryBySlug",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetCategoryBySlugResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a category with the provided slug.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/categories/slugs/{slug=**}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/categories/slugs/summer-slug' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"category\": {\n  \"id\": \"5f2bcaa0879ad500173577f3\",\n  \"label\": \"Summer\",\n  \"url\":   {\n    \"base\": \"https://some-user.wixsite.com/my-site\",\n    \"path\": \"/blog/categories/summer\"\n  },\n  \"postCount\": 17,\n  \"description\": \"Posts about my summer\",\n  \"title\": \"Summer\",\n  \"displayPosition\": 1,\n  \"language\": \"en\",\n  \"slug\": \"summer-slug\",\n  \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCategoryBySlugRequest",
        "rpcResponseName": "GetCategoryBySlugResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Deleted Draft Post",
      "methodName": "GetDeletedDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params": [      {
        "in": "PATH",
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetDeletedDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDeletedDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a deleted draft post from the trash bin by the provided ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/trash-bin/{draftPostId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/draft-posts/trash-bin/448d1238-0072-4458-a280-bf81c2dd8af1' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"draftPost\": {\n  \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n  \"title\": \"Places to visit in europe\",\n  \"featured\": false,\n  \"categoryIds\": [],\n  \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hashtags\": [],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 0,\n  \"tagIds\": [],\n  \"relatedPostIds\": [],\n  \"pricingPlanIds\": [],\n  \"language\": \"en\",\n  \"changeOrigin\": \"AUTO_SAVE\",\n  \"contentId\": \"622f285f7952527f485bc138\",\n  \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n  \"status\": \"DELETED\",\n  \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hasUnpublishedChanges\": true,\n  \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n  \"seoData\": {\"tags\": []},\n  \"seoShowInSearch\": true,\n  \"seoShowSnippetInSearch\": true,\n  \"slugs\": [],\n  \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDeletedDraftPostRequest",
        "rpcResponseName": "GetDeletedDraftPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Draft Post",
      "methodName": "GetDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params":       [
                {
          "in": "PATH",
          "name": "draftPostId",
          "type": "string",
          "doc": " Draft post ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a draft post by the provided ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/{draftPostId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/draft-posts/448d1238-0072-4458-a280-bf81c2dd8af1' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"draftPost\": {\n  \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n  \"title\": \"Places to visit in europe\",\n  \"featured\": false,\n  \"categoryIds\": [],\n  \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hashtags\": [],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 0,\n  \"tagIds\": [],\n  \"relatedPostIds\": [],\n  \"pricingPlanIds\": [],\n  \"language\": \"en\",\n  \"changeOrigin\": \"AUTO_SAVE\",\n  \"contentId\": \"622f285f7952527f485bc138\",\n  \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n  \"status\": \"UNPUBLISHED\",\n  \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hasUnpublishedChanges\": true,\n  \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n  \"seoData\": {\"tags\": []},\n  \"seoShowInSearch\": true,\n  \"seoShowSnippetInSearch\": true,\n  \"slugs\": [],\n  \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDraftPostRequest",
        "rpcResponseName": "GetDraftPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Post",
      "methodName": "GetPost",
      "serviceName": "PostService",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["postId"],
      "params":       [
                {
          "in": "PATH",
          "name": "postId",
          "type": "string",
          "doc": " Post ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a post by the specified ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/posts/{postId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/posts/894a58a2-dc75-422d-9ca6-00a489750dfd' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"post\": {\n  \"id\": \"894a58a2-dc75-422d-9ca6-00a489750dfd\",\n  \"title\": \"My vacation\",\n  \"slug\": \"my-vacation\",\n  \"url\":   {\n    \"base\": \"https://some-user.wixsite.com/my-site\",\n    \"path\": \"/blog/posts/my-vacation\"\n  },\n  \"firstPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n  \"lastPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n  \"featured\": true,\n  \"pinned\": false,\n  \"categoryIds\":   [\n    \"5f2bcaa0879ad500173577f3\",\n    \"5f2bcaa5940a02003488af3e\"\n  ],\n  \"memberId\": \"5ee77ebfffeab500188f496b\",\n  \"hashtags\":   [\n    \"sea\",\n    \"sun\"\n  ],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 1,\n  \"tagIds\":   [\n    \"5f2bcaa0879a4400173577f1\",\n    \"5f2bc445940a02003488af3a\"\n  ],\n  \"pricingPlanIds\": [\"5f2bc445940a02003498af3e\"],\n  \"relatedPostIds\":   [\n    \"111a58a2-dc75-422d-0015-00a489750dfd\",\n    \"211a58a2-dc75-422d-1512-00a489750dfd\"\n  ],\n  \"language\": \"en\",\n  \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetPostRequest",
        "rpcResponseName": "GetPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Post By Slug",
      "methodName": "GetPostBySlug",
      "serviceName": "PostService",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["slug"],
      "params":       [
                {
          "in": "PATH",
          "name": "slug",
          "type": "string",
          "doc": " Slug of the post to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetPostBySlug",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetPostBySlugResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a post with the provided slug.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/posts/slugs/{slug=**}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/posts/slugs/my-vacation' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"post\": {\n  \"id\": \"894a58a2-dc75-422d-9ca6-00a489750dfd\",\n  \"title\": \"My vacation\",\n  \"slug\": \"my-vacation\",\n  \"url\":   {\n    \"base\": \"https://some-user.wixsite.com/my-site\",\n    \"path\": \"/blog/posts/my-vacation\"\n  },\n  \"firstPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n  \"lastPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n  \"featured\": true,\n  \"pinned\": false,\n  \"categoryIds\":   [\n    \"5f2bcaa0879ad500173577f3\",\n    \"5f2bcaa5940a02003488af3e\"\n  ],\n  \"memberId\": \"5ee77ebfffeab500188f496b\",\n  \"hashtags\":   [\n    \"sea\",\n    \"sun\"\n  ],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 1,\n  \"tagIds\":   [\n    \"5f2bcaa0879a4400173577f1\",\n    \"5f2bc445940a02003488af3a\"\n  ],\n  \"pricingPlanIds\": [\"5f2bc445940a02003498af3e\"],\n  \"relatedPostIds\":   [\n    \"111a58a2-dc75-422d-0015-00a489750dfd\",\n    \"211a58a2-dc75-422d-1512-00a489750dfd\"\n  ],\n  \"language\": \"en\",\n  \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetPostBySlugRequest",
        "rpcResponseName": "GetPostBySlugResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Post Metrics",
      "methodName": "GetPostMetrics",
      "serviceName": "PostService",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["postId"],
      "params": [      {
        "in": "PATH",
        "name": "postId",
        "type": "string",
        "doc": " Post ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetPostMetrics",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetPostMetricsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a specified post's metrics.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/posts/{postId}/metrics",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/posts/894a58a2-dc75-422d-9ca6-00a489750dfd/metrics' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"metrics\": {\n  \"comments\": 5,\n  \"likes\": 8,\n  \"views\": 31\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetPostMetricsRequest",
        "rpcResponseName": "GetPostMetricsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Tag",
      "methodName": "GetTag",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["tagId"],
      "params":       [
                {
          "in": "PATH",
          "name": "tagId",
          "type": "string",
          "doc": " Tag ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTag",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_GetTagResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a tag with the provided ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/tags/{tagId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/tags/6d72a3bb-053c-4de5-a897-5ef6be30b1b0' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"tag\": {\n  \"id\": \"6d72a3bb-053c-4de5-a897-5ef6be30b1b0\",\n  \"label\": \"vacation\",\n  \"slug\": \"vacation\",\n  \"createdDate\": \"2021-08-13T08:58:20.145Z\",\n  \"updatedDate\": \"2021-08-13T08:58:20.145Z\",\n  \"publicationCount\": 2,\n  \"postCount\": 1,\n  \"language\": \"en\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTagRequest",
        "rpcResponseName": "GetTagResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Tag By Label",
      "methodName": "GetTagByLabel",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["label"],
      "params":       [
                {
          "in": "PATH",
          "name": "label",
          "type": "string",
          "doc": " Tag label.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, tags in all languages are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTagByLabel",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_GetTagByLabelResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a tag by the provided label.\n\n Sub-labels can also be specified using a `/`. For example, you can have `'dessert/icecream'` and `'dessert/pie'` as two different tag labels.\n\n > **Note**: The full URL path following `labels/` is counted as 1 label. Adding a `/` to a label does _not_ create multiple labels. This means that `'dessert/icecream'` is a sinlge label.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/tags/labels/{label=**}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/tags/labels/vacation' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"tag\": {\n  \"id\": \"6d72a3bb-053c-4de5-a897-5ef6be30b1b0\",\n  \"label\": \"vacation\",\n  \"slug\": \"vacation\",\n  \"createdDate\": \"2021-08-13T08:58:20.145Z\",\n  \"updatedDate\": \"2021-08-13T08:58:20.145Z\",\n  \"publicationCount\": 2,\n  \"postCount\": 1,\n  \"language\": \"en\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTagByLabelRequest",
        "rpcResponseName": "GetTagByLabelResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Tag By Slug",
      "methodName": "GetTagBySlug",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["slug"],
      "params":       [
                {
          "in": "PATH",
          "name": "slug",
          "type": "string",
          "doc": " Slug of the tag to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTagBySlug",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_GetTagBySlugResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a tag with the provided slug.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/tags/slugs/{slug}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/tags/slugs/vacation' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"tag\": {\n  \"id\": \"6d72a3bb-053c-4de5-a897-5ef6be30b1b0\",\n  \"label\": \"vacation\",\n  \"slug\": \"vacation\",\n  \"createdDate\": \"2021-08-13T08:58:20.145Z\",\n  \"updatedDate\": \"2021-08-13T08:58:20.145Z\",\n  \"publicationCount\": 2,\n  \"postCount\": 1,\n  \"language\": \"en\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTagBySlugRequest",
        "rpcResponseName": "GetTagBySlugResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Total Posts",
      "methodName": "GetTotalPosts",
      "serviceName": "BlogStatsService",
      "tag": "Post Stats",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "QUERY",
        "name": "language",
        "type": "string",
        "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to receive the total amount of posts in that specified language. \n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "GetTotalPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_GetTotalPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets the total amount of published posts of the blog.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v2/stats/posts/total",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl 'www.wixapis.com/blog/v2/stats/posts/total' \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: <AUTH>'"],
          "response": ["{\"total\": 9} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTotalPostsRequest",
        "rpcResponseName": "GetTotalPostsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Categories",
      "methodName": "ListCategories",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "paging.offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n\n Default: `0`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to return. \n\n\n Default:`50`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ListCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 categories per request.\n\n List Categories runs with these defaults, which you can override:\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n List Categories is sorted by `displayPosition` in descending order. This cannot be overridden.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/categories",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/categories?fieldsets=URL' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"categories\": [  {\n    \"id\": \"5f2bcaa0879ad500173577f3\",\n    \"label\": \"Summer\",\n    \"url\":     {\n      \"base\": \"https://some.wixsite.com/something-to-prod/blog\",\n      \"path\": \"/blog/categories/summer\"\n    },\n    \"postCount\": 17,\n    \"description\": \"Posts about my summer\",\n    \"title\": \"Summer\",\n    \"displayPosition\": 1,\n    \"slug\": \"summer-slug\",\n    \"language\": \"en\",\n    \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListCategoriesRequest",
        "rpcResponseName": "ListCategoriesResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Deleted Draft Posts",
      "methodName": "ListDeletedDraftPosts",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, deleted draft posts in all languages are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostsSort",
          "doc": " Sorting options.\n\n - `EDITING_DATE_ASC`: `editedDate` in ascending order.\n - `EDITING_DATE_DESC`: `editedDate` in descending order.\n\n Default: `EDITING_DATE_DESCENDING`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n\n Default: `0`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to return. \n\n\n Default:`50`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListDeletedDraftPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ListDeletedDraftPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 deleted draft posts.\n\n List Draft Posts runs with these defaults, which you can override:\n - `editedDate` is sorted in descending order. In this case,`editedDate` implies the date the post was deleted.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/trash-bin",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/draft-posts/trash-bin' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"draftPosts\":   [\n        {\n      \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n      \"title\": \"Places to visit in europe\",\n      \"featured\": false,\n      \"categoryIds\": [],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 0,\n      \"tagIds\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\",\n      \"changeOrigin\": \"AUTO_SAVE\",\n      \"contentId\": \"622f285f7952527f485bc138\",\n      \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n      \"status\": \"DELETED\",\n      \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hasUnpublishedChanges\": true,\n      \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n      \"seoData\": {\"tags\": []},\n      \"seoShowInSearch\": true,\n      \"seoShowSnippetInSearch\": true,\n      \"slugs\": [],\n      \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n    },\n        {\n      \"id\": \"0bba372c-7f15-4663-84d2-0fa32f1e1226\",\n      \"title\": \"Best restaurants in Rome\",\n      \"featured\": false,\n      \"categoryIds\": [],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 1,\n      \"tagIds\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\",\n      \"changeOrigin\": \"AUTO_SAVE\",\n      \"contentId\": \"621cb0dc226b6a33a2877607\",\n      \"editingSessionId\": \"56106223-7307-471f-b280-cec482185962\",\n      \"richContent\":       {\n        \"nodes\":         [\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"foo\",\n            \"nodes\": [            {\n              \"type\": \"TEXT\",\n              \"id\": \"\",\n              \"nodes\": [],\n              \"textData\":               {\n                \"text\": \"Introduction\",\n                \"decorations\": []\n              }\n            }],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          },\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"f420g\",\n            \"nodes\": [],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          },\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"bcbpt\",\n            \"nodes\": [],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          }\n        ],\n        \"metadata\":         {\n          \"version\": 1,\n          \"createdTimestamp\": \"2022-03-14T11:42:11.250Z\",\n          \"updatedTimestamp\": \"2022-03-14T11:42:11.250Z\",\n          \"id\": \"27c0e783-d64e-4c6b-a6a2-d1f5163509bb\"\n        },\n        \"documentStyle\": {}\n      },\n      \"status\": \"DELETED\",\n      \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hasUnpublishedChanges\": true,\n      \"editedDate\": \"2022-02-28T11:24:12.116Z\",\n      \"content\":       {\n        \"blocks\":         [\n                    {\n            \"key\": \"foo\",\n            \"text\": \"new post\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          },\n                    {\n            \"key\": \"f420g\",\n            \"text\": \"\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          },\n                    {\n            \"key\": \"bcbpt\",\n            \"text\": \"\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          }\n        ],\n        \"entityMap\": {},\n        \"documentStyle\": {},\n        \"VERSION\": \"8.69.22\",\n        \"ID\": \"27c0e783-d64e-4c6b-a6a2-d1f5163509bb\"\n      },\n      \"seoData\": {\"tags\": []},\n      \"seoShowInSearch\": true,\n      \"seoShowSnippetInSearch\": true,\n      \"paidContentParagraph\": 1,\n      \"slugs\": [],\n      \"createdDate\": \"2022-02-28T11:16:01.569Z\"\n    }\n  ],\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListDeletedDraftPostsRequest",
        "rpcResponseName": "ListDeletedDraftPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Draft Posts",
      "methodName": "ListDraftPosts",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
          "doc": " Draft post status filter.\n\n If omitted, draft posts with all statuses are returned.\n`IN_MODERATION` is deprecated, use `IN_REVIEW` instead.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, draft posts in all languages are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostsSort",
          "doc": " Sort options.\n\n - `EDITING_DATE_ASC`: `editedDate` in ascending order.\n - `EDITING_DATE_DESC`: `editedDate` in descending order.\n\n Default: `EDITING_DATE_DESCENDING`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n\n Default: `0`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to return. \n\n\n Default:`50`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListDraftPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ListDraftPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 draft posts per request.\n\n List Draft Posts runs with these defaults, which you can override:\n - `editedDate` is sorted in descending order.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/draft-posts",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/draft-posts' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"draftPosts\":   [\n        {\n      \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n      \"title\": \"Places to visit in europe\",\n      \"featured\": false,\n      \"categoryIds\": [],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 0,\n      \"tagIds\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\",\n      \"changeOrigin\": \"AUTO_SAVE\",\n      \"contentId\": \"622f285f7952527f485bc138\",\n      \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n      \"status\": \"UNPUBLISHED\",\n      \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hasUnpublishedChanges\": true,\n      \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n      \"seoData\": {\"tags\": []},\n      \"seoShowInSearch\": true,\n      \"seoShowSnippetInSearch\": true,\n      \"slugs\": [],\n      \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n    },\n        {\n      \"id\": \"0bba372c-7f15-4663-84d2-0fa32f1e1226\",\n      \"title\": \"Best restaurants in Rome\",\n      \"featured\": false,\n      \"categoryIds\": [],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 1,\n      \"tagIds\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\",\n      \"changeOrigin\": \"AUTO_SAVE\",\n      \"contentId\": \"621cb0dc226b6a33a2877607\",\n      \"editingSessionId\": \"56106223-7307-471f-b280-cec482185962\",\n      \"richContent\":       {\n        \"nodes\":         [\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"foo\",\n            \"nodes\": [            {\n              \"type\": \"TEXT\",\n              \"id\": \"\",\n              \"nodes\": [],\n              \"textData\":               {\n                \"text\": \"Introduction\",\n                \"decorations\": []\n              }\n            }],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          },\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"f420g\",\n            \"nodes\": [],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          },\n                    {\n            \"type\": \"PARAGRAPH\",\n            \"id\": \"bcbpt\",\n            \"nodes\": [],\n            \"paragraphData\":             {\n              \"textStyle\": {\"textAlignment\": \"AUTO\"},\n              \"indentation\": 0\n            }\n          }\n        ],\n        \"metadata\":         {\n          \"version\": 1,\n          \"createdTimestamp\": \"2022-03-14T11:42:11.250Z\",\n          \"updatedTimestamp\": \"2022-03-14T11:42:11.250Z\",\n          \"id\": \"27c0e783-d64e-4c6b-a6a2-d1f5163509bb\"\n        },\n        \"documentStyle\": {}\n      },\n      \"status\": \"UNPUBLISHED\",\n      \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hasUnpublishedChanges\": true,\n      \"editedDate\": \"2022-02-28T11:24:12.116Z\",\n      \"content\":       {\n        \"blocks\":         [\n                    {\n            \"key\": \"foo\",\n            \"text\": \"new post\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          },\n                    {\n            \"key\": \"f420g\",\n            \"text\": \"\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          },\n                    {\n            \"key\": \"bcbpt\",\n            \"text\": \"\",\n            \"type\": \"unstyled\",\n            \"depth\": 0,\n            \"inlineStyleRanges\": [],\n            \"entityRanges\": [],\n            \"data\": {}\n          }\n        ],\n        \"entityMap\": {},\n        \"documentStyle\": {},\n        \"VERSION\": \"8.69.22\",\n        \"ID\": \"27c0e783-d64e-4c6b-a6a2-d1f5163509bb\"\n      },\n      \"seoData\": {\"tags\": []},\n      \"seoShowInSearch\": true,\n      \"seoShowSnippetInSearch\": true,\n      \"paidContentParagraph\": 1,\n      \"slugs\": [],\n      \"createdDate\": \"2022-02-28T11:16:01.569Z\"\n    }\n  ],\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListDraftPostsRequest",
        "rpcResponseName": "ListDraftPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Posts",
      "methodName": "ListPosts",
      "serviceName": "PostService",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "featured",
          "type": "boolean",
          "doc": " Whether to return only featured posts.\n\n Default: `false`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "hashtags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Hashtag filter.\n\n Pass an array of hashtags to return only posts containing any of the provided hashtags.\n If omitted, all posts with or without hashtags are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category filter.\n\n Pass an array of category IDs to return only posts with any of the provided categories.\n If omitted, all posts with or without associated categories are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tagIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tag filter.\n\n Pass an array of tag IDs to return only posts with any of the provided tags.\n If omitted, all posts with or without tags are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetPostsSort",
          "doc": " Sorting options.\n\n - `FEED`: Ordered by `firstPublishedDate` in descending order with pinned posts first.\n - `VIEW_COUNT`: Ordered by total number of views in descending order.\n - `LIKE_COUNT`: Ordered by total number of likes in descending order.\n - `PUBLISHED_DATE_ASC`: Ordered by `firstPublishedDate` in ascending order.\n - `PUBLISHED_DATE_DESC`: Ordered by `firstPublishedDate` in descending order.\n - `TITLE_ASC`: Ordered by `title` in ascening order.\n - `TITLE_DESC`: Ordered by `title` in descending order.\n - `RATING`: reserved for internal use.\n\n Default: `FEED`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n\n Default: `0`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to return. \n\n\n Default:`50`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to only receive posts that are in that language.\n If omitted, posts in all languages are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type": "string",
          "doc": " Post owner's member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ListPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 published posts per request.\n\n List Posts runs with these defaults, which you can override:\n - `firstPublishedDate` is sorted in descending order, with pinned posts first.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v3/posts",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/posts?featured=false&categoryIds=a68da372-6bfa-412c-ad29-a3f1000ea3f2&tagIds=edd159e5-603f-4826-a668-8d8cc037ab6d' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"posts\":   [\n        {\n      \"id\": \"c9402bb3-2568-4f4d-9d2c-9b0aabf7f6d2\",\n      \"title\": \"Best peppers for peppercorn sauce\",\n      \"excerpt\": \"Let's talk about choosing best peppers for amazing peppercorn sauce\",\n      \"firstPublishedDate\": \"2021-03-18T11:45:14.164Z\",\n      \"lastPublishedDate\": \"2021-03-18T11:45:14.164Z\",\n      \"slug\": \"best-peppers-for-peppercorn-sauce\",\n      \"featured\": false,\n      \"pinned\": false,\n      \"categoryIds\": [\"a68da372-6bfa-412c-ad29-a3f1000ea3f2\"],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 1,\n      \"tagIds\":       [\n        \"edd159e5-603f-4826-a668-8d8cc037ab6d\",\n        \"f97a485e-e4ae-4905-86f7-aaa9998672fb\",\n        \"a337e5fb-d9b6-46af-ab34-d2cf71f7aa2b\"\n      ],\n      \"pricingPlans\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\"\n    },\n        {\n      \"id\": \"230ef0e7-7951-4229-b3fb-fdadc237a5f2\",\n      \"title\": \"Popcorn chicken rub\",\n      \"excerpt\": \"This is a recipe how to create popcorn rub for chicken.\",\n      \"firstPublishedDate\": \"2021-03-18T11:43:29.574Z\",\n      \"lastPublishedDate\": \"2021-03-18T11:43:29.574Z\",\n      \"slug\": \"popcorn-chicken-rub\",\n      \"featured\": false,\n      \"pinned\": false,\n      \"categoryIds\": [\"a68da372-6bfa-412c-ad29-a3f1000ea3f2\"],\n      \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n      \"hashtags\": [],\n      \"commentingEnabled\": true,\n      \"minutesToRead\": 1,\n      \"tagIds\":       [\n        \"a337e5fb-d9b6-46af-ab34-d2cf71f7aa2b\",\n        \"edd159e5-603f-4826-a668-8d8cc037ab6d\",\n        \"f97a485e-e4ae-4905-86f7-aaa9998672fb\"\n      ],\n      \"pricingPlans\": [],\n      \"relatedPostIds\": [],\n      \"pricingPlanIds\": [],\n      \"language\": \"en\"\n    }\n  ],\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListPostsRequest",
        "rpcResponseName": "ListPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Publish Draft Post",
      "methodName": "PublishDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params": [      {
        "in": "PATH",
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "PublishDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PublishDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Publishes a specified draft post by ID. This creates a new [post](https://dev.wix.com/api/rest/wix-blog/blog/posts) entity with the data from the draft post.\n If the specified draft post was already published, the published post will be updated with the latest values\n from the draft post entity.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/{draftPostId}/publish",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST \\\n 'https://www.wixapis.com/blog/v3/draft-posts/894a58a2-dc75-422d-9ca6-00a489750dfd/publish' \\\n -H 'Content-Type: application/json' \\\n -H 'Authorization: <AUTH>'"],
          "response": ["{\"postId\": \"894a58a2-dc75-422d-9ca6-00a489750dfd\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "PublishDraftPostRequest",
        "rpcResponseName": "PublishDraftPostResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Categories",
      "methodName": "QueryCategories",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 3, 2023.\n\n Sorting options.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_QueryCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 categories, given the provided paging, filtering, and sorting.\n Query Categories runs with these defaults, which you can override.\n - `displayPosition` is sorted in `DESC` order.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n For field support for filters and sorting, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/categories/filter-and-sort).\n\n To learn about working with _Query_ endpoints, see\n [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and\n [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/categories/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/categories/query' \\\n   --data-binary '{\n                    \"fieldsets\": [\"URL\"],\n                    \"filter\": {\n                      \"title\": {\n                        \"$startsWith\": \"Summer\"\n                      }\n                    }\n                  }' \\\n   }\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"categories\": [  {\n    \"id\": \"5f2bcaa0879ad500173577f3\",\n    \"label\": \"Summer\",\n    \"postCount\": 17,\n    \"url\":     {\n      \"base\": \"https://some.wixsite.com/something-to-prod/blog\",\n      \"path\": \"/blog/categories/summer\"\n    },\n    \"description\": \"Posts about my summer\",\n    \"title\": \"Summer\",\n    \"displayPosition\": 1,\n    \"language\": \"en\",\n    \"slug\": \"summer-slug\",\n    \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryCategoriesRequest",
        "rpcResponseName": "QueryCategoriesResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Draft Posts",
      "methodName": "QueryDraftPosts",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryDraftPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_QueryDraftPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 draft posts, given the provided paging, filtering, and sorting.\n\n Query Draft Posts runs with these defaults, which you can override:\n - `editedDate` is sorted in `DESC` order.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n For field support for filters and sorting, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/draft-posts/supported-filters-and-sorting).\n\n To learn about working with _Query_ endpoints, see\n [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and\n [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/draft-posts/query' \\\n   --data-binary '{\n                    \"filter\": {\n                      \"title\": {\n                        \"$startsWith\": \"Places to visit\"\n                      }\n                    }\n                  }' \\\n   }\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"draftPosts\": [  {\n    \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n    \"title\": \"Places to visit in europe\",\n    \"featured\": false,\n    \"categoryIds\": [],\n    \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n    \"hashtags\": [],\n    \"commentingEnabled\": true,\n    \"minutesToRead\": 0,\n    \"tagIds\": [],\n    \"relatedPostIds\": [],\n    \"pricingPlanIds\": [],\n    \"language\": \"en\",\n    \"changeOrigin\": \"AUTO_SAVE\",\n    \"contentId\": \"622f285f7952527f485bc138\",\n    \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n    \"status\": \"UNPUBLISHED\",\n    \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n    \"hasUnpublishedChanges\": true,\n    \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n    \"seoData\": {\"tags\": []},\n    \"seoShowInSearch\": true,\n    \"seoShowSnippetInSearch\": true,\n    \"slugs\": [],\n    \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryDraftPostsRequest",
        "rpcResponseName": "QueryDraftPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Post Count (Additional Binding 1)",
      "methodName": "QueryPostCountStats",
      "serviceName": "BlogStatsService",
      "tag": "Post Stats",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "rangeStart",
          "type": "string",
          "doc": " Start of time range to return, in ISO 8601 date and time format.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "rangeEnd",
          "type": "string",
          "doc": " __Deprecated.__ Use `months` instead.\n This property will be removed on June 30, 2023.\n\n Non-inclusive end of time range to return, in ISO 8601 date and time format.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "order",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsRequest_Order",
          "doc": " Order of returned results.\n \n - `OLDEST`: posts by date in ascending order.\n - `NEWEST`: posts by date in descending order.\n\n Default: `OLDEST`\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "months",
          "type": "integer",
          "doc": " Number of months to include in response.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to only receive the period post count for that specified language. \n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "timeZone",
          "type": "string",
          "doc": " Time zone to use when calculating the start of the month. \n\n [UTC timezone offset](https://en.wikipedia.org/wiki/List_of_UTC_offsets) format. For example, New York time zone is `-05`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryPostCountStats",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsResponse"]
        },
        "doc": " Get Blog Post Count Stats response\n"
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the number of published posts per month within a specified time range. \n\n The time range is set using the `rangeStart` and `months` properties. \n The time range always starts on the 1st day of the month set in `rangeStart` and  \n includes the number of `months` following `rangeStart`. \n For example, if `rangeStart` is set to `'2022-03-13'` and `months` is set to `4`, \n the time range will be from `'2022-03-01'` until `'2022-06-30'`. The time range always ends on the last day of the month. \n > Note: If there are no published posts in a month within the time range, that month is not included in the response. For example, let's say a blog has `0` posts dated in February 2022. If `rangeStart` is set to `'2022-01-01'` and `months` is set to `3`, the response includes `postCount` values for January and March, but not February.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/blog/v2/stats/post/count",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --request POST 'http://social-blog.wix.com/_api/communities-blog-node-api/v2/stats/posts/count' \\\n    --header 'Authorization: <AUTH> \\\n    --header 'Content-Type: application/json' \\\n    --data-raw '{\n                  \"rangeStart\": \"2018-11-01T00:00:00Z\",\n                  \"order\": \"OLDEST\",\n                  \"months\": 3,\n                  \"language\": \"en\"\n                }'"],
          "response": ["{\"stats\": [\n    {\n    \"periodStart\": \"2018-11-01T00:00:00.000Z\",\n    \"postCount\": 1\n  },\n    {\n    \"periodStart\": \"2018-12-01T00:00:00.000Z\",\n    \"postCount\": 2\n  },\n    {\n    \"periodStart\": \"2019-01-01T00:00:00.000Z\",\n    \"postCount\": 2\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryPostCountStatsRequest",
        "rpcResponseName": "QueryPostCountStatsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Posts",
      "methodName": "QueryPosts",
      "serviceName": "PostService",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/filter-and-sort).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryPosts",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_QueryPostsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 posts, given the provided paging, filtering, and sorting.\n\n Query Posts runs with these defaults, which you can override:\n - `firstPublishedDate` is sorted in descending order, with pinned posts first.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n For field support for filters and sorting, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/posts/filter-and-sort).\n\n To learn about working with _Query_ endpoints, see\n [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and\n [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n For a detailed list of supported filters and sortable fields, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/filter-and-sort).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/posts/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v3/posts/query' \\\n   --data-binary '{\n                    \"fieldsets\": [\"URL\", \"METRICS\", \"CONTENT_TEXT\"],\n                    \"filter\": {\n                      \"title\": {\n                        \"$startsWith\": \"My vacation\"\n                      }\n                    }\n                  }' \\\n   }\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"posts\": [  {\n    \"id\": \"894a58a2-dc75-422d-9ca6-00a489750dfd\",\n    \"title\": \"My vacation\",\n    \"slug\": \"my-vacation\",\n    \"firstPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n    \"lastPublishedDate\": \"2020-08-06T09:18:07.839Z\",\n    \"url\":     {\n      \"base\": \"https://some-user.wixsite.com/my-site\",\n      \"path\": \"/blog/posts/my-vacation\"\n    },\n    \"featured\": true,\n    \"pinned\": false,\n    \"categoryIds\":     [\n      \"5f2bcaa0879ad500173577f3\",\n      \"5f2bcaa5940a02003488af3e\"\n    ],\n    \"memberId\": \"5ee77ebfffeab500188f496b\",\n    \"hashtags\":     [\n      \"sea\",\n      \"sun\"\n    ],\n    \"commentingEnabled\": true,\n    \"minutesToRead\": 1,\n    \"tagIds\":     [\n      \"5f2bcaa0879a4400173577f1\",\n      \"5f2bc445940a02003488af3a\"\n    ],\n    \"pricingPlanIds\": [\"5f2bc445940a02003498af3e\"],\n    \"relatedPostIds\":     [\n      \"111a58a2-dc75-422d-0015-00a489750dfd\",\n      \"211a58a2-dc75-422d-1512-00a489750dfd\"\n    ],\n    \"language\": \"en\",\n    \"translationId\": \"111a58a2-dc75-422d-9ca6-00a489750dfd\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryPostsRequest",
        "rpcResponseName": "QueryPostsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Tags",
      "methodName": "QueryTags",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n For a detailed list of supported filters, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_Paging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery",
          "doc": " Query options.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryTags",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryTagsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 500 tags, given the provided paging, filtering, and sorting.\n\n Query Posts runs wuth these defaults, which you can override:\n - `postCount` is sorted in `DESC` order.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n For field support for filters and sorting, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/tags/filter-and-sort).\n\n To learn about working with _Query_ endpoints, see\n [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and\n [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n For a detailed list of supported filters and sortable fields, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/filter-and-sort).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/tags/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v2/tags/query' \\\n   --data-binary '{\n                    \"filter\": {\n                      \"postCount\": {\n                        \"$gt\": 5\n                      }\n                    }\n                  }' \\\n   }\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"tags\": [  {\n    \"id\": \"43b7a30f-ca8a-4678-84c4-0bab5e3ebf63\",\n    \"label\": \"books\",\n    \"slug\": \"books\",\n    \"createdDate\": \"2021-06-21T08:27:09.764Z\",\n    \"updatedDate\": \"2021-06-21T08:27:09.764Z\",\n    \"publicationCount\": 0,\n    \"postCount\": 8,\n    \"language\": \"en\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryTagsRequest",
        "rpcResponseName": "QueryTagsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Tags (Additional Binding 1)",
      "methodName": "QueryTags",
      "serviceName": "TagService",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n For a detailed list of supported filters, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_Paging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery",
          "doc": " Query options.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryTags",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryTagsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 500 tags, given the provided paging, filtering, and sorting.\n\n Query Posts runs wuth these defaults, which you can override:\n - `postCount` is sorted in `DESC` order.\n - `paging.limit` is `50`.\n - `paging.offset` is `0`.\n\n For field support for filters and sorting, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/tags/filter-and-sort).\n\n To learn about working with _Query_ endpoints, see\n [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and\n [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n For a detailed list of supported filters and sortable fields, see\n [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/filter-and-sort).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v2/tags/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl \\\n  'http://www.wixapis.com/blog/v2/tags/query' \\\n   --data-binary '{\n                    \"filter\": {\n                      \"postCount\": {\n                        \"$gt\": 5\n                      }\n                    }\n                  }' \\\n   }\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"tags\": [  {\n    \"id\": \"43b7a30f-ca8a-4678-84c4-0bab5e3ebf63\",\n    \"label\": \"books\",\n    \"slug\": \"books\",\n    \"createdDate\": \"2021-06-21T08:27:09.764Z\",\n    \"updatedDate\": \"2021-06-21T08:27:09.764Z\",\n    \"publicationCount\": 0,\n    \"postCount\": 8,\n    \"language\": \"en\"\n  }],\n  \"metaData\":   {\n    \"count\": 1,\n    \"offset\": 0,\n    \"total\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryTagsRequest",
        "rpcResponseName": "QueryTagsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Remove From Trash Bin",
      "methodName": "RemoveFromTrashBin",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params": [      {
        "in": "PATH",
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "RemoveFromTrashBin",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_RemoveFromTrashBinResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Permanently deletes a draft post by the provided ID from the trash bin.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/trash-bin/{draftPostId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE \\\n  'http://www.wixapis.com/blog/v3/draft-posts/trash-bin/996cb649-d428-405d-b9ed-4facd46e2443' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveFromTrashBinRequest",
        "rpcResponseName": "RemoveFromTrashBinResponse"
      },
      "customLabels": []
    },
        {
      "name": "Restore From Trash Bin",
      "methodName": "RestoreFromTrashBin",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["draftPostId"],
      "params": [      {
        "in": "PATH",
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "RestoreFromTrashBin",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_RestoreFromTrashBinResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Restores a deleted draft post from the trash-bin by the provided ID.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/trash-bin/{draftPostId}/restore",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST \\\n  'http://www.wixapis.com/blog/v3/draft-posts/trash-bin/996cb649-d428-405d-b9ed-4facd46e2443/restore' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{\"draftPost\": {\n  \"id\": \"996cb649-d428-405d-b9ed-4facd46e2443\",\n  \"title\": \"Places to visit in europe\",\n  \"featured\": false,\n  \"categoryIds\": [],\n  \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a39\",\n  \"hashtags\": [],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 0,\n  \"tagIds\": [],\n  \"relatedPostIds\": [],\n  \"pricingPlanIds\": [],\n  \"language\": \"en\",\n  \"changeOrigin\": \"AUTO_SAVE\",\n  \"contentId\": \"622f285f7952527f485bc138\",\n  \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n  \"status\": \"UNPUBLISHED\",\n  \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hasUnpublishedChanges\": true,\n  \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n  \"seoData\": {\"tags\": []},\n  \"seoShowInSearch\": true,\n  \"seoShowSnippetInSearch\": true,\n  \"slugs\": [],\n  \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RestoreFromTrashBinRequest",
        "rpcResponseName": "RestoreFromTrashBinResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Category",
      "methodName": "UpdateCategory",
      "serviceName": "CategoryService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "category",
        "category.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "category.id",
          "type": "string",
          "doc": " Category ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Category info.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_UpdateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a category.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/blog/v3/categories/{category.id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --location --request PATCH 'http://www.wixapis.com/blog/v3/categories/5f2bcaa0879ad500173577f3' \\\n    -H 'Content-Type: application/json'  \\\n    -H 'Authorization: <AUTH>' \\\n    --data-raw '{\n      \"category\": {\n        \"description\": \"Posts about my summer and adventures\",\n      },\n      \"fieldMask\": \"category.description\"\n}'"],
          "response": ["{\"category\": {\n  \"id\": \"5f2bcaa0879ad500173577f3\",\n  \"label\": \"Summer\",\n  \"postCount\": 0,\n  \"description\": \"Posts about my summer and adventures\",\n  \"title\": \"Summer\",\n  \"coverMedia\":   {\n    \"enabled\": true,\n    \"displayed\": true,\n    \"custom\": true\n  },\n  \"displayPosition\": 1,\n  \"language\": \"en\",\n  \"slug\": \"summer-slug\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCategoryRequest",
        "rpcResponseName": "UpdateCategoryResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Draft Post",
      "methodName": "UpdateDraftPost",
      "serviceName": "DraftPostService",
      "tag": "Draft posts",
      "permissions": [      {
        "name": "Manage Blog",
        "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "draftPost",
        "draftPost.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "draftPost.id",
          "type": "string",
          "doc": " Draft post ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "draftPost",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Draft post to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "action",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdateAction_Action",
          "doc": " Action to perform on the post.\n\n - `UPDATE`: Update the draft post.\n - `UPDATE_PUBLISH`: Update and publish a draft post.\n - `UPDATE_SCHEDULE`: Update the draft post and schedule a publish date.\n - `UPDATE_REVERT_TO_DRAFT`: Update the post and revert it to draft.\n - `UPDATE_CANCEL_SCHEDULE`: Update the draft post and cancel the scheduled publish date.\n - `UPDATE_REJECT`: Update and reject draft post.\n - `UPDATE_PUBLICATION`: Update a post that's already been published. This creates and updates a draft version of the post. The original post is still published.\n\n Default: `UPDATE`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "scheduledPublishDate",
          "type": "string",
          "doc": " Post publish schedule date if `action` is set to `UPDATE_SCHEDULE`.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateDraftPost",
          "statusCode": "200",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a specified draft post.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/blog/v3/draft-posts/{draftPost.id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH \\\n  'http://www.wixapis.com/blog/v3/draft-posts/448d1238-0072-4458-a280-bf81c2dd8af1' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>'\n  -d '{\n        \"draftPost\": {\n          \"title\": \"Places to visit in europe\"\n        }\n      }'"],
          "response": ["{\"draftPost\": {\n  \"id\": \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n  \"title\": \"Places to visit in europe\",\n  \"featured\": false,\n  \"categoryIds\": [],\n  \"memberId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a39\",\n  \"hashtags\": [],\n  \"commentingEnabled\": true,\n  \"minutesToRead\": 0,\n  \"tagIds\": [],\n  \"relatedPostIds\": [],\n  \"pricingPlanIds\": [],\n  \"language\": \"en\",\n  \"changeOrigin\": \"AUTO_SAVE\",\n  \"contentId\": \"622f285f7952527f485bc138\",\n  \"editingSessionId\": \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n  \"status\": \"UNPUBLISHED\",\n  \"mostRecentContributorId\": \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n  \"hasUnpublishedChanges\": true,\n  \"editedDate\": \"2022-03-14T11:34:55.121Z\",\n  \"seoData\": {\"tags\": []},\n  \"seoShowInSearch\": true,\n  \"seoShowSnippetInSearch\": true,\n  \"slugs\": [],\n  \"createdDate\": \"2022-03-14T11:34:55.121Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateDraftPostRequest",
        "rpcResponseName": "UpdateDraftPostResponse"
      },
      "customLabels": []
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_PostCreatedDomainEvent",
      "name": "Post Created Webhook",
      "docs":       {
        "summary": " Triggered when a post is created.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.post",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.post_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_PostUpdatedDomainEvent",
      "name": "Post Updated Webhook",
      "docs":       {
        "summary": " Triggered when a post is updated.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.post",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.post_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_PostDeletedDomainEvent",
      "name": "Post Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a post is deleted.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.post",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.post_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_PostLikedDomainEvent",
      "name": "Post Liked Webhook",
      "docs":       {
        "summary": " Triggered when a post is liked.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.post",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.post_liked",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_PostUnlikedDomainEvent",
      "name": "Post Unliked Webhook",
      "docs":       {
        "summary": " Triggered when a post is unliked.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.post",
      "tag": "Posts",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.post_unliked",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostCreatedDomainEvent",
      "name": "Draft Post Created Webhook",
      "docs":       {
        "summary": " Triggered when a draft post is created.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/draft-post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.draft",
      "tag": "Draft posts",
      "permissions":       [
                {
          "name": "Manage Blog",
          "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
        },
                {
          "name": "Read Draft Blog Posts",
          "description": "Request permission to read private draft blog posts, tag and category data."
        }
      ],
      "customLabels": [],
      "eventType": "wix.blog.v3.draft_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdatedDomainEvent",
      "name": "Draft Post Updated Webhook",
      "docs":       {
        "summary": " Triggered when a draft post is updated.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/draft-post-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.draft",
      "tag": "Draft posts",
      "permissions":       [
                {
          "name": "Manage Blog",
          "description": "Request permission to read, create and modify Wix Blog data, including posts, tags and categories. This scope includes all blog permissions."
        },
                {
          "name": "Read Draft Blog Posts",
          "description": "Request permission to read private draft blog posts, tag and category data."
        }
      ],
      "customLabels": [],
      "eventType": "wix.blog.v3.draft_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryCreatedDomainEvent",
      "name": "Category Created Webhook",
      "docs":       {
        "summary": " Triggered when a category is created.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/category-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.category",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.category_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryUpdatedDomainEvent",
      "name": "Category Updated Webhook",
      "docs":       {
        "summary": " Triggered when a category is updated.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/category-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.category",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.category_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryDeletedDomainEvent",
      "name": "Category Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a category is deleted.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/v3/category-service.proto"
      },
      "topic": "domain_events_wix.blog.v3.category",
      "tag": "Categories",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.category_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_TagCreatedDomainEvent",
      "name": "Tag Created Webhook",
      "docs":       {
        "summary": " Triggered when a tag is created.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/tag.proto"
      },
      "topic": "domain_events_wix.blog.v3.tag",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.tag_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_TagDeletedDomainEvent",
      "name": "Tag Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a tag is deleted.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/tag.proto"
      },
      "topic": "domain_events_wix.blog.v3.tag",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.tag_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_npm_communities_platformized_blog_TagUpdatedDomainEvent",
      "name": "Tag Updated Webhook",
      "docs":       {
        "summary": " Triggered when a tag is updated.\n",
        "src": "https://github.com/wix-private/blog-node/tree/master/blog-node/packages/platformized-proto/com/wixpress/npm/communities/platformized/blog/tag.proto"
      },
      "topic": "domain_events_wix.blog.v3.tag",
      "tag": "Tags",
      "permissions": [      {
        "name": "Read Blog ",
        "description": "Request permission to read published blog posts, tag, and category data."
      }],
      "customLabels": [],
      "eventType": "wix.blog.v3.tag_updated",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostDeletedDomainEvent",
      "displayName": "Draft Post Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"26710dab-d343-4608-b002-6e1590945656\",\n  \"slug\" : \"deleted\",\n  \"id\" : \"c18f458a-d127-4d26-a8f0-97ed689b4ff7\",\n  \"entityFqdn\" : \"wix.blog.draft\",\n  \"eventTime\" : \"2021-03-02T08:40:50.352Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.draft`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DraftPost ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityDeletedEvent",
      "displayName": "Draft Post Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostCreatedDomainEvent",
      "displayName": "Draft Post Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"3bceaccb-ddfc-4078-84bf-50699b4d3f83\",\n  \"slug\" : \"created\",\n  \"id\" : \"1d034196-3347-4a66-988a-3f30d7e51b9d\",\n  \"createdEvent\" : {\n    \"entityAsJson\" : \"{\\\"id\\\":\\\"3bceaccb-ddfc-4078-84bf-50699b4d3f83\\\",\\\"title\\\":\\\"MANCHURIAN CANDIDATE\\\",\\\"excerpt\\\":\\\"By sacrificing Stormy, you made available the power of the storm. So, when a position is available... you take it, if it’s to your liking...\\\",\\\"featured\\\":false,\\\"categoryIds\\\":[],\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"image\\\":{\\\"id\\\":\\\"1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"url\\\":\\\"https://static.wixstatic.com/media/1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"height\\\":1606,\\\"width\\\":2728},\\\"memberId\\\":\\\"1a245d8a-a400-4b37-9e20-88171beab277\\\",\\\"hashtags\\\":[],\\\"commentingEnabled\\\":true,\\\"minutesToRead\\\":2,\\\"heroImage\\\":null,\\\"tagIds\\\":[],\\\"relatedPostIds\\\":[],\\\"pricingPlanIds\\\":[],\\\"translationId\\\":\\\"1a245d8a-8888-4b37-9e20-88171beab277\\\",\\\"language\\\":\\\"en\\\",\\\"changeOrigin\\\":\\\"manual_save\\\",\\\"editingSessionId\\\":\\\"51b74190-1568-11ec-82a8-0242ac130003\\\"}\"\n  },\n  \"entityFqdn\" : \"wix.blog.draft\",\n  \"eventTime\" : \"2021-03-02T08:40:54.448Z\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.draft`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DraftPost ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityCreatedEvent",
      "displayName": "Draft Post Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdatedDomainEvent",
      "displayName": "Draft Post Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"75e7fa83-91fc-4501-b711-c9da7527df14\",\n  \"slug\" : \"updated\",\n  \"id\" : \"e390b383-ed1f-4466-8981-ef7bdd9963a0\",\n  \"entityFqdn\" : \"wix.blog.draft\",\n  \"updatedEvent\" : {\n    \"currentEntityAsJson\" : \"{\\\"id\\\":\\\"3bceaccb-ddfc-4078-84bf-50699b4d3f83\\\",\\\"title\\\":\\\"MANCHURIAN CANDIDATE\\\",\\\"excerpt\\\":\\\"By sacrificing Stormy, you made available the power of the storm. So, when a position is available... you take it, if it’s to your liking...\\\",\\\"featured\\\":false,\\\"categoryIds\\\":[],\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"image\\\":{\\\"id\\\":\\\"1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"url\\\":\\\"https://static.wixstatic.com/media/1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"height\\\":1606,\\\"width\\\":2728},\\\"memberId\\\":\\\"1a245d8a-a400-4b37-9e20-88171beab277\\\",\\\"hashtags\\\":[],\\\"commentingEnabled\\\":true,\\\"minutesToRead\\\":2,\\\"heroImage\\\":null,\\\"tagIds\\\":[],\\\"relatedPostIds\\\":[],\\\"pricingPlanIds\\\":[],\\\"translationId\\\":\\\"1a245d8a-8888-4b37-9e20-88171beab277\\\",\\\"language\\\":\\\"en\\\",\\\"changeOrigin\\\":\\\"manual_save\\\",\\\"editingSessionId\\\":\\\"51b74190-1568-11ec-82a8-0242ac130003\\\"}\"\n  },\n  \"eventTime\" : \"2021-03-02T08:40:52.287Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.draft`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DraftPost ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostEntityUpdatedEvent",
      "displayName": "Draft Post Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostOwnerChangedDomainEvent",
      "displayName": "Draft Post Owner Changed Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.draft`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `draft_post_owner_changed`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostOwnerChangedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "DraftPostOwnerChanged ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostOwnerChangedActionEvent",
      "displayName": "Draft Post Owner Changed Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostOwnerChanged",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialDraftPostsCopiedDomainEvent",
      "displayName": "Initial Draft Posts Copied Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.draft`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `initial_draft_posts_copied`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialDraftPostsCopiedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "InitialDraftPostsCopied ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialDraftPostsCopiedActionEvent",
      "displayName": "Initial Draft Posts Copied Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialDraftPostsCopied",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCreatedDomainEvent",
      "displayName": "Post Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"3bceaccb-ddfc-4078-84bf-50699b4d3f83\",\n  \"slug\" : \"created\",\n  \"id\" : \"1d034196-3347-4a66-988a-3f30d7e51b9d\",\n  \"createdEvent\" : {\n    \"entityAsJson\" : \"{\\\"id\\\":\\\"3bceaccb-ddfc-4078-84bf-50699b4d3f83\\\",\\\"title\\\":\\\"MANCHURIAN CANDIDATE\\\",\\\"excerpt\\\":\\\"By sacrificing Stormy, you made available the power of the storm. So, when a position is available... you take it, if it’s to your liking...\\\",\\\"firstPublishedDate\\\":\\\"2021-03-02T08:40:54.354Z\\\",\\\"lastPublishedDate\\\":\\\"2021-03-02T08:40:54.354Z\\\",\\\"url\\\":{\\\"base\\\":\\\"https://www.brooyetti.com\\\",\\\"path\\\":\\\"/post/manchurian-candidate\\\"},\\\"slug\\\":\\\"manchurian-candidate\\\",\\\"featured\\\":false,\\\"pinned\\\":false,\\\"categoryIds\\\":[],\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"image\\\":{\\\"id\\\":\\\"1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"url\\\":\\\"https://static.wixstatic.com/media/1a245d_98065284cc0c4b16a72f8397d817eef9~mv2.png\\\",\\\"height\\\":1606,\\\"width\\\":2728},\\\"displayed\\\":true},\\\"memberId\\\":\\\"1a245d8a-a400-4b37-9e20-88171beab277\\\",\\\"hashtags\\\":[],\\\"commentingEnabled\\\":true,\\\"minutesToRead\\\":2,\\\"tagIds\\\":[],\\\"pricingPlans\\\":[],\\\"relatedPostIds\\\":[],\\\"pricingPlanIds\\\":[],\\\"language\\\":\\\"en\\\"}\"\n  },\n  \"entityFqdn\" : \"wix.blog.post\",\n  \"eventTime\" : \"2021-03-02T08:40:54.448Z\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Post ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostEntityCreatedEvent",
      "displayName": "Post Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostUpdatedDomainEvent",
      "displayName": "Post Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"75e7fa83-91fc-4501-b711-c9da7527df14\",\n  \"slug\" : \"updated\",\n  \"id\" : \"e390b383-ed1f-4466-8981-ef7bdd9963a0\",\n  \"entityFqdn\" : \"wix.blog.post\",\n  \"updatedEvent\" : {\n    \"currentEntityAsJson\" : \"{\\\"id\\\":\\\"75e7fa83-91fc-4501-b711-c9da7527df14\\\",\\\"title\\\":\\\"Healthy Skin\\\",\\\"excerpt\\\":\\\"For a long time, it has been thought that the look of our skin and the way we eat are two completely unrelated elements of our bodily wel...\\\",\\\"firstPublishedDate\\\":\\\"2021-01-23T12:16:28.403Z\\\",\\\"lastPublishedDate\\\":\\\"2021-03-02T08:40:52.182Z\\\",\\\"url\\\":{\\\"base\\\":\\\"https://www.beroot.co.uk\\\",\\\"path\\\":\\\"/post/healthy-skin\\\"},\\\"slug\\\":\\\"healthy-skin\\\",\\\"featured\\\":false,\\\"pinned\\\":false,\\\"categoryIds\\\":[],\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"image\\\":{\\\"id\\\":\\\"11062b_1881ef79d05e480fbc827c4de0e63bd6~mv2.jpg\\\",\\\"url\\\":\\\"https://static.wixstatic.com/media/11062b_1881ef79d05e480fbc827c4de0e63bd6~mv2.jpg\\\",\\\"height\\\":3941,\\\"width\\\":5906},\\\"displayed\\\":true},\\\"memberId\\\":\\\"0d8e7313-85a4-43b4-9954-b0c23ef9b104\\\",\\\"hashtags\\\":[],\\\"commentingEnabled\\\":true,\\\"minutesToRead\\\":3,\\\"tagIds\\\":[],\\\"pricingPlans\\\":[],\\\"relatedPostIds\\\":[],\\\"pricingPlanIds\\\":[]}\"\n  },\n  \"eventTime\" : \"2021-03-02T08:40:52.287Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Post ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostEntityUpdatedEvent",
      "displayName": "Post Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostDeletedDomainEvent",
      "displayName": "Post Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"26710dab-d343-4608-b002-6e1590945656\",\n  \"slug\" : \"deleted\",\n  \"id\" : \"c18f458a-d127-4d26-a8f0-97ed689b4ff7\",\n  \"entityFqdn\" : \"wix.blog.post\",\n  \"eventTime\" : \"2021-03-02T08:40:50.352Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Post ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostEntityDeletedEvent",
      "displayName": "Post Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostLikedDomainEvent",
      "displayName": "Post Liked Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"7d7ebfc8-ae30-4d97-8a9a-b10173b8a04c\",\n  \"actionEvent\" : {\n    \"bodyAsJson\" : \"{\\\"postId\\\":\\\"7d7ebfc8-ae30-4d97-8a9a-b10173b8a04c\\\", \\\"memberId\\\":\\\"7d7ebfc8-ae30-4d97-8a9a-b10173b8d84c\\\"}\"\n  },\n  \"slug\" : \"liked\",\n  \"id\" : \"7626b90d-9516-4530-bb48-81af66a5f023\",\n  \"entityFqdn\" : \"wix.blog.post\",\n  \"eventTime\" : \"2021-03-02T08:40:55.512Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `liked`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostLikedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PostLiked ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostLikedActionEvent",
      "displayName": "Post Liked Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostLiked",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostUnlikedDomainEvent",
      "displayName": "Post Unliked Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"7d7ebfc8-ae30-4d97-8a9a-b10173b8a04c\",\n  \"actionEvent\" : {\n    \"bodyAsJson\" : \"{\\\"postId\\\":\\\"7d7ebfc8-ae30-4d97-8a9a-b10123b8a04c\\\"}\"\n  },\n  \"slug\" : \"unliked\",\n  \"id\" : \"7626b90d-9516-4530-bb48-81af66a5f023\",\n  \"entityFqdn\" : \"wix.blog.post\",\n  \"eventTime\" : \"2021-03-02T08:40:55.512Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `unliked`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostUnlikedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PostUnliked ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostUnlikedActionEvent",
      "displayName": "Post Unliked Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostUnliked",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdatedDomainEvent",
      "displayName": "Post Counters Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `counters_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PostCountersUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdatedActionEvent",
      "displayName": "Post Counters Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdated",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostOwnerChangedDomainEvent",
      "displayName": "Post Owner Changed Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `post_owner_changed`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostOwnerChangedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PostOwnerChanged ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostOwnerChangedActionEvent",
      "displayName": "Post Owner Changed Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostOwnerChanged",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialPostsCopiedDomainEvent",
      "displayName": "Initial Posts Copied Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.post`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `initial_posts_copied`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialPostsCopiedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "InitialPostsCopied ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialPostsCopiedActionEvent",
      "displayName": "Initial Posts Copied Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialPostsCopied",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryCreatedDomainEvent",
      "displayName": "Category Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"71d1ead7-a341-4853-8f32-d5534e274473\",\n  \"slug\" : \"created\",\n  \"id\" : \"0002d822-bcf6-473f-8879-d913b788fd3c\",\n  \"createdEvent\" : {\n    \"entityAsJson\" : \"{\\\"id\\\":\\\"71d1ead7-a341-4853-8f32-d5534e274473\\\",\\\"label\\\":\\\"Membership Posts\\\",\\\"url\\\":{\\\"base\\\":\\\"https://www.darlingmagnolia.com\\\",\\\"path\\\":\\\"/blog/categories/membership-posts\\\"},\\\"description\\\":\\\"Exclusive Membership blog posts\\\",\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"displayed\\\":true},\\\"displayPosition\\\":4,\\\"slug\\\":\\\"membership\\\",\\\"language\\\":\\\"en\\\"}\"\n  },\n  \"entityFqdn\" : \"wix.blog.category\",\n  \"eventTime\" : \"2021-03-02T10:24:16.556Z\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityCreatedEvent",
      "displayName": "Category Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryUpdatedDomainEvent",
      "displayName": "Category Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"8c9bddc8-fd73-44de-8e49-441534b86e55\",\n  \"slug\" : \"updated\",\n  \"id\" : \"2a2aab57-dfb0-434b-94e0-5785d2c3ab7f\",\n  \"entityFqdn\" : \"wix.blog.category\",\n  \"updatedEvent\" : {\n    \"currentEntityAsJson\" : \"{\\\"id\\\":\\\"8c9bddc8-fd73-44de-8e49-441534b86e55\\\",\\\"label\\\":\\\"INTERNSHIP\\\",\\\"url\\\":{\\\"base\\\":\\\"https://patwebsite651.wixsite.com/my-site\\\",\\\"path\\\":\\\"/news/categories/internship\\\"},\\\"coverMedia\\\":{\\\"enabled\\\":true,\\\"image\\\":{\\\"id\\\":\\\"11062b_a98c4b8d0dc843aca9b8d55c3bb5c4a6~mv2.jpg\\\",\\\"url\\\":\\\"https://static.wixstatic.com/media/11062b_a98c4b8d0dc843aca9b8d55c3bb5c4a6~mv2.jpg\\\",\\\"height\\\":3337,\\\"width\\\":5000},\\\"displayed\\\":true},\\\"displayPosition\\\":0,\\\"slug\\\":\\\"membership\\\",\\\"language\\\":\\\"en\\\"}\"\n  },\n  \"eventTime\" : \"2021-03-02T10:24:22.659Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityUpdatedEvent",
      "displayName": "Category Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryDeletedDomainEvent",
      "displayName": "Category Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"entityId\" : \"60322380d7e7c0002d5fdebf\",\n  \"slug\" : \"deleted\",\n  \"id\" : \"b2f19ac7-d318-4662-9529-b9eb49608eb4\",\n  \"entityFqdn\" : \"wix.blog.category\",\n  \"eventTime\" : \"2021-03-02T10:25:33.939Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryEntityDeletedEvent",
      "displayName": "Category Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialCategoriesCopiedDomainEvent",
      "displayName": "Initial Categories Copied Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `initial_categories_copied`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialCategoriesCopiedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "InitialCategoriesCopied ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialCategoriesCopiedActionEvent",
      "displayName": "Initial Categories Copied Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_InitialCategoriesCopied",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagCreatedDomainEvent",
      "displayName": "Tag Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"a9ae74d5-406d-43f1-9d2c-27033170952d\",\n  \"entityFqdn\" : \"wix.blog.v3.tag\",\n  \"slug\" : \"created\",\n  \"entityId\" : \"c338a90d-8137-4dbc-95c0-5b46ce8b92e2\",\n  \"createdEvent\" : {\n    \"entityAsJson\" : \"{\\\"id\\\":\\\"c338a90d-8137-4dbc-95c0-5b46ce8b92e2\\\",\\\"label\\\":\\\"some tag\\\",\\\"slug\\\":\\\"some-tag\\\",\\\"createdDate\\\":\\\"2021-09-07T12:30:38.241Z\\\",\\\"updatedDate\\\":\\\"2021-09-07T12:30:38.241Z\\\",\\\"publicationCount\\\":0,\\\"postCount\\\":0,\\\"url\\\":{\\\"base\\\":\\\"https://some-user.wixsite.com/some-site\\\",\\\"path\\\":\\\"/blog/tags/some-tag\\\"},\\\"language\\\":\\\"en\\\"}\"\n  },\n  \"eventTime\" : \"2021-09-07T12:30:38.301Z\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.tag`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Tag ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagEntityCreatedEvent",
      "displayName": "Tag Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagDeletedDomainEvent",
      "displayName": "Tag Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"318b34ba-4047-4f4a-a8b9-1d91a9732fa5\",\n  \"entityFqdn\" : \"wix.blog.v3.tag\",\n  \"slug\" : \"deleted\",\n  \"entityId\" : \"d82102c9-b273-464d-b528-e05c5cdc5df7\",\n  \"eventTime\" : \"2021-09-07T12:48:31.053Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.tag`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Tag ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagEntityDeletedEvent",
      "displayName": "Tag Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagUpdatedDomainEvent",
      "displayName": "Tag Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"a9ae74d5-406d-43f1-9d2c-27033170952d\",\n  \"entityFqdn\" : \"wix.blog.v3.tag\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"c338a90d-8137-4dbc-95c0-5b46ce8b92e2\",\n  \"updatedEvent\" : {\n    \"entityAsJson\" : \"{\\\"id\\\":\\\"c338a90d-8137-4dbc-95c0-5b46ce8b92e2\\\",\\\"label\\\":\\\"some tag\\\",\\\"slug\\\":\\\"some-tag\\\",\\\"createdDate\\\":\\\"2021-09-07T12:30:38.241Z\\\",\\\"updatedDate\\\":\\\"2021-09-07T12:30:38.241Z\\\",\\\"publicationCount\\\":0,\\\"postCount\\\":0,\\\"url\\\":{\\\"base\\\":\\\"https://some-user.wixsite.com/some-site\\\",\\\"path\\\":\\\"/blog/tags/some-tag\\\"},\\\"language\\\":\\\"en\\\"}\"\n  },\n  \"eventTime\" : \"2021-09-07T12:30:38.301Z\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.tag`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Tag ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagEntityUpdatedEvent",
      "displayName": "Tag Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_InitialTagsCopiedDomainEvent",
      "displayName": "Initial Tags Copied Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.blog.v3.tag`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `initial_tags_copied`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_InitialTagsCopiedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "InitialTagsCopied ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_InitialTagsCopiedActionEvent",
      "displayName": "Initial Tags Copied Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_InitialTagsCopied",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_BlogPaging",
      "displayName": "Blog Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n\n Default: `0`\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return. \n\n\n Default:`50`\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Video",
      "displayName": "Video Object",
      "locations": [],
      "docs":       {
        "summary": " Deprecated - use VideoV2\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " URL of video\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width\n",
          "readOnly": true
        },
                {
          "name": "thumbnail",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Video poster\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_wix_common_VideoV2",
      "displayName": "Video V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID.\n"
        },
                {
          "name": "resolutions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_VideoResolution"]
          },
          "doc": " Available resolutions for the video, starting with the optimal resolution.\n",
          "readOnly": true
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Video filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_VideoResolution",
      "displayName": "Video Resolution Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " Video URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Video height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Video width.\n"
        },
                {
          "name": "format",
          "type": "string",
          "doc": " Video format for example, mp4, hls.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_CoverMedia",
      "displayName": "Cover Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Is cover media enabled.\n Selected by user whether to display cover media on the feed\n",
          "deprecated": true
        },
                {
          "name": "media",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_CoverMedia_media",
          "doc": ""
        },
                {
          "name": "displayed",
          "type": "boolean",
          "doc": " Whether cover media is displayed.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether cover media is custom. If `false` the cover image is set to the first media item that appears in the content.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_CoverMedia_media",
      "displayName": "media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Image url.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Blog._wix_common_Video",
          "doc": " Video url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "media",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Media_media",
          "doc": ""
        },
                {
          "name": "displayed",
          "type": "boolean",
          "doc": " Whether cover media is displayed.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether custom cover media has been specified. If `false`, the first media item in the post's content serves as cover media.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_Media_media",
      "displayName": "media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "wixMedia",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_WixMedia",
          "doc": " Wix Media details.\n"
        },
                {
          "name": "embedMedia",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_EmbedMedia",
          "doc": " Embed media details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_WixMedia",
      "displayName": "Wix Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Thumbnail or image details.\n"
        },
                {
          "name": "videoV2",
          "type": "All APIs.Blog._wix_common_VideoV2",
          "doc": " Video details. Optional\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_EmbedMedia",
      "displayName": "Embed Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "thumbnail",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_EmbedThumbnail",
          "doc": " Thumbnail details.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_EmbedVideo",
          "doc": " Video details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_EmbedVideo",
      "displayName": "Embed Video Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " Video url.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Video width.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Video height.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_EmbedThumbnail",
      "displayName": "Embed Thumbnail Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " Thumbnail url.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Thumbnail width.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Thumbnail height.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_MetaData",
      "displayName": "Meta Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in this response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Requested offset.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": " Pointer to the next or previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPublicationsCountStatsRequest",
      "displayName": "Query Publications Count Stats Request Object",
      "locations": [],
      "docs":       {
        "summary": " Get Blog Publications Count Stats request\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rangeStart",
          "type": "string",
          "doc": " Start of time range to return, in ISO 8601 date and time format.\n"
        },
                {
          "name": "rangeEnd",
          "type": "string",
          "doc": " Non-inclusive end of time range to return, in ISO 8601 date and time format.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryPublicationsCountStatsRequest_Order",
          "doc": " Order of the returned results.\n"
        },
                {
          "name": "months",
          "type": "integer",
          "doc": " Number of months to include in the response.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Timezone of the client.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsRequest",
      "displayName": "Query Post Count Stats Request Object",
      "locations": [],
      "docs":       {
        "summary": " Get Blog Post Count Stats request\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rangeStart",
          "type": "string",
          "doc": " Start of time range to return, in ISO 8601 date and time format.\n"
        },
                {
          "name": "rangeEnd",
          "type": "string",
          "doc": " __Deprecated.__ Use `months` instead.\n This property will be removed on June 30, 2023.\n\n Non-inclusive end of time range to return, in ISO 8601 date and time format.\n",
          "deprecated": true
        },
                {
          "name": "order",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsRequest_Order",
          "doc": " Order of returned results.\n \n - `OLDEST`: posts by date in ascending order.\n - `NEWEST`: posts by date in descending order.\n\n Default: `OLDEST`\n"
        },
                {
          "name": "months",
          "type": "integer",
          "doc": " Number of months to include in response.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to only receive the period post count for that specified language. \n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Time zone to use when calculating the start of the month. \n\n [UTC timezone offset](https://en.wikipedia.org/wiki/List_of_UTC_offsets) format. For example, New York time zone is `-05`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPublicationsCountStatsResponse",
      "displayName": "Query Publications Count Stats Response Object",
      "locations": [],
      "docs":       {
        "summary": " Get Blog Publications Count Stats response\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "stats",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_PeriodPublicationsCount"]
        },
        "doc": " Chronologically ordered list of publications.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsResponse",
      "displayName": "Query Post Count Stats Response Object",
      "locations": [],
      "docs":       {
        "summary": " Get Blog Post Count Stats response\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "stats",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_PeriodPostCount"]
        },
        "doc": " List of published post counts by month.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_PeriodPublicationsCount",
      "displayName": "Period Publications Count Object",
      "locations": [],
      "docs":       {
        "summary": " Publications count for a specific time period\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "periodStart",
          "type": "string",
          "doc": " Start of time range in ISO 8601 date and time format.\n"
        },
                {
          "name": "publicationsCount",
          "type": "integer",
          "doc": " Number of posts published during this month.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_PeriodPostCount",
      "displayName": "Period Post Count Object",
      "locations": [],
      "docs":       {
        "summary": " Post count for a specific time period\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "periodStart",
          "type": "string",
          "doc": " Start of time range in ISO 8601 date and time format.\n"
        },
                {
          "name": "postCount",
          "type": "integer",
          "doc": " Number of posts published during this month.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTotalPublicationsRequest",
      "displayName": "Get Total Publications Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "language",
        "type": "string",
        "doc": " Language filter\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTotalPostsRequest",
      "displayName": "Get Total Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "language",
        "type": "string",
        "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to receive the total amount of posts in that specified language. \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTotalPublicationsResponse",
      "displayName": "Get Total Publications Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "total",
        "type": "integer",
        "doc": " Total amount of publications.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTotalPostsResponse",
      "displayName": "Get Total Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "total",
        "type": "integer",
        "doc": " Total amount of published posts.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_tag_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_tag_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Blog._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery",
      "displayName": "Platform Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Blog._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PageUrl",
      "displayName": "Page Url Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "base",
          "type": "string",
          "doc": " The base URL. For premium sites, this will be the domain. For free sites, this would be site URL (e.g mysite.wixsite.com/mysite)\n"
        },
                {
          "name": "path",
          "type": "string",
          "doc": " The path to that page - e.g /product-page/a-product\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"tag\" : {\n    \"id\" : \"33b7a30f-ca8a-4678-84c4-0bab5e3ebf63\",\n    \"label\" : \"vacation\",\n    \"slug\" : \"vacation\",\n    \"createdDate\" : \"2021-06-21T08:27:09.764Z\",\n    \"updatedDate\" : \"2021-06-21T08:27:09.764Z\",\n    \"publicationCount\" : 3,\n    \"postCount\" : 10,\n    \"language\" : \"fr\"\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled. \n\n\n Default: `false` (Auto Redirect is enabled.)\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value.\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focus keyword.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tag information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Blog._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"tag\" : {\n    \"id\" : \"33b7a30f-ca8a-4678-84c4-0bab5e3ebf63\",\n    \"label\" : \"vacation\",\n    \"slug\" : \"vacation\",\n    \"createdDate\" : \"2021-06-21T08:27:09.764Z\",\n    \"updatedDate\" : \"2021-06-21T08:27:09.764Z\",\n    \"publicationCount\" : 3,\n    \"postCount\" : 10,\n    \"language\" : \"fr\"\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Tag ID.\n",
          "readOnly": true
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Tag label.\n\n A blog can't have two tags with the same label.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Tag slug. For example, `'tag-slug'`.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date the tag was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date the tag was last updated.\n",
          "readOnly": true
        },
                {
          "name": "publicationCount",
          "type": "integer",
          "doc": " Reserved for internal use.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "postCount",
          "type": "integer",
          "doc": " Number of posts with this tag, including unpublished draft posts.\n",
          "readOnly": true
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Tag URL.\n",
          "readOnly": true
        },
                {
          "name": "publishedPostCount",
          "type": "integer",
          "doc": " Number of published posts with this tag.\n",
          "readOnly": true
        },
                {
          "name": "translationId",
          "type": "string",
          "doc": " ID of the tag translations.\n\n All translations of a single tag share the same `translationId`.\n",
          "readOnly": true
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_BulkTagResult",
      "displayName": "Bulk Tag Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Blog._wix_common_ItemMetadata",
          "doc": " Bulk actions metadata for tag.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
          "doc": " Optional created tag.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetOrCreateTagRequest",
      "displayName": "Get Or Create Tag Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Tag name. Unique per blog.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of tag fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core tag properties.\n Example: When URL fieldset is selected, returned tag will have a set of base properties and tag url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetOrCreateTagResponse",
      "displayName": "Get Or Create Tag Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_CreateTagRequest",
      "displayName": "Create Tag Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Tag label. The label for each tag in a blog must be unique.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Preferred tag slug. For example, `'tag-slug'`.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_CreateTagResponse",
      "displayName": "Create Tag Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_UpdateTagRequest",
      "displayName": "Update Tag Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tag",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
          "doc": " Tag info.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of tag fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core tag properties.\n Example: When URL fieldset is selected, returned tag will have a set of base properties and tag url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_UpdateTagResponse",
      "displayName": "Update Tag Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_BulkCreateTagsRequest",
      "displayName": "Bulk Create Tags Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag"]
          },
          "doc": " Tags to create.\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full created tag entities in the response.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of tag fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core tag properties.\n Example: When URL fieldset is selected, returned tag will have a set of base properties and tag url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_BulkCreateTagsResponse",
      "displayName": "Bulk Create Tags Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BulkTagResult"]
          },
          "doc": " Tags created by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagByLabelRequest",
      "displayName": "Get Tag By Label Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Tag label.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Tag language.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, tags in all languages are returned.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagByLabelResponse",
      "displayName": "Get Tag By Label Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagRequest",
      "displayName": "Get Tag Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tagId",
          "type": "string",
          "doc": " Tag ID.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagResponse",
      "displayName": "Get Tag Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagBySlugRequest",
      "displayName": "Get Tag By Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slug",
          "type": "string",
          "doc": " Slug of the tag to retrieve.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_GetTagBySlugResponse",
      "displayName": "Get Tag By Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tag",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag",
        "doc": " Tag info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryTagsRequest",
      "displayName": "Query Tags Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n For a detailed list of supported filters, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "deprecated": true
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n",
          "deprecated": true
        },
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_Paging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "deprecated": true
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of tag fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_PlatformQuery",
          "doc": " Query options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of additional tag fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the tag's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the tag's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagsFieldSet",
      "displayName": "Tags Field Set Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "includeUrl",
        "type": "boolean",
        "doc": " Includes tag URL when TRUE. Defaults to FALSE.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryTagsResponse",
      "displayName": "Query Tags Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag"]
          },
          "doc": " List of tags.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " __Deprecated.__ Use `pagingMetadata` instead.\n This property will be removed on June 30, 2023.\n\n Details on the paged set of results returned.\n",
          "deprecated": true
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_ListTagsRequest",
      "displayName": "List Tags Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_ListTagsRequest_pagingMethod",
          "doc": " Pagination options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_TagField_Field"]
          },
          "doc": " List of tag fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core tag properties.\n Example: When URL fieldset is selected, returned tag will have a set of base properties and tag url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_ListTagsRequest_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_Paging",
          "doc": " Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_tag_CursorPaging",
          "doc": " Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_ListTagsResponse",
      "displayName": "List Tags Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Tag"]
          },
          "doc": " List of tags.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_DeleteTagRequest",
      "displayName": "Delete Tag Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tagId",
        "type": "string",
        "doc": " Tag ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_DeleteTagResponse",
      "displayName": "Delete Tag Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_InitialTagsCopied",
      "displayName": "Initial Tags Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " Number of tags copied.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "fieldsMapEntry",
      "displayName": "fields Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. An unordered map of dynamically typed values.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Blog._wix_rich_content_v1_Value",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Struct",
      "displayName": "Struct Object",
      "locations": [],
      "docs":       {
        "summary": " `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fields",
        "type": "All APIs.Blog.fieldsMapEntry",
        "doc": "Set of key-value pairs. An unordered map of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Blog._wix_rich_content_v1_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Blog._wix_rich_content_v1_NullValue",
          "doc": " A null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " A double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " A string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " A boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "All APIs.Blog._wix_rich_content_v1_Struct",
          "doc": " A structured value.\n"
        },
                {
          "name": "listValue",
          "type": "All APIs.Blog._wix_rich_content_v1_ListValue",
          "doc": " An array of `value` objects.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_ListValue",
      "displayName": "List Value Object",
      "locations": [],
      "docs":       {
        "summary": " `ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "values",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Blog._wix_rich_content_v1_Value"]
        },
        "doc": " Repeated field of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AnchorData",
      "displayName": "Anchor Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "anchor",
        "type": "string",
        "doc": " The target node's ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ColorData",
      "displayName": "Color Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "background",
          "type": "string",
          "doc": " The text's background color as a hexadecimal value.\n"
        },
                {
          "name": "foreground",
          "type": "string",
          "doc": " The text's foreground color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextStyle",
      "displayName": "Text Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "textAlignment",
          "type": "All APIs.Blog._wix_rich_content_v1_TextStyle_TextAlignment",
          "doc": " Text alignment. Defaults to `AUTO`.\n"
        },
                {
          "name": "lineHeight",
          "type": "string",
          "doc": " A CSS `line-height` value for the text as a unitless ratio.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_Rel",
      "displayName": "Rel Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nofollow",
          "type": "boolean",
          "doc": " Indicates to search engine crawlers not to follow the link.\n"
        },
                {
          "name": "sponsored",
          "type": "boolean",
          "doc": " Indicates to search engine crawlers that the link is a paid placement such as sponsored content or an advertisement.\n"
        },
                {
          "name": "ugc",
          "type": "boolean",
          "doc": " Indicates that this link is user-generated content and isn't necessarily trusted or endorsed by the page’s author. For example, a link in a fourm post.\n"
        },
                {
          "name": "noreferrer",
          "type": "boolean",
          "doc": " Indicates that this link protect referral information from being passed to the target website.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link",
      "displayName": "Link Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_Link_data",
          "doc": ""
        },
                {
          "name": "target",
          "type": "All APIs.Blog._wix_rich_content_v1_Link_Target",
          "doc": "The HTML `target` attribute value for the link. This property defines where the linked document opens as follows:\n`SELF` - Default. Opens the linked document in the same frame as the link.\n`BLANK` - Opens the linked document in a new browser tab or window.\n`PARENT` - Opens the linked document in the link's parent frame.\n`TOP` - Opens the linked document in the full body of the link's browser tab or window.\n"
        },
                {
          "name": "rel",
          "type": "All APIs.Blog._wix_rich_content_v1_Link_Rel",
          "doc": " The HTML `rel` attribute value for the link. This object specifies the relationship between the current document and the linked document.\n"
        },
                {
          "name": "customData",
          "type": "string",
          "doc": " A serialized object used for a custom or external link panel.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The absolute URL for the linked document.\n"
        },
                {
          "name": "anchor",
          "type": "string",
          "doc": " The target node's ID. Used for linking to another node in this object.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Spoiler",
      "displayName": "Spoiler Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Sets whether the spoiler cover is enabled for this node.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " The description displayed on top of the spoiler cover.\n"
        },
                {
          "name": "buttonText",
          "type": "string",
          "doc": " The text for the button used to remove the spoiler cover.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width",
      "displayName": "Width Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "data",
        "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Width_data",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "size",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Width_Type",
          "doc": " One of the following predefined width options:\n`CONTENT`: The width of the container matches the content width.\n`SMALL`: Small width.\n`ORIGINAL`: The width of the container matches the original asset width.\n`FULL_WIDTH`: Full width.\n"
        },
                {
          "name": "custom",
          "type": "string",
          "doc": " A custom width value in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Height",
      "displayName": "Height Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "custom",
        "type": "string",
        "doc": " A custom height value in pixels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData",
      "displayName": "Plugin Container Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "width",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Width",
          "doc": " The width of the node when it's displayed.\n"
        },
                {
          "name": "alignment",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Alignment",
          "doc": " The node's alignment within its container.\n"
        },
                {
          "name": "spoiler",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Spoiler",
          "doc": " Spoiler cover settings for the node.\n"
        },
                {
          "name": "height",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData_Height",
          "doc": " The height of the node when it's displayed.\n"
        },
                {
          "name": "textWrap",
          "type": "boolean",
          "doc": " Sets whether text should wrap around this node when it's displayed. If `textWrap` is `false`, the node takes up the width of its container.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileSource",
      "displayName": "File Source Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_FileSource_data",
          "doc": ""
        },
                {
          "name": "private",
          "type": "boolean",
          "doc": " Indicates whether the file's source is private.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileSource_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The absolute URL for the file's source.\n"
        },
                {
          "name": "custom",
          "type": "string",
          "doc": " Custom ID. Use `id` instead.\n",
          "deprecated": true
        },
                {
          "name": "id",
          "type": "string",
          "doc": " An ID that's resolved to a URL by a resolver function.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "src",
          "type": "All APIs.Blog._wix_rich_content_v1_FileSource",
          "doc": " The source for the media's data.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Media width in pixels.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Media height in pixels.\n"
        },
                {
          "name": "duration",
          "type": "number",
          "doc": " Media duration in seconds. Only relevant for audio and video files.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PlaybackOptions",
      "displayName": "Playback Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "autoPlay",
          "type": "boolean",
          "doc": " Sets whether the media will automatically start playing.\n"
        },
                {
          "name": "playInLoop",
          "type": "boolean",
          "doc": " Sets whether media's will be looped.\n"
        },
                {
          "name": "showControls",
          "type": "boolean",
          "doc": " Sets whether media's controls will be shown.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Oembed",
      "displayName": "Oembed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " The resource type.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " The width of the resource specified in the `url` property in pixels.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " The height of the resource specified in the `url` property in pixels.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Resource title.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The source URL for the resource.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " HTML for embedding a video player. The HTML should have no padding or margins.\n"
        },
                {
          "name": "authorName",
          "type": "string",
          "doc": " The name of the author or owner of the resource.\n"
        },
                {
          "name": "authorUrl",
          "type": "string",
          "doc": " The URL for the author or owner of the resource.\n"
        },
                {
          "name": "providerName",
          "type": "string",
          "doc": " The name of the resource provider.\n"
        },
                {
          "name": "providerUrl",
          "type": "string",
          "doc": " The URL for the resource provider.\n"
        },
                {
          "name": "thumbnailUrl",
          "type": "string",
          "doc": " The URL for a thumbnail image for the resource. If this property is defined, `thumbnailWidth` and `thumbnailHeight` must also be defined.\n"
        },
                {
          "name": "thumbnailWidth",
          "type": "string",
          "doc": " The width of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailHeight` must also be defined.\n"
        },
                {
          "name": "thumbnailHeight",
          "type": "string",
          "doc": " The height of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailWidth`must also be defined.\n"
        },
                {
          "name": "videoUrl",
          "type": "string",
          "doc": " The URL for an embedded viedo.\n"
        },
                {
          "name": "version",
          "type": "string",
          "doc": " The oEmbed version number.  This value must be `1.0`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_LinkData",
      "displayName": "Link Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "link",
        "type": "All APIs.Blog._wix_rich_content_v1_Link",
        "doc": " Link details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MentionData",
      "displayName": "Mention Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " The mentioned user's name.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " The version of the user's name that appears after the `@` character in the mention.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Mentioned user's ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CodeBlockData",
      "displayName": "Code Block Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "textStyle",
        "type": "All APIs.Blog._wix_rich_content_v1_TextStyle",
        "doc": " Styling for the code block's text.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HeadingData",
      "displayName": "Heading Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "level",
          "type": "integer",
          "doc": " Heading level from 1-6.\n"
        },
                {
          "name": "textStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_TextStyle",
          "doc": " Styling for the heading text.\n"
        },
                {
          "name": "indentation",
          "type": "integer",
          "doc": " Indentation level from 1-6.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ParagraphData",
      "displayName": "Paragraph Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "textStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_TextStyle",
          "doc": " Styling for the paragraph text.\n"
        },
                {
          "name": "indentation",
          "type": "integer",
          "doc": " Indentation level from 1-6.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles_Colors",
      "displayName": "Colors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "text",
          "type": "string",
          "doc": " The text color as a hexadecimal value.\n"
        },
                {
          "name": "border",
          "type": "string",
          "doc": " The border color as a hexadecimal value.\n"
        },
                {
          "name": "background",
          "type": "string",
          "doc": " The background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles_Border",
      "displayName": "Border Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "width",
          "type": "integer",
          "doc": " Border width in pixels.\n"
        },
                {
          "name": "radius",
          "type": "integer",
          "doc": " Border radius in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles",
      "displayName": "Styles Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "border",
          "type": "All APIs.Blog._wix_rich_content_v1_ButtonData_Styles_Border",
          "doc": " Border attributes.\n"
        },
                {
          "name": "colors",
          "type": "All APIs.Blog._wix_rich_content_v1_ButtonData_Styles_Colors",
          "doc": " Color attributes.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData",
      "displayName": "Button Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the button's container.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_ButtonData_Type",
          "doc": " The button type.\n"
        },
                {
          "name": "styles",
          "type": "All APIs.Blog._wix_rich_content_v1_ButtonData_Styles",
          "doc": " Styling for the button.\n"
        },
                {
          "name": "text",
          "type": "string",
          "doc": " The text to display on the button.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Blog._wix_rich_content_v1_Link",
          "doc": " Button link details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData",
      "displayName": "Divider Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the divider's container.\n"
        },
                {
          "name": "lineStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_DividerData_LineStyle",
          "doc": " Divider line style.\n"
        },
                {
          "name": "width",
          "type": "All APIs.Blog._wix_rich_content_v1_DividerData_Width",
          "doc": " Divider width.\n"
        },
                {
          "name": "alignment",
          "type": "All APIs.Blog._wix_rich_content_v1_DividerData_Alignment",
          "doc": " Divider alignment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData_PDFSettings",
      "displayName": "PDF Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "viewMode",
          "type": "All APIs.Blog._wix_rich_content_v1_FileData_PDFSettings_ViewMode",
          "doc": " PDF view mode. One of the following:  \n `NONE` : The PDF isn't displayed.  \n `FULL` : A full page view of the PDF is displayed.  \n `MINI` : A mini view of the PDF is displayed.  \n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the PDF download button is disabled.\n"
        },
                {
          "name": "disablePrint",
          "type": "boolean",
          "doc": " Sets whether the PDF print button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData",
      "displayName": "File Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the file's container.\n"
        },
                {
          "name": "src",
          "type": "All APIs.Blog._wix_rich_content_v1_FileSource",
          "doc": " The source for the file's data.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " File name.\n"
        },
                {
          "name": "type",
          "type": "string",
          "doc": " File type.\n"
        },
                {
          "name": "size",
          "type": "integer",
          "doc": " File size in KB.\n"
        },
                {
          "name": "pdfSettings",
          "type": "All APIs.Blog._wix_rich_content_v1_FileData_PDFSettings",
          "doc": " Settings for PDF files.\n"
        },
                {
          "name": "mimeType",
          "type": "string",
          "doc": " File MIME type.\n"
        },
                {
          "name": "path",
          "type": "string",
          "doc": " File path.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout",
      "displayName": "Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_Layout_Type",
          "doc": " Gallery layout type.\n"
        },
                {
          "name": "horizontalScroll",
          "type": "boolean",
          "doc": " Sets whether horizontal scroll is enabled.\n"
        },
                {
          "name": "orientation",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_Layout_Orientation",
          "doc": " Gallery orientation.\n"
        },
                {
          "name": "numberOfColumns",
          "type": "integer",
          "doc": " The number of columns to display on full size screens.\n"
        },
                {
          "name": "mobileNumberOfColumns",
          "type": "integer",
          "doc": " The number of columns to display on mobile screens.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_ItemStyle",
      "displayName": "Item Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "targetSize",
          "type": "integer",
          "doc": " Desirable dimension for each item in pixels (behvaior changes according to gallery type)\n"
        },
                {
          "name": "ratio",
          "type": "number",
          "doc": " Item ratio\n"
        },
                {
          "name": "crop",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_ItemStyle_Crop",
          "doc": " Sets how item images are cropped.\n"
        },
                {
          "name": "spacing",
          "type": "integer",
          "doc": " The spacing between items in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Thumbnails",
      "displayName": "Thumbnails Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "placement",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_Thumbnails_Alignment",
          "doc": " Thumbnail alignment.\n"
        },
                {
          "name": "spacing",
          "type": "integer",
          "doc": "Spacing between thumbnails in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions",
      "displayName": "Gallery Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "layout",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_Layout",
          "doc": " Gallery layout.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_ItemStyle",
          "doc": " Styling for gallery items.\n"
        },
                {
          "name": "thumbnails",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions_Thumbnails",
          "doc": " Styling for gallery thumbnail images.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_Video",
      "displayName": "Video Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "media",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Video file details.\n"
        },
                {
          "name": "thumbnail",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Video thumbnail file details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "media",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Image file details.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Blog._wix_rich_content_v1_Link",
          "doc": " Link details for images that are links.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item",
      "displayName": "Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryData_Item_data",
          "doc": ""
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Item title.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Item's alternative text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryData_Item_Image",
          "doc": " An image item.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryData_Item_Video",
          "doc": " A video item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_GalleryData",
      "displayName": "Gallery Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the gallery's container.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_GalleryData_Item"]
          },
          "doc": " The items in the gallery.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryOptions",
          "doc": " Options for defining the gallery's appearance.\n"
        },
                {
          "name": "disableExpand",
          "type": "boolean",
          "doc": " Sets whether the gallery's expand button is disabled.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the gallery's download button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GIFData",
      "displayName": "GIF Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the GIF's container.\n"
        },
                {
          "name": "original",
          "type": "All APIs.Blog._wix_rich_content_v1_GIF",
          "doc": " The source of the full size GIF.\n"
        },
                {
          "name": "downsized",
          "type": "All APIs.Blog._wix_rich_content_v1_GIF",
          "doc": " The source of the downsized GIF.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Height in pixels.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Width in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GIF",
      "displayName": "GIF Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "gif",
          "type": "string",
          "doc": " GIF format URL.\n"
        },
                {
          "name": "mp4",
          "type": "string",
          "doc": " MP4 format URL.\n"
        },
                {
          "name": "still",
          "type": "string",
          "doc": " Thumbnail URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData",
      "displayName": "HTML Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": "Styling for the HTML node's container.\n"
        },
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_HTMLData_data",
          "doc": ""
        },
                {
          "name": "source",
          "type": "All APIs.Blog._wix_rich_content_v1_HTMLData_Source",
          "doc": " The type of HTML code.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The URL for the HTML code for the node.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " The HTML code for the node.\n"
        },
                {
          "name": "isAdsense",
          "type": "boolean",
          "doc": " Whether this is an AdSense element. Use `source` instead.\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_ImageData",
      "displayName": "Image Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the image's container.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Image file details.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Blog._wix_rich_content_v1_Link",
          "doc": " Link details for images that are links.\n"
        },
                {
          "name": "disableExpand",
          "type": "boolean",
          "doc": " Sets whether the image expands to full screen when clicked.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image's alternative text.\n"
        },
                {
          "name": "caption",
          "type": "string",
          "doc": " Image caption.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the image's download button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_LinkPreviewData",
      "displayName": "Link Preview Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the link preview's container.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Blog._wix_rich_content_v1_Link",
          "doc": " Link details.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Preview title.\n"
        },
                {
          "name": "thumbnailUrl",
          "type": "string",
          "doc": " Preview thumbnail URL.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Preview description.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " The preview content as HTML.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapData",
      "displayName": "Map Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the map's container.\n"
        },
                {
          "name": "mapSettings",
          "type": "All APIs.Blog._wix_rich_content_v1_MapSettings",
          "doc": " Map settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapSettings",
      "displayName": "Map Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "address",
          "type": "string",
          "doc": " The address to display on the map. \n"
        },
                {
          "name": "draggable",
          "type": "boolean",
          "doc": " Sets whether the map is draggable.\n"
        },
                {
          "name": "marker",
          "type": "boolean",
          "doc": " Sets whether the location marker is visible. \n"
        },
                {
          "name": "streetViewControl",
          "type": "boolean",
          "doc": " Sets whether street view control is enabled.\n"
        },
                {
          "name": "zoomControl",
          "type": "boolean",
          "doc": " Sets whether zoom control is enabled.\n"
        },
                {
          "name": "lat",
          "type": "number",
          "doc": " Location latitude.\n"
        },
                {
          "name": "lng",
          "type": "number",
          "doc": " Location longitude.\n"
        },
                {
          "name": "locationName",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "viewModeControl",
          "type": "boolean",
          "doc": " Sets whether view mode control is enabled.\n"
        },
                {
          "name": "initialZoom",
          "type": "integer",
          "doc": " Initial zoom value.\n"
        },
                {
          "name": "mapType",
          "type": "All APIs.Blog._wix_rich_content_v1_MapType",
          "doc": " Map type. `HYBRID` is a combination of the `ROADMAP` and `SATELLITE` map types.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Option",
      "displayName": "Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Option ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Option title.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " The image displayed with the option.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions",
      "displayName": "Permissions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "view",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Poll_Settings_Permissions_ViewRole",
          "doc": " Sets who can view the poll results.\n"
        },
                {
          "name": "vote",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Poll_Settings_Permissions_VoteRole",
          "doc": " Sets who can vote.\n"
        },
                {
          "name": "allowMultipleVotes",
          "type": "boolean",
          "doc": " Sets whether one voter can vote multiple times.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "permissions",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Poll_Settings_Permissions",
          "doc": " Permissions settings for voting.\n"
        },
                {
          "name": "showVoters",
          "type": "boolean",
          "doc": " Sets whether voters are displayed in the vote results.\n"
        },
                {
          "name": "showVotesCount",
          "type": "boolean",
          "doc": " Sets whether the vote count is displayed.     \n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll",
      "displayName": "Poll Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Poll ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Poll title.\n"
        },
                {
          "name": "creatorId",
          "type": "string",
          "doc": " Poll creator ID.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Main poll image.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_PollData_Poll_Option"]
          },
          "doc": " Voting options.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Poll_Settings",
          "doc": " The poll's permissions and display settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout",
      "displayName": "Poll Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Layout_PollLayout_Type",
          "doc": " The layout for displaying the voting options.\n"
        },
                {
          "name": "direction",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Layout_PollLayout_Direction",
          "doc": " The direction of the text displayed in the voting options. Text can be displayed either right-to-left or left-to-right.\n"
        },
                {
          "name": "enableImage",
          "type": "boolean",
          "doc": " Sets whether to display the main poll image.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_OptionLayout",
      "displayName": "Option Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enableImage",
        "type": "boolean",
        "doc": " Sets whether to display option images.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout",
      "displayName": "Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "poll",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Layout_PollLayout",
          "doc": " Poll layout settings.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Layout_OptionLayout",
          "doc": " Voting otpions layout settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_Gradient",
      "displayName": "Gradient Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "angle",
          "type": "integer",
          "doc": " The gradient angle in degrees.\n"
        },
                {
          "name": "startColor",
          "type": "string",
          "doc": " The start color as a hexademical value.\n"
        },
                {
          "name": "lastColor",
          "type": "string",
          "doc": " The end color as a hexademical value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background",
      "displayName": "Background Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_PollDesign_Background_Type",
          "doc": " Background type. For each option, include the relevant details.\n"
        },
                {
          "name": "background",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_PollDesign_Background_background",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_background",
      "displayName": "background Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "color",
          "type": "string",
          "doc": " The background color as a hexademical value.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " An image to use for the background.\n"
        },
                {
          "name": "gradient",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_PollDesign_Background_Gradient",
          "doc": " Details for a gradient background.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign",
      "displayName": "Poll Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "background",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_PollDesign_Background",
          "doc": " Background styling.\n"
        },
                {
          "name": "borderRadius",
          "type": "integer",
          "doc": " Border radius in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_OptionDesign",
      "displayName": "Option Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "borderRadius",
        "type": "integer",
        "doc": " Border radius in pixels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design",
      "displayName": "Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "poll",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_PollDesign",
          "doc": " Styling for the poll.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design_OptionDesign",
          "doc": " Styling for voting options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData",
      "displayName": "Poll Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the poll's container.\n"
        },
                {
          "name": "poll",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Poll",
          "doc": " Poll data.\n"
        },
                {
          "name": "layout",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Layout",
          "doc": " Layout settings for the poll and voting options.\n"
        },
                {
          "name": "design",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData_Design",
          "doc": " Styling for the poll and voting options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_BookingData",
      "displayName": "Booking Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "durations",
        "type": "string",
        "doc": " Booking duration in minutes.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_EventData",
      "displayName": "Event Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduling",
          "type": "string",
          "doc": " Event schedule.\n"
        },
                {
          "name": "location",
          "type": "string",
          "doc": " Event location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData",
      "displayName": "App Embed Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_AppEmbedData_AppType",
          "doc": " The type of Wix App content being embedded.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " The ID of the embedded content.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " The name of the embedded content.\n"
        },
                {
          "name": "imageSrc",
          "type": "string",
          "doc": " Deprecated: Use `image` instead.\n",
          "deprecated": true
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The URL for the embedded content.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " An image for the embedded content.\n"
        },
                {
          "name": "appData",
          "type": "All APIs.Blog._wix_rich_content_v1_AppEmbedData_appData",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_appData",
      "displayName": "app Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingData",
          "type": "All APIs.Blog._wix_rich_content_v1_AppEmbedData_BookingData",
          "doc": " Data for embedded Wix Bookings content.\n"
        },
                {
          "name": "eventData",
          "type": "All APIs.Blog._wix_rich_content_v1_AppEmbedData_EventData",
          "doc": " Data for embedded Wix Events content.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_VideoData",
      "displayName": "Video Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the video's container.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Video details.\n"
        },
                {
          "name": "thumbnail",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Video thumbnail details.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the video's download button is disabled.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Video title.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Blog._wix_rich_content_v1_PlaybackOptions",
          "doc": " Video options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData",
      "displayName": "Collapsible List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the collapsible list's container.\n"
        },
                {
          "name": "expandOnlyOne",
          "type": "boolean",
          "doc": " If `true`, only one item can be expanded at a time.\n"
        },
                {
          "name": "initialExpandedItems",
          "type": "All APIs.Blog._wix_rich_content_v1_CollapsibleListData_InitialExpandedItems",
          "doc": " Sets which items are expanded when the page loads.\n"
        },
                {
          "name": "direction",
          "type": "All APIs.Blog._wix_rich_content_v1_CollapsibleListData_Direction",
          "doc": " The direction of the text in the list. Either left-to-right or right-to-left.\n"
        },
                {
          "name": "isQapageData",
          "type": "boolean",
          "doc": " If `true`, The collapsible item will appear in search results as an FAQ.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_EmbedData",
      "displayName": "Embed Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the oEmbed node's container.\n"
        },
                {
          "name": "oembed",
          "type": "All APIs.Blog._wix_rich_content_v1_Oembed",
          "doc": " An [oEmbed](https://www.oembed.com) object.\n"
        },
                {
          "name": "src",
          "type": "string",
          "doc": " Origin asset source.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableData_Dimensions",
      "displayName": "Dimensions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "colsWidthRatio",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing relative width of each column in relation to the other columns.\n"
        },
                {
          "name": "rowsHeight",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing the height of each row in pixels.\n"
        },
                {
          "name": "colsMinWidth",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing the minimum width of each column in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableData",
      "displayName": "Table Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the table's container.\n"
        },
                {
          "name": "dimensions",
          "type": "All APIs.Blog._wix_rich_content_v1_TableData_Dimensions",
          "doc": " The table's dimensions.\n"
        },
                {
          "name": "header",
          "type": "boolean",
          "doc": " Deprecated: Use `rowHeader` and `columnHeader` instead.\n",
          "deprecated": true
        },
                {
          "name": "rowHeader",
          "type": "boolean",
          "doc": " Sets whether the table's first row is a header.\n"
        },
                {
          "name": "columnHeader",
          "type": "boolean",
          "doc": " Sets whether the table's first column is a header.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_CellStyle",
      "displayName": "Cell Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "verticalAlignment",
          "type": "All APIs.Blog._wix_rich_content_v1_TableCellData_VerticalAlignment",
          "doc": " Vertical alignment for the cell's text.\n"
        },
                {
          "name": "backgroundColor",
          "type": "string",
          "doc": " Cell background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_BorderColors",
      "displayName": "Border Colors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "left",
          "type": "string",
          "doc": " Left border color as a hexadecimal value.\n"
        },
                {
          "name": "right",
          "type": "string",
          "doc": " Right border color as a hexadecimal value.\n"
        },
                {
          "name": "top",
          "type": "string",
          "doc": " Top border color as a hexadecimal value.\n"
        },
                {
          "name": "bottom",
          "type": "string",
          "doc": " Bottom border color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData",
      "displayName": "Table Cell Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cellStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_TableCellData_CellStyle",
          "doc": " Styling for the cell's background color and text alignment.\n"
        },
                {
          "name": "borderColors",
          "type": "All APIs.Blog._wix_rich_content_v1_TableCellData_BorderColors",
          "doc": " The cell's border colors.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FontSizeData",
      "displayName": "Font Size Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "unit",
          "type": "All APIs.Blog._wix_rich_content_v1_FontSizeData_fontType",
          "doc": " The units used for the font size.\n"
        },
                {
          "name": "value",
          "type": "integer",
          "doc": " Font size value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AudioData",
      "displayName": "Audio Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Blog._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the audio node's container.\n"
        },
                {
          "name": "audio",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Audio file details.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the audio node's download button is disabled.\n"
        },
                {
          "name": "coverImage",
          "type": "All APIs.Blog._wix_rich_content_v1_Media",
          "doc": " Cover image.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Track name.\n"
        },
                {
          "name": "authorName",
          "type": "string",
          "doc": " Author name.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " An HTML version of the audio node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_OrderedListData",
      "displayName": "Ordered List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_BulletedListData",
      "displayName": "Bulleted List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_BlockquoteData",
      "displayName": "Blockquote Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_RichContent",
      "displayName": "Rich Content Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nodes",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_Node"]
          },
          "doc": " Node objects representing a rich content document.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Blog._wix_rich_content_v1_Metadata",
          "doc": " Object metadata.\n"
        },
                {
          "name": "documentStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_DocumentStyle",
          "doc": " Global styling for header, paragraph, block quote, and code block nodes in the object.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node",
      "displayName": "Node Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_Node_Type",
          "doc": " Node type. Use `APP_EMBED` for nodes that embed content from other Wix apps. Use `EMBED` to embed content in [oEmbed](https://oembed.com/) format.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Node ID.\n"
        },
                {
          "name": "nodes",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_Node"]
          },
          "doc": " A list of child nodes.\n"
        },
                {
          "name": "style",
          "type": "All APIs.Blog._wix_rich_content_v1_NodeStyle",
          "doc": " Padding and background color styling for the node.\n"
        },
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_Node_data",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "buttonData",
          "type": "All APIs.Blog._wix_rich_content_v1_ButtonData",
          "doc": " Data for a button node.\n"
        },
                {
          "name": "codeBlockData",
          "type": "All APIs.Blog._wix_rich_content_v1_CodeBlockData",
          "doc": " Data for a code block node.\n"
        },
                {
          "name": "dividerData",
          "type": "All APIs.Blog._wix_rich_content_v1_DividerData",
          "doc": " Data for a divider node.\n"
        },
                {
          "name": "fileData",
          "type": "All APIs.Blog._wix_rich_content_v1_FileData",
          "doc": " Data for a file node.\n"
        },
                {
          "name": "galleryData",
          "type": "All APIs.Blog._wix_rich_content_v1_GalleryData",
          "doc": " Data for a gallery node.\n"
        },
                {
          "name": "gifData",
          "type": "All APIs.Blog._wix_rich_content_v1_GIFData",
          "doc": " Data for a GIF node.\n"
        },
                {
          "name": "headingData",
          "type": "All APIs.Blog._wix_rich_content_v1_HeadingData",
          "doc": " Data for a heading node.\n"
        },
                {
          "name": "htmlData",
          "type": "All APIs.Blog._wix_rich_content_v1_HTMLData",
          "doc": " Data for an embedded HTML node. \n"
        },
                {
          "name": "imageData",
          "type": "All APIs.Blog._wix_rich_content_v1_ImageData",
          "doc": " Data for an image node.\n"
        },
                {
          "name": "linkPreviewData",
          "type": "All APIs.Blog._wix_rich_content_v1_LinkPreviewData",
          "doc": " Data for a link preview node.\n"
        },
                {
          "name": "mapData",
          "type": "All APIs.Blog._wix_rich_content_v1_MapData",
          "doc": " Data for a map node.\n"
        },
                {
          "name": "paragraphData",
          "type": "All APIs.Blog._wix_rich_content_v1_ParagraphData",
          "doc": " Data for a paragraph node.\n"
        },
                {
          "name": "pollData",
          "type": "All APIs.Blog._wix_rich_content_v1_PollData",
          "doc": " Data for a poll node.\n"
        },
                {
          "name": "textData",
          "type": "All APIs.Blog._wix_rich_content_v1_TextData",
          "doc": " Data for a text node. Used to apply decorations to text.\n"
        },
                {
          "name": "appEmbedData",
          "type": "All APIs.Blog._wix_rich_content_v1_AppEmbedData",
          "doc": " Data for an app embed node.\n"
        },
                {
          "name": "videoData",
          "type": "All APIs.Blog._wix_rich_content_v1_VideoData",
          "doc": " Data for a video node.\n"
        },
                {
          "name": "embedData",
          "type": "All APIs.Blog._wix_rich_content_v1_EmbedData",
          "doc": " Data for an oEmbed node.\n"
        },
                {
          "name": "collapsibleListData",
          "type": "All APIs.Blog._wix_rich_content_v1_CollapsibleListData",
          "doc": " Data for a collapsible list node.\n"
        },
                {
          "name": "tableData",
          "type": "All APIs.Blog._wix_rich_content_v1_TableData",
          "doc": " Data for a table node.\n"
        },
                {
          "name": "tableCellData",
          "type": "All APIs.Blog._wix_rich_content_v1_TableCellData",
          "doc": " Data for a table cell node.\n"
        },
                {
          "name": "externalData",
          "type": "All APIs.Blog._wix_rich_content_v1_Struct",
          "doc": " Data for a custon external node.\n"
        },
                {
          "name": "audioData",
          "type": "All APIs.Blog._wix_rich_content_v1_AudioData",
          "doc": " Data for an audio node.\n"
        },
                {
          "name": "orderedListData",
          "type": "All APIs.Blog._wix_rich_content_v1_OrderedListData",
          "doc": " Data for an ordered list node.\n"
        },
                {
          "name": "bulletedListData",
          "type": "All APIs.Blog._wix_rich_content_v1_BulletedListData",
          "doc": " Data for a bulleted list node.\n"
        },
                {
          "name": "blockquoteData",
          "type": "All APIs.Blog._wix_rich_content_v1_BlockquoteData",
          "doc": " Data for a block quote node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_NodeStyle",
      "displayName": "Node Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paddingTop",
          "type": "string",
          "doc": " The top padding value in pixels.\n"
        },
                {
          "name": "paddingBottom",
          "type": "string",
          "doc": " The bottom padding value in pixels.\n"
        },
                {
          "name": "backgroundColor",
          "type": "string",
          "doc": " The background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextData",
      "displayName": "Text Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "text",
          "type": "string",
          "doc": " The text to apply decorations to.\n"
        },
                {
          "name": "decorations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_Decoration"]
          },
          "doc": " The decorations to apply.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration",
      "displayName": "Decoration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Blog._wix_rich_content_v1_Decoration_Type",
          "doc": " The type of decoration to apply. \n"
        },
                {
          "name": "data",
          "type": "All APIs.Blog._wix_rich_content_v1_Decoration_data",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "anchorData",
          "type": "All APIs.Blog._wix_rich_content_v1_AnchorData",
          "doc": " Data for an anchor link decoration.\n"
        },
                {
          "name": "colorData",
          "type": "All APIs.Blog._wix_rich_content_v1_ColorData",
          "doc": " Data for a color decoration.\n"
        },
                {
          "name": "linkData",
          "type": "All APIs.Blog._wix_rich_content_v1_LinkData",
          "doc": " Data for an external link decoration.\n"
        },
                {
          "name": "mentionData",
          "type": "All APIs.Blog._wix_rich_content_v1_MentionData",
          "doc": " Data for a mention decoration.\n"
        },
                {
          "name": "fontSizeData",
          "type": "All APIs.Blog._wix_rich_content_v1_FontSizeData",
          "doc": " Data for a font size decoration.\n"
        },
                {
          "name": "fontWeightValue",
          "type": "integer",
          "doc": " Font weight for a bold decoration.\n"
        },
                {
          "name": "italicData",
          "type": "boolean",
          "doc": " Data for an italic decoration.\n"
        },
                {
          "name": "underlineData",
          "type": "boolean",
          "doc": " Data for an underline decoration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_Metadata",
      "displayName": "Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "version",
          "type": "integer",
          "doc": " Schema version.\n"
        },
                {
          "name": "createdTimestamp",
          "type": "string",
          "doc": " When the object was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedTimestamp",
          "type": "string",
          "doc": " When the object was most recently updated.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Object ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextNodeStyle",
      "displayName": "Text Node Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "decorations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_rich_content_v1_Decoration"]
          },
          "doc": " The decorations to apply to the node.\n"
        },
                {
          "name": "nodeStyle",
          "type": "All APIs.Blog._wix_rich_content_v1_NodeStyle",
          "doc": " Padding and background color for the node.\n"
        },
                {
          "name": "lineHeight",
          "type": "string",
          "doc": " Line height for text in the node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DocumentStyle",
      "displayName": "Document Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "headerOne",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H1 nodes.\n"
        },
                {
          "name": "headerTwo",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H2 nodes.\n"
        },
                {
          "name": "headerThree",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H3 nodes.\n"
        },
                {
          "name": "headerFour",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H4 nodes.\n"
        },
                {
          "name": "headerFive",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H5 nodes.\n"
        },
                {
          "name": "headerSix",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H6 nodes.\n"
        },
                {
          "name": "paragraph",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for paragraph nodes.\n"
        },
                {
          "name": "blockquote",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for block quote nodes.\n"
        },
                {
          "name": "codeBlock",
          "type": "All APIs.Blog._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for code block nodes.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
      "displayName": "Draft Post Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"draftPost\" : {\n    \"id\" : \"448d1238-0072-4458-a280-bf81c2dd8af1\",\n    \"title\" : \"Places to visit in europe\",\n    \"featured\" : false,\n    \"categoryIds\" : [ ],\n    \"memberId\" : \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n    \"hashtags\" : [ ],\n    \"commentingEnabled\" : true,\n    \"minutesToRead\" : 0,\n    \"tagIds\" : [ ],\n    \"relatedPostIds\" : [ ],\n    \"pricingPlanIds\" : [ ],\n    \"language\" : \"en\",\n    \"changeOrigin\" : \"AUTO_SAVE\",\n    \"contentId\" : \"622f285f7952527f485bc138\",\n    \"editingSessionId\" : \"0aca7f65-1237-482e-bf51-6d14102ee691\",\n    \"status\" : \"UNPUBLISHED\",\n    \"mostRecentContributorId\" : \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n    \"hasUnpublishedChanges\" : true,\n    \"editedDate\" : \"2022-03-14T11:34:55.121Z\",\n    \"seoData\" : {\n      \"tags\" : [ ]\n    },\n    \"seoShowInSearch\" : true,\n    \"seoShowSnippetInSearch\" : true,\n    \"slugs\" : [ ],\n    \"createdDate\" : \"2022-03-14T11:34:55.121Z\"\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Draft post ID.\n",
          "readOnly": true
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Draft post title.\n"
        },
                {
          "name": "excerpt",
          "type": "string",
          "doc": " Draft post excerpt.\n\n If no excerpt has been manually set, an excerpt is automatically generated from the post's text.\n This can be retrieved using the `GENERATED_EXCERPT` fieldset.\n"
        },
                {
          "name": "featured",
          "type": "boolean",
          "doc": " Whether the draft post is marked as featured.\n"
        },
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category IDs of the draft post.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Draft post owner's member ID.\n"
        },
                {
          "name": "hashtags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Hashtags in the post.\n"
        },
                {
          "name": "commentingEnabled",
          "type": "boolean",
          "doc": " Whether commenting on the draft post is enabled.\n"
        },
                {
          "name": "minutesToRead",
          "type": "integer",
          "doc": " Estimated reading time of the draft post (calculated automatically).\n",
          "readOnly": true
        },
                {
          "name": "heroImage",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Image placed at the top of the blog page.\n"
        },
                {
          "name": "tagIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tag IDs the draft post is tagged with.\n"
        },
                {
          "name": "relatedPostIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of posts related to this draft post.\n"
        },
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " [Pricing plan IDs](https://dev.wix.com/api/rest/wix-pricing-plans). Only relevant if a post is assigned to a specific pricing plan.\n"
        },
                {
          "name": "translationId",
          "type": "string",
          "doc": " ID of the draft post's translations.\n\n All translations of a single post share the same `translationId`.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language the draft post is written in.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
                {
          "name": "changeOrigin",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ChangeOrigin_Origin",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "contentId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "editingSessionId",
          "type": "string",
          "doc": " Reserved for internal use.\n"
        },
                {
          "name": "richContent",
          "type": "All APIs.Blog._wix_rich_content_v1_RichContent",
          "doc": " Draft Post rich content.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
          "doc": " Status of the draft post.\n",
          "readOnly": true
        },
                {
          "name": "moderationDetails",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ModerationDetails",
          "doc": " Details of the draft post in review. Only relevant to posts submitted by guest writers.\n"
        },
                {
          "name": "mostRecentContributorId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "hasUnpublishedChanges",
          "type": "boolean",
          "doc": " Indicates if there are changes made to the draft post that have not yet been published.\n",
          "readOnly": true
        },
                {
          "name": "editedDate",
          "type": "string",
          "doc": " Date the draft post was last edited.\n",
          "readOnly": true
        },
                {
          "name": "scheduledPublishDate",
          "type": "string",
          "doc": " Date the draft post is scheduled to be published.\n",
          "readOnly": true
        },
                {
          "name": "content",
          "type": "struct",
          "doc": " Reserved for internal use.\n"
        },
                {
          "name": "firstPublishedDate",
          "type": "string",
          "doc": " Date the post was first published.\n"
        },
                {
          "name": "seoData",
          "type": "All APIs.Blog._com_wixpress_advanced_seo_SeoSchema",
          "doc": " SEO data.\n"
        },
                {
          "name": "paidContentParagraph",
          "type": "integer",
          "doc": " Reserved for internal use.\n",
          "deprecated": true
        },
                {
          "name": "slugs",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Draft post URL preview. What the URL will look like once the post is published.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date the draft post was first created.\n",
          "readOnly": true
        },
                {
          "name": "seoSlug",
          "type": "string",
          "doc": " SEO slug.\n"
        },
                {
          "name": "media",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Media",
          "doc": " Post cover media.\n"
        },
                {
          "name": "previewTextParagraph",
          "type": "integer",
          "doc": " Number of paragraphs to display in a paid content preview for non-paying users.\n"
        },
                {
          "name": "internalId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostTranslation",
      "displayName": "Draft Post Translation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Post ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
          "doc": " Post status.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language the post is written in.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Post slug. For example, 'post-slug'.\n"
        },
                {
          "name": "seoData",
          "type": "All APIs.Blog._com_wixpress_advanced_seo_SeoSchema",
          "doc": " SEO data.\n"
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Post URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ModerationDetails",
      "displayName": "Moderation Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "submittedBy",
          "type": "string",
          "doc": " Member ID of the person submitting the draft post for review.\n"
        },
                {
          "name": "submittedDate",
          "type": "string",
          "doc": " Date the post was submitted for review.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ModerationStatus_Status",
          "doc": " Status indicating whether the submission was approved or rejected by the moderator.\n"
        },
                {
          "name": "moderatedBy",
          "type": "string",
          "doc": " Member ID of the person who approved or rejected the post.\n"
        },
                {
          "name": "moderationDate",
          "type": "string",
          "doc": " Date the post was approved or rejected.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkDraftPostResult",
      "displayName": "Bulk Draft Post Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Blog._wix_common_ItemMetadata",
          "doc": " Bulk actions metadata for draft post.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Optional full draft post.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_Metrics",
      "displayName": "Metrics Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "comments",
          "type": "integer",
          "doc": " Total number of post comments.\n",
          "readOnly": true
        },
                {
          "name": "likes",
          "type": "integer",
          "doc": " Total number of post likes.\n",
          "readOnly": true
        },
                {
          "name": "views",
          "type": "integer",
          "doc": " Total number of post views.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountInfo",
      "displayName": "Post Count Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "comments",
          "type": "integer",
          "doc": " Total number of post comments\n",
          "readOnly": true
        },
                {
          "name": "likes",
          "type": "integer",
          "doc": " Total number of post likes\n",
          "readOnly": true
        },
                {
          "name": "views",
          "type": "integer",
          "doc": " Total number of post views\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_Post",
      "displayName": "Post Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"post\" : {\n    \"id\" : \"c9402bb3-2568-4f4d-9d2c-9b0aabf7f6d2\",\n    \"title\" : \"Best peppers for peppercorn sauce\",\n    \"excerpt\" : \"Let's talk about choosing best peppers for amazing peppercorn sauce... #tasty #spices #fine #dining\",\n    \"contentText\" : \"Let's talk about choosing best peppers for amazing peppercorn sauce... #tasty #spices #fine #dining\",\n    \"firstPublishedDate\" : \"2021-03-18T11:45:14.164Z\",\n    \"lastPublishedDate\" : \"2021-03-18T12:42:16.183Z\",\n    \"url\" : {\n      \"base\" : \"https://tadaso7.wixsite.com/website\",\n      \"path\" : \"/post/best-peppers-for-peppercorn-sauce\"\n    },\n    \"slug\" : \"best-peppers-for-peppercorn-sauce\",\n    \"featured\" : false,\n    \"pinned\" : false,\n    \"categoryIds\" : [ \"a68da372-6bfa-412c-ad29-a3f1000ea3f2\" ],\n    \"coverMedia\" : {\n      \"image\" : {\n        \"id\" : \"b88f2d5da73042e2b86399ab9f21367f.jpg\",\n        \"url\" : \"https://static.wixstatic.com/media/b88f2d5da73042e2b86399ab9f21367f.jpg\",\n        \"height\" : 714,\n        \"width\" : 1000\n      },\n      \"displayed\" : true\n    },\n    \"memberId\" : \"2d24cb8a-adcc-466a-ab59-fa74e0889a37\",\n    \"hashtags\" : [ \"tasty\", \"spices\", \"fine\", \"dining\" ],\n    \"commentingEnabled\" : true,\n    \"minutesToRead\" : 1,\n    \"tagIds\" : [ \"edd159e5-603f-4826-a668-8d8cc037ab6d\", \"f97a485e-e4ae-4905-86f7-aaa9998672fb\", \"a337e5fb-d9b6-46af-ab34-d2cf71f7aa2b\" ],\n    \"pricingPlans\" : [ \"59774fbf-7f6c-4604-bb10-b265c07059c0\" ],\n    \"relatedPostIds\" : [ \"230ef0e7-7951-4229-b3fb-fdadc237a5f2\" ],\n    \"pricingPlanIds\" : [ \"59774fbf-7f6c-4604-bb10-b265c07059c0\" ],\n    \"language\" : \"en\",\n    \"metrics\" : {\n      \"comments\" : 0,\n      \"likes\" : 0,\n      \"views\" : 0\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Post ID.\n",
          "readOnly": true
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Post title.\n"
        },
                {
          "name": "excerpt",
          "type": "string",
          "doc": " Post excerpt.\n Can be selected by a site contributor. By default, it is extracted from the content text's first characters.\n\n Max: 140 characters\n"
        },
                {
          "name": "contentText",
          "type": "string",
          "doc": " The post's content in plain text.\n",
          "readOnly": true
        },
                {
          "name": "firstPublishedDate",
          "type": "string",
          "doc": " Date the post was first published.\n"
        },
                {
          "name": "lastPublishedDate",
          "type": "string",
          "doc": " Date the post was last published.\n",
          "readOnly": true
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Post URL.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Post slug. For example, `'post-slug'`.\n"
        },
                {
          "name": "featured",
          "type": "boolean",
          "doc": " Whether the post is marked as featured.\n"
        },
                {
          "name": "pinned",
          "type": "boolean",
          "doc": " Whether the post is pinned. If `true`, the post is placed at the top of the post list.\n"
        },
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " [Category IDs](https://dev.wix.com/api/rest/wix-blog/blog/categories) of the post.\n"
        },
                {
          "name": "coverMedia",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_CoverMedia",
          "doc": " __Deprecated.__ Use `media` instead.\n This property will be removed on June 30, 2023.\n\n Post cover media.\n",
          "deprecated": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Post owner's [member ID](https://dev.wix.com/api/rest/members).\n"
        },
                {
          "name": "hashtags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Hashtags in the post.\n",
          "readOnly": true
        },
                {
          "name": "commentingEnabled",
          "type": "boolean",
          "doc": " Whether commenting on the post is enabled.\n"
        },
                {
          "name": "minutesToRead",
          "type": "integer",
          "doc": " Estimated reading time (calculated automatically).\n"
        },
                {
          "name": "heroImage",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Image placed at the top of the blog page.\n"
        },
                {
          "name": "tagIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of [tags](https://dev.wix.com/api/rest/wix-blog/blog/tags) the post is tagged with.\n",
          "readOnly": true
        },
                {
          "name": "relatedPostIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of posts related to the post.\n",
          "readOnly": true
        },
                {
          "name": "pricingPlanIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " [Pricing plan IDs](https://dev.wix.com/api/rest/wix-pricing-plans). Only relevant if a post is assigned to a specific pricing plan.\n",
          "readOnly": true
        },
                {
          "name": "translationId",
          "type": "string",
          "doc": " ID of the translations of this post. All translations of a single post share the same `translationId`.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language the post is written in.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
                {
          "name": "seoData",
          "type": "All APIs.Blog._com_wixpress_advanced_seo_SeoSchema",
          "doc": " SEO data.\n"
        },
                {
          "name": "content",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Post owner's [contact ID](https://dev.wix.com/api/rest/contacts).\n"
        },
                {
          "name": "richContent",
          "type": "All APIs.Blog._wix_rich_content_v1_RichContent",
          "doc": " Post rich content\n",
          "readOnly": true
        },
                {
          "name": "contentId",
          "type": "string",
          "doc": " Reserved for internal use.\n"
        },
                {
          "name": "mostRecentContributorId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "moderationDetails",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ModerationDetails",
          "doc": " Post moderation details. Only relevant to posts submitted by [guest writers](https://support.wix.com/en/article/wix-blog-moderating-blog-posts-from-your-guest-writers).\n",
          "readOnly": true
        },
                {
          "name": "media",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_Media",
          "doc": " Post cover media.\n"
        },
                {
          "name": "internalId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "internalCategoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "internalRelatedPostIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"category\" : {\n    \"id\" : \"5f2bcaa0879ad500173577f3\",\n    \"label\" : \"Summer\",\n    \"postCount\" : 1,\n    \"url\" : {\n      \"base\" : \"https://some-user.wixsite.com/my-site\",\n      \"path\" : \"/blog/categories/summer-slug\"\n    },\n    \"description\" : \"Posts about my summer\",\n    \"title\" : \"Summer\",\n    \"coverMedia\" : {\n      \"displayed\" : true\n    },\n    \"displayPosition\" : 1,\n    \"language\" : \"en\",\n    \"slug\" : \"summer-slug\"\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n",
          "readOnly": true
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Category label. Displayed in the Category Menu.\n"
        },
                {
          "name": "postCount",
          "type": "integer",
          "doc": " Number of posts in the category.\n",
          "readOnly": true
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Category URL.\n",
          "readOnly": true
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Category description.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Category title.\n"
        },
                {
          "name": "coverMedia",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_CoverMedia",
          "doc": " __Deprecated.__ Use `coverImage` instead.\n This property will be removed on June 30, 2023.\n\n Category cover image or video.\n",
          "deprecated": true
        },
                {
          "name": "oldRank",
          "type": "integer",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "rank",
          "type": "integer",
          "doc": " __Deprecated.__ Use `displayPosition` instead.\n This property will be removed on June 30, 2023.\n\n Category position in sequence.\n"
        },
                {
          "name": "displayPosition",
          "type": "integer",
          "doc": " Category position in sequence. Categories with a lower display position are displayed first. Categories with a position of `-1` appear at the end of the sequence.\n\n Default: `-1`\n"
        },
                {
          "name": "translationId",
          "type": "string",
          "doc": " ID of the category's translations. All translations of a single category share the same `translationId`.\n",
          "readOnly": true
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Category language.\n\n Two-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Category slug. For example, `'category-slug'`.\n"
        },
                {
          "name": "internalId",
          "type": "string",
          "doc": " Reserved for internal use.\n",
          "readOnly": true
        },
                {
          "name": "seoData",
          "type": "All APIs.Blog._com_wixpress_advanced_seo_SeoSchema",
          "doc": " SEO data.\n"
        },
                {
          "name": "coverImage",
          "type": "All APIs.Blog._wix_common_Image",
          "doc": " Category cover image.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkCategoryResult",
      "displayName": "Bulk Category Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Blog._wix_common_ItemMetadata",
          "doc": " Bulk actions metadata for category.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Optional created category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TranslateCategoryRequest",
      "displayName": "Translate Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Source category ID\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Translation language\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TranslateCategoryResponse",
      "displayName": "Translate Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Translated category\n"
        },
                {
          "name": "translations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryTranslation"]
          },
          "doc": " Other translations of returned category\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryTranslation",
      "displayName": "Category Translation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Label which is presented in the categories menu on site\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language of the category\n"
        },
                {
          "name": "url",
          "type": "All APIs.Blog._wix_common_PageUrl",
          "doc": " Url of this category page\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TranslateDraftRequest",
      "displayName": "Translate Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " Source post or draft ID\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Translation language\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of draft post fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core draft post properties.\n Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TranslateDraftResponse",
      "displayName": "Translate Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Draft post.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_IsDraftPostAutoTranslatableRequest",
      "displayName": "Is Draft Post Auto Translatable Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Source post or draft ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_IsDraftPostAutoTranslatableResponse",
      "displayName": "Is Draft Post Auto Translatable Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPostId",
          "type": "string",
          "doc": " Source draft post ID.\n"
        },
                {
          "name": "translatable",
          "type": "boolean",
          "doc": " Indicates if enough machine translation credits are available for the draft post translation.\n"
        },
                {
          "name": "titleWordCount",
          "type": "integer",
          "doc": " Draft post title word count.\n"
        },
                {
          "name": "contentWordCount",
          "type": "integer",
          "doc": " Draft post content word count.\n"
        },
                {
          "name": "availableAutoTranslateWords",
          "type": "integer",
          "doc": " Word credits available for auto translation.\n"
        },
                {
          "name": "availableAutoTranslateWordsAfter",
          "type": "integer",
          "doc": " Word credits available after auto translation would be done.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostLanguageRequest",
      "displayName": "Update Draft Post Language Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " Source draft post ID\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " New language to replace to\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of draft post fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core draft post properties.\n Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateDraftPostLanguageRequest",
      "displayName": "Bulk Update Draft Post Language Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ids",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Source post or draft IDs\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " New language to replace to\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Should full draft post be returned\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of draft post fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core draft post properties.\n Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateDraftPostLanguageResponse",
      "displayName": "Bulk Update Draft Post Language Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkDraftPostResult"]
          },
          "doc": " Bulk action results\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostLanguageResponse",
      "displayName": "Update Draft Post Language Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Draft post\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostAmountByLanguage",
      "displayName": "Post Amount By Language Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "languageCode",
          "type": "string",
          "doc": " Post language code\n"
        },
                {
          "name": "flag",
          "type": "string",
          "doc": " Language flag\n"
        },
                {
          "name": "postAmount",
          "type": "integer",
          "doc": " Post amount in that language\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostAmountsByLanguageRequest",
      "displayName": "Get Post Amounts By Language Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "status",
        "type": "string",
        "doc": " Post status to filter by\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostAmountsByLanguageResponse",
      "displayName": "Get Post Amounts By Language Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postAmountsByLanguage",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostAmountByLanguage"]
        },
        "doc": " Post amounts by language\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
      "displayName": "Platform Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CreateCategoryRequest",
      "displayName": "Create Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Category info.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CreateCategoryResponse",
      "displayName": "Create Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": " Category info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkCreateCategoriesRequest",
      "displayName": "Bulk Create Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category"]
          },
          "doc": " Categories to create.\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full created category entities in the response.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateCategoriesRequest",
      "displayName": "Bulk Update Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_MaskedCategory"]
          },
          "doc": " Categories to update.\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full created category entities in the response.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of category fields to be included in the response if the entities are present.\n Base default fieldset returns all core category properties (all properties that are not a supported fieldset value).\n For example, when `URL` fieldset is selected, returned category will include the set of base properties and the category's preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_MaskedCategory",
      "displayName": "Masked Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Category\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkCreateCategoriesResponse",
      "displayName": "Bulk Create Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkCategoryResult"]
          },
          "doc": " Categories created by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateCategoriesResponse",
      "displayName": "Bulk Update Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkCategoryResult"]
          },
          "doc": " Categories updated by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetCategoryRequest",
      "displayName": "Get Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetCategoryResponse",
      "displayName": "Get Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": " Category info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateCategoryRequest",
      "displayName": "Update Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
          "doc": " Category info.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateCategoryResponse",
      "displayName": "Update Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": " Category info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListCategoriesRequest",
      "displayName": "List Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListCategoriesResponse",
      "displayName": "List Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category"]
          },
          "doc": " List of categories.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryCategoriesRequest",
      "displayName": "Query Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "deprecated": true
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n",
          "deprecated": true
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 3, 2023.\n\n Sorting options.\n",
          "deprecated": true
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of category fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryCategoriesResponse",
      "displayName": "Query Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category"]
          },
          "doc": " List of categories.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " __Deprecated.__ Use `pagingMetadata` instead.\n This property will be removed on June 30, 2023.\n\n Details on the paged set of results returned.\n",
          "deprecated": true
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetCategoryBySlugRequest",
      "displayName": "Get Category By Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slug",
          "type": "string",
          "doc": " Slug of the category to retrieve.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n\n This parameter will be removed on June 30, 2023.\n List of category fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field"]
          },
          "doc": " List of additional category fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the category’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the category’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetCategoryBySlugResponse",
      "displayName": "Get Category By Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Category",
        "doc": " Category info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DeleteCategoryRequest",
      "displayName": "Delete Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoryId",
        "type": "string",
        "doc": " Category ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DeleteCategoryResponse",
      "displayName": "Delete Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialCategoriesCopied",
      "displayName": "Initial Categories Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " Number of categories copied.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_Reactions",
      "displayName": "Reactions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "liked",
        "type": "boolean",
        "doc": " Is post liked by the current user\n",
        "readOnly": true
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ViewPostRequest",
      "displayName": "View Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postId",
        "type": "string",
        "doc": " Post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ViewPostResponse",
      "displayName": "View Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "views",
        "type": "integer",
        "doc": " Total number of post views\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PinPostRequest",
      "displayName": "Pin Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " Post ID.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PinPostResponse",
      "displayName": "Pin Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "post",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": " Post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UnpinPostRequest",
      "displayName": "Unpin Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " Post ID.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UnpinPostResponse",
      "displayName": "Unpin Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "post",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": " Post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostRequest",
      "displayName": "Get Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " Post ID.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostResponse",
      "displayName": "Get Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "post",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": " Post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostBySlugRequest",
      "displayName": "Get Post By Slug Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slug",
          "type": "string",
          "doc": " Slug of the post to retrieve.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostBySlugResponse",
      "displayName": "Get Post By Slug Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "post",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post",
        "doc": " Post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListPostsRequest",
      "displayName": "List Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "featured",
          "type": "boolean",
          "doc": " Whether to return only featured posts.\n\n Default: `false`\n"
        },
                {
          "name": "hashtags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Hashtag filter.\n\n Pass an array of hashtags to return only posts containing any of the provided hashtags.\n If omitted, all posts with or without hashtags are returned.\n"
        },
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category filter.\n\n Pass an array of category IDs to return only posts with any of the provided categories.\n If omitted, all posts with or without associated categories are returned.\n"
        },
                {
          "name": "tagIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tag filter.\n\n Pass an array of tag IDs to return only posts with any of the provided tags.\n If omitted, all posts with or without tags are returned.\n"
        },
                {
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetPostsSort",
          "doc": " Sorting options.\n\n - `FEED`: Ordered by `firstPublishedDate` in descending order with pinned posts first.\n - `VIEW_COUNT`: Ordered by total number of views in descending order.\n - `LIKE_COUNT`: Ordered by total number of likes in descending order.\n - `PUBLISHED_DATE_ASC`: Ordered by `firstPublishedDate` in ascending order.\n - `PUBLISHED_DATE_DESC`: Ordered by `firstPublishedDate` in descending order.\n - `TITLE_ASC`: Ordered by `title` in ascening order.\n - `TITLE_DESC`: Ordered by `title` in descending order.\n - `RATING`: reserved for internal use.\n\n Default: `FEED`\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to only receive posts that are in that language.\n If omitted, posts in all languages are returned.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Post owner's member ID.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListPostsArchiveRequest",
      "displayName": "List Posts Archive Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "month",
          "type": "integer",
          "doc": " Month\n"
        },
                {
          "name": "year",
          "type": "integer",
          "doc": " Year\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Time zone\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Pass a language to only receive posts that are in that language.\n If omitted, posts in all languages are returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListPostsResponse",
      "displayName": "List Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "posts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post"]
          },
          "doc": " List of posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListPostsArchiveResponse",
      "displayName": "List Posts Archive Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "posts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post"]
          },
          "doc": " List of posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryPostsRequest",
      "displayName": "Query Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Pagination options.\n",
          "deprecated": true
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Filter object.\n",
          "deprecated": true
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._wix_common_Sorting"]
          },
          "doc": " __Deprecated.__ Use `query` instead.\n This parameter will be removed on June 30, 2023.\n\n Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/wix-blog/blog/filter-and-sort).\n",
          "deprecated": true
        },
                {
          "name": "fieldsToInclude",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " __Deprecated.__ Use `fieldsets` instead.\n This parameter will be removed on June 30, 2023.\n\n List of post fields to be included in the response.\n",
          "deprecated": true
        },
                {
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostField_Field"]
          },
          "doc": " List of additional post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the post’s base fields. Base fields don’t include any of the supported fieldset values. By default\n only the post’s base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryPostsResponse",
      "displayName": "Query Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "posts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Post"]
          },
          "doc": " List of posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " __Deprecated.__ Use `pagingMetadata` instead.\n This property will be removed on June 30, 2023.\n\n Details on the paged set of results returned.\n",
          "deprecated": true
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostMetricsRequest",
      "displayName": "Get Post Metrics Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postId",
        "type": "string",
        "doc": " Post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkGetPostMetricsRequest",
      "displayName": "Bulk Get Post Metrics Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Post IDs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkGetPostReactionsRequest",
      "displayName": "Bulk Get Post Reactions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Post IDs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "reactionsMapMapEntry",
      "displayName": "reactions Map Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Map of post.id to reactions\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Reactions",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkGetPostReactionsResponse",
      "displayName": "Bulk Get Post Reactions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reactionsMap",
        "type": "All APIs.Blog.reactionsMapMapEntry",
        "doc": "Set of key-value pairs. Map of post.id to reactions\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostMetricsResponse",
      "displayName": "Get Post Metrics Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metrics",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Metrics",
        "doc": " Post metrics.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "metricsMapEntry",
      "displayName": "metrics Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Map of post.id to metrics\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_Metrics",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkGetPostMetricsResponse",
      "displayName": "Bulk Get Post Metrics Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metrics",
        "type": "All APIs.Blog.metricsMapEntry",
        "doc": "Set of key-value pairs. Map of post.id to metrics\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostLiked",
      "displayName": "Post Liked Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " ID of the liked post.\n"
        },
                {
          "name": "initiator",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostLiked_initiator",
          "doc": " ID of a person who liked the post.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostLiked_initiator",
      "displayName": "initiator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of person who liked the post (only returned when the member was logged in when liking the post).\n"
        },
                {
          "name": "anonymousVisitorId",
          "type": "string",
          "doc": " Visitor ID of person who liked the post when they are not logged in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostUnliked",
      "displayName": "Post Unliked Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " ID of the unliked post.\n"
        },
                {
          "name": "initiator",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostUnliked_initiator",
          "doc": " ID of a person who unliked the post.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostUnliked_initiator",
      "displayName": "initiator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of person who unliked the post (returned when the member was logged in when unliking the post).\n"
        },
                {
          "name": "anonymousVisitorId",
          "type": "string",
          "doc": " Visitor ID of person who unliked the post when they are not logged in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdated",
      "displayName": "Post Counters Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postId",
          "type": "string",
          "doc": " ID of the post which counters were updated.\n"
        },
                {
          "name": "updatedCounterField",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdatedField_Field",
          "doc": " Field of the updated counter.\n"
        },
                {
          "name": "counter",
          "type": "integer",
          "doc": " New counter value.\n"
        },
                {
          "name": "initiator",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdated_initiator",
          "doc": " Id of a person who triggered the counter update\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdated_initiator",
      "displayName": "initiator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of person who triggered the counter update\n"
        },
                {
          "name": "anonymousVisitorId",
          "type": "string",
          "doc": " Visitor ID if person that liked the post is not logged in\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostOwnerChanged",
      "displayName": "Post Owner Changed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialPostsCopied",
      "displayName": "Initial Posts Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " Number of posts copied.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostOwnerChanged",
      "displayName": "Draft Post Owner Changed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CreateDraftPostRequest",
      "displayName": "Create Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPost",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Draft post to create.\n"
        },
                {
          "name": "publish",
          "type": "boolean",
          "doc": " Whether the draft post should be published on creation.\n\n Default: `false`\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CreateDraftPostResponse",
      "displayName": "Create Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Created draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkCreateDraftPostsRequest",
      "displayName": "Bulk Create Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost"]
          },
          "doc": " Draft posts to create.\n"
        },
                {
          "name": "publish",
          "type": "boolean",
          "doc": " Whether the draft post should be published after creation.\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full created draft post entities in the response.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of draft post fields to be included in the response if the entities are present.\n Base default fieldset returns all core draft post properties (all properties that are not a supported fieldset value).\n For example,  when `URL` fieldset is selected, returned draft post will include the set of base properties and the draft post's preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkCreateDraftPostsResponse",
      "displayName": "Bulk Create Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkDraftPostResult"]
          },
          "doc": " Draft posts created by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateDraftPostsRequest",
      "displayName": "Bulk Update Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_MaskedDraftPosts"]
          },
          "doc": " Draft posts to update.\n"
        },
                {
          "name": "action",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdateAction_Action",
          "doc": " Action to perform on the posts.\n\n - `UPDATE`: Update the draft post.\n - `UPDATE_PUBLISH`: Update and publish the draft post.\n - `UPDATE_SCHEDULE`: Update the draft post and schedule a publish date.\n - `UPDATE_REVERT_TO_DRAFT`: Update the post and revert it to a draft post.\n - `UPDATE_CANCEL_SCHEDULE`: Update the draft post and cancel the scheduled publish date.\n - `UPDATE_REJECT`: Update and reject draft post.\n - `UPDATE_PUBLICATION`: Update a published post. This creates and updates a draft version of the post. The original post is still published.\n\n Default: `UPDATE`\n"
        },
                {
          "name": "scheduledPublishDate",
          "type": "string",
          "doc": " Posts' scheduled publish date when `action` is set to `UPDATE_SCHEDULE`.\n"
        },
                {
          "name": "returnFullEntity",
          "type": "boolean",
          "doc": " Whether to return the full updated draft post entities in the response.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_MaskedDraftPosts",
      "displayName": "Masked Draft Posts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPost",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Draft post\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkUpdateDraftPostsResponse",
      "displayName": "Bulk Update Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkDraftPostResult"]
          },
          "doc": " Draft posts updated by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostRequest",
      "displayName": "Get Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPostId",
          "type": "string",
          "doc": " Draft post ID.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostResponse",
      "displayName": "Get Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDeletedDraftPostRequest",
      "displayName": "Get Deleted Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDeletedDraftPostResponse",
      "displayName": "Get Deleted Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostContentRequest",
      "displayName": "Update Draft Post Content Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPostId",
          "type": "string",
          "doc": " Draft post ID.\n"
        },
                {
          "name": "content",
          "type": "string",
          "doc": " Content to update.\n"
        },
                {
          "name": "changeOrigin",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_ChangeOrigin_Origin",
          "doc": " Change origin.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of draft post fields to be included if entities are present in the response.\n Base fieldset, which is default, will return all core draft post properties.\n Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostContentResponse",
      "displayName": "Update Draft Post Content Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Updated draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostRequest",
      "displayName": "Update Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPost",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
          "doc": " Draft post to update.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Blog._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        },
                {
          "name": "action",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdateAction_Action",
          "doc": " Action to perform on the post.\n\n - `UPDATE`: Update the draft post.\n - `UPDATE_PUBLISH`: Update and publish a draft post.\n - `UPDATE_SCHEDULE`: Update the draft post and schedule a publish date.\n - `UPDATE_REVERT_TO_DRAFT`: Update the post and revert it to draft.\n - `UPDATE_CANCEL_SCHEDULE`: Update the draft post and cancel the scheduled publish date.\n - `UPDATE_REJECT`: Update and reject draft post.\n - `UPDATE_PUBLICATION`: Update a post that's already been published. This creates and updates a draft version of the post. The original post is still published.\n\n Default: `UPDATE`\n"
        },
                {
          "name": "scheduledPublishDate",
          "type": "string",
          "doc": " Post publish schedule date if `action` is set to `UPDATE_SCHEDULE`.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UpdateDraftPostResponse",
      "displayName": "Update Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Updated draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DeleteDraftPostRequest",
      "displayName": "Delete Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPostId",
          "type": "string",
          "doc": " Draft post ID.\n"
        },
                {
          "name": "permanent",
          "type": "boolean",
          "doc": " Whether to bypass the trash bin and delete the post permanently.\n\n Default: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DeleteDraftPostResponse",
      "displayName": "Delete Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListDeletedDraftPostsRequest",
      "displayName": "List Deleted Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, deleted draft posts in all languages are returned.\n"
        },
                {
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostsSort",
          "doc": " Sorting options.\n\n - `EDITING_DATE_ASC`: `editedDate` in ascending order.\n - `EDITING_DATE_DESC`: `editedDate` in descending order.\n\n Default: `EDITING_DATE_DESCENDING`\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListDeletedDraftPostsResponse",
      "displayName": "List Deleted Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost"]
          },
          "doc": " List of draft posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_RestoreFromTrashBinRequest",
      "displayName": "Restore From Trash Bin Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_RestoreFromTrashBinResponse",
      "displayName": "Restore From Trash Bin Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPost",
        "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost",
        "doc": " Restored draft post info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_RemoveFromTrashBinRequest",
      "displayName": "Remove From Trash Bin Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_RemoveFromTrashBinResponse",
      "displayName": "Remove From Trash Bin Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListDraftPostsRequest",
      "displayName": "List Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
          "doc": " Draft post status filter.\n\n If omitted, draft posts with all statuses are returned.\n`IN_MODERATION` is deprecated, use `IN_REVIEW` instead.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language filter.\n\n 2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n If omitted, draft posts in all languages are returned.\n"
        },
                {
          "name": "sort",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostsSort",
          "doc": " Sort options.\n\n - `EDITING_DATE_ASC`: `editedDate` in ascending order.\n - `EDITING_DATE_DESC`: `editedDate` in descending order.\n\n Default: `EDITING_DATE_DESCENDING`\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_BlogPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ListDraftPostsResponse",
      "displayName": "List Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost"]
          },
          "doc": " List of draft posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PublishDraftPostRequest",
      "displayName": "Publish Draft Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PublishDraftPostResponse",
      "displayName": "Publish Draft Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "postId",
        "type": "string",
        "doc": " Published post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UnpublishPostRequest",
      "displayName": "Unpublish Post Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "draftPostId",
        "type": "string",
        "doc": " Draft post ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_UnpublishPostResponse",
      "displayName": "Unpublish Post Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryDraftPostsRequest",
      "displayName": "Query Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field"]
          },
          "doc": " List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n only the draft post's base fields are returned.\n"
        },
                {
          "name": "query",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PlatformQuery",
          "doc": " Query options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_QueryDraftPostsResponse",
      "displayName": "Query Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "draftPosts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPost"]
          },
          "doc": " List of posts.\n"
        },
                {
          "name": "metaData",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_MetaData",
          "doc": " __Deprecated.__ Use `pagingMetadata` instead.\n This property will be removed on June 30, 2023.\n\n Details on the paged set of results returned.\n",
          "deprecated": true
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_upstream_wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkDeleteDraftPostsRequest",
      "displayName": "Bulk Delete Draft Posts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "postIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Post IDs.\n"
        },
                {
          "name": "permanent",
          "type": "boolean",
          "doc": " Should delete bypassing the trash-bin.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_BulkDeleteDraftPostsResponse",
      "displayName": "Bulk Delete Draft Posts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_BulkDraftPostResult"]
          },
          "doc": " Bulk action results.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Blog._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_InitialDraftPostsCopied",
      "displayName": "Initial Draft Posts Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": " Number of draft posts copied.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TotalDraftPosts",
      "displayName": "Total Draft Posts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Draft post totals in that group.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
          "doc": " Draft post status (only has value when grouping by status, otherwise null).\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Draft post language code (only has value when grouping by language, otherwise null).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostTotalsRequest",
      "displayName": "Get Draft Post Totals Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "groupBy",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_TotalDraftPostsGrouping_Field"]
          },
          "doc": " Group results by fields (defaults to grouping by status).\n If, for example, grouping by language is passed, language values in response will be filled.\n If, for example, grouping by language is not passed, null values will be filled in language field in response.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Optional language filter by provided language code. Useful in multilingual context.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostTotalsResponse",
      "displayName": "Get Draft Post Totals Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "totalDraftPosts",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Blog._com_wixpress_npm_communities_platformized_blog_v3_TotalDraftPosts"]
        },
        "doc": " Draft post totals.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPublicationsCountStatsRequest_Order",
      "displayName": "Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> OLDEST <\/code><\/li><li><code> NEWEST <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "OLDEST",
        "NEWEST"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_QueryPostCountStatsRequest_Order",
      "displayName": "Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> OLDEST <\/code><\/li><li><code> NEWEST <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "OLDEST",
        "NEWEST"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_TagField_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> URL -  Includes Tag URL when present.\n <\/code><\/li><li><code> SEO -  Includes SEO data.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "URL",
        "SEO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextStyle_TextAlignment",
      "displayName": "Text Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> AUTO -  browser default, eqivalent to `initial`\n <\/code><\/li><li><code> LEFT -  Left align\n <\/code><\/li><li><code> RIGHT -  Right align\n <\/code><\/li><li><code> CENTER -  Center align\n <\/code><\/li><li><code> JUSTIFY -  Text is spaced to line up its left and right edges to the left and right edges of the line box, except for the last line\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "AUTO",
        "LEFT",
        "RIGHT",
        "CENTER",
        "JUSTIFY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_Target",
      "displayName": "Target Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SELF -  Opens the linked document in the same frame as it was clicked (this is default)\n <\/code><\/li><li><code> BLANK -  Opens the linked document in a new window or tab\n <\/code><\/li><li><code> PARENT -  Opens the linked document in the parent frame\n <\/code><\/li><li><code> TOP -  Opens the linked document in the full body of the window\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SELF",
        "BLANK",
        "PARENT",
        "TOP"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CONTENT -  Width matches the content width\n <\/code><\/li><li><code> SMALL -  Small Width\n <\/code><\/li><li><code> ORIGINAL -  Width will match the original asset width\n <\/code><\/li><li><code> FULL_WIDTH -  coast-to-coast display\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CONTENT",
        "SMALL",
        "ORIGINAL",
        "FULL_WIDTH"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CENTER -  Center Alignment\n <\/code><\/li><li><code> LEFT -  Left Alignment\n <\/code><\/li><li><code> RIGHT -  Right Alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CENTER",
        "LEFT",
        "RIGHT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LINK -  Regular link button\n <\/code><\/li><li><code> ACTION -  Triggers custom action that is defined in plugin configuration by the consumer\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LINK",
        "ACTION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_LineStyle",
      "displayName": "Line Style Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SINGLE -  Single Line\n <\/code><\/li><li><code> DOUBLE -  Double Line\n <\/code><\/li><li><code> DASHED -  Dashed Line\n <\/code><\/li><li><code> DOTTED -  Dotted Line\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SINGLE",
        "DOUBLE",
        "DASHED",
        "DOTTED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_Width",
      "displayName": "Width Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LARGE -  Large line\n <\/code><\/li><li><code> MEDIUM -  Medium line\n <\/code><\/li><li><code> SMALL -  Small line\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LARGE",
        "MEDIUM",
        "SMALL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CENTER -  Center alignment\n <\/code><\/li><li><code> LEFT -  Left alignment\n <\/code><\/li><li><code> RIGHT -  Right alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CENTER",
        "LEFT",
        "RIGHT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData_PDFSettings_ViewMode",
      "displayName": "View Mode Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NONE -  No PDF view\n <\/code><\/li><li><code> FULL -  Full PDF view\n <\/code><\/li><li><code> MINI -  Mini PDF view\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NONE",
        "FULL",
        "MINI"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COLLAGE -  Collage type\n <\/code><\/li><li><code> MASONRY -  Masonry type\n <\/code><\/li><li><code> GRID -  Grid type\n <\/code><\/li><li><code> THUMBNAIL -  Thumbnail type\n <\/code><\/li><li><code> SLIDER -  Slider type\n <\/code><\/li><li><code> SLIDESHOW -  Slideshow type\n <\/code><\/li><li><code> PANORAMA -  Panorama type\n <\/code><\/li><li><code> COLUMN -  Column type\n <\/code><\/li><li><code> MAGIC -  Magic type\n <\/code><\/li><li><code> FULLSIZE -  Fullsize images type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COLLAGE",
        "MASONRY",
        "GRID",
        "THUMBNAIL",
        "SLIDER",
        "SLIDESHOW",
        "PANORAMA",
        "COLUMN",
        "MAGIC",
        "FULLSIZE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout_Orientation",
      "displayName": "Orientation Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ROWS -  Rows Orientation\n <\/code><\/li><li><code> COLUMNS -  Columns Orientation\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ROWS",
        "COLUMNS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_ItemStyle_Crop",
      "displayName": "Crop Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FILL -  Crop to fill\n <\/code><\/li><li><code> FIT -  Crop to fit\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FILL",
        "FIT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Thumbnails_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TOP -  Top alignment\n <\/code><\/li><li><code> RIGHT -  Right alignment\n <\/code><\/li><li><code> BOTTOM -  Bottom alignment\n <\/code><\/li><li><code> LEFT -  Left alignment\n <\/code><\/li><li><code> NONE -  No thumbnail\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TOP",
        "RIGHT",
        "BOTTOM",
        "LEFT",
        "NONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData_Source",
      "displayName": "Source Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> HTML <\/code><\/li><li><code> ADSENSE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "HTML",
        "ADSENSE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapType",
      "displayName": "Map Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ROADMAP -  Roadmap map type\n <\/code><\/li><li><code> SATELITE -  Satellite map type\n <\/code><\/li><li><code> HYBRID -  Hybrid map type\n <\/code><\/li><li><code> TERRAIN -  Terrain map type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ROADMAP",
        "SATELITE",
        "HYBRID",
        "TERRAIN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions_ViewRole",
      "displayName": "View Role Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CREATOR -  Only Poll creator can view the results\n <\/code><\/li><li><code> VOTERS -  Anyone who voted can see the results\n <\/code><\/li><li><code> EVERYONE -  Anyone can see the results, even if one didn't vote\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CREATOR",
        "VOTERS",
        "EVERYONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions_VoteRole",
      "displayName": "Vote Role Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SITE_MEMBERS -  Logged in member\n <\/code><\/li><li><code> ALL -  Anyone\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SITE_MEMBERS",
        "ALL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LIST -  List\n <\/code><\/li><li><code> GRID -  Grid\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LIST",
        "GRID"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout_Direction",
      "displayName": "Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LTR -  Left-to-right\n <\/code><\/li><li><code> RTL -  Right-to-left\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LTR",
        "RTL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COLOR -  Color background type\n <\/code><\/li><li><code> IMAGE -  Image background type\n <\/code><\/li><li><code> GRADIENT -  Gradiant background type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COLOR",
        "IMAGE",
        "GRADIENT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_AppType",
      "displayName": "App Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PRODUCT <\/code><\/li><li><code> EVENT <\/code><\/li><li><code> BOOKING <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PRODUCT",
        "EVENT",
        "BOOKING"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData_InitialExpandedItems",
      "displayName": "Initial Expanded Items Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FIRST -  First item will be expended initally\n <\/code><\/li><li><code> ALL -  All items will expended initally\n <\/code><\/li><li><code> NONE -  All items collapsed initally\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FIRST",
        "ALL",
        "NONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData_Direction",
      "displayName": "Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LTR -  Left-to-right\n <\/code><\/li><li><code> RTL -  Right-to-left\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LTR",
        "RTL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_VerticalAlignment",
      "displayName": "Vertical Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TOP -  Top alignment\n <\/code><\/li><li><code> MIDDLE -  Middle alignment\n <\/code><\/li><li><code> BOTTOM -  Bottom alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TOP",
        "MIDDLE",
        "BOTTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FontSizeData_fontType",
      "displayName": "font Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PX <\/code><\/li><li><code> EM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PX",
        "EM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PARAGRAPH <\/code><\/li><li><code> TEXT <\/code><\/li><li><code> HEADING <\/code><\/li><li><code> BULLETED_LIST <\/code><\/li><li><code> ORDERED_LIST <\/code><\/li><li><code> LIST_ITEM <\/code><\/li><li><code> BLOCKQUOTE <\/code><\/li><li><code> CODE_BLOCK <\/code><\/li><li><code> VIDEO <\/code><\/li><li><code> DIVIDER <\/code><\/li><li><code> FILE <\/code><\/li><li><code> GALLERY <\/code><\/li><li><code> GIF <\/code><\/li><li><code> HTML <\/code><\/li><li><code> IMAGE <\/code><\/li><li><code> LINK_PREVIEW <\/code><\/li><li><code> MAP <\/code><\/li><li><code> POLL <\/code><\/li><li><code> APP_EMBED <\/code><\/li><li><code> BUTTON <\/code><\/li><li><code> COLLAPSIBLE_LIST <\/code><\/li><li><code> TABLE <\/code><\/li><li><code> EMBED <\/code><\/li><li><code> COLLAPSIBLE_ITEM <\/code><\/li><li><code> COLLAPSIBLE_ITEM_TITLE <\/code><\/li><li><code> COLLAPSIBLE_ITEM_BODY <\/code><\/li><li><code> TABLE_CELL <\/code><\/li><li><code> TABLE_ROW <\/code><\/li><li><code> EXTERNAL <\/code><\/li><li><code> AUDIO <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PARAGRAPH",
        "TEXT",
        "HEADING",
        "BULLETED_LIST",
        "ORDERED_LIST",
        "LIST_ITEM",
        "BLOCKQUOTE",
        "CODE_BLOCK",
        "VIDEO",
        "DIVIDER",
        "FILE",
        "GALLERY",
        "GIF",
        "HTML",
        "IMAGE",
        "LINK_PREVIEW",
        "MAP",
        "POLL",
        "APP_EMBED",
        "BUTTON",
        "COLLAPSIBLE_LIST",
        "TABLE",
        "EMBED",
        "COLLAPSIBLE_ITEM",
        "COLLAPSIBLE_ITEM_TITLE",
        "COLLAPSIBLE_ITEM_BODY",
        "TABLE_CELL",
        "TABLE_ROW",
        "EXTERNAL",
        "AUDIO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> BOLD <\/code><\/li><li><code> ITALIC <\/code><\/li><li><code> UNDERLINE <\/code><\/li><li><code> SPOILER <\/code><\/li><li><code> ANCHOR <\/code><\/li><li><code> MENTION <\/code><\/li><li><code> LINK <\/code><\/li><li><code> COLOR <\/code><\/li><li><code> FONT_SIZE <\/code><\/li><li><code> EXTERNAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "BOLD",
        "ITALIC",
        "UNDERLINE",
        "SPOILER",
        "ANCHOR",
        "MENTION",
        "LINK",
        "COLOR",
        "FONT_SIZE",
        "EXTERNAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ChangeOrigin_Origin",
      "displayName": "Origin Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> ADMIN -  Changed by admin\n <\/code><\/li><li><code> ADD_CATEGORIES -  Categories were changed\n <\/code><\/li><li><code> AUTO_SAVE -  Saved automatically\n <\/code><\/li><li><code> COPY_TEMPLATE -  Copied from template\n <\/code><\/li><li><code> IMPORT -  Imported\n <\/code><\/li><li><code> IMPORT_BULK -  Imported in bulk\n <\/code><\/li><li><code> IMPORT_HTML -  Imported with html import\n <\/code><\/li><li><code> IMPORT_PATCH -  Patch import\n <\/code><\/li><li><code> LANGUAGE_CHANGE -  Changed language\n <\/code><\/li><li><code> MANUAL_SAVE -  Saved manually\n <\/code><\/li><li><code> MIGRATION -  Affected by migration\n <\/code><\/li><li><code> MODERATION -  Affected by moderation\n <\/code><\/li><li><code> MOVE_TO_TRASH -  Moved to trash\n <\/code><\/li><li><code> PRICING_PLANS_CHANGE -  Pricing plans were changed\n <\/code><\/li><li><code> PROVISION -  Was provisioned\n <\/code><\/li><li><code> PUBLISH -  Was published\n <\/code><\/li><li><code> REASSIGN_OWNER -  Owner was reassigned\n <\/code><\/li><li><code> REBLOG -  Was reblogged\n <\/code><\/li><li><code> RESTORE -  Was restored\n <\/code><\/li><li><code> REVERT_TO_DRAFT -  Reverted to draft\n <\/code><\/li><li><code> TRANSLATION -  Was translated\n <\/code><\/li><li><code> UNPUBLISH -  Was unpublished\n <\/code><\/li><li><code> UNSCHEDULE -  Was unscheduled\n <\/code><\/li><li><code> NEW_EDIT_SESSION -  New edit session started which updated editing_session_id id\n <\/code><\/li><li><code> SCHEDULING_SERVICE_SCHEDULE -  Was scheduled by Later\n <\/code><\/li><li><code> SCHEDULING_SERVICE_UNSCHEDULE -  Was unscheduled by Later\n <\/code><\/li><li><code> SCHEDULING_SERVICE_PUBLISH -  Was published by Later\n <\/code><\/li><li><code> SCHEDULE -  Was scheduled\n <\/code><\/li><li><code> REMOVE_FROM_MODERATION -  Was removed from moderation\n <\/code><\/li><li><code> REJECT_FROM_MODERATION -  Was rejected from moderation\n <\/code><\/li><li><code> APPROVE_IN_MODERATION -  Was approved in moderation\n <\/code><\/li><li><code> DELETE_TAG -  Tag was deleted\n <\/code><\/li><li><code> PIN -  Post was pinned\n <\/code><\/li><li><code> UNPIN -  Post was unpinned\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "ADMIN",
        "ADD_CATEGORIES",
        "AUTO_SAVE",
        "COPY_TEMPLATE",
        "IMPORT",
        "IMPORT_BULK",
        "IMPORT_HTML",
        "IMPORT_PATCH",
        "LANGUAGE_CHANGE",
        "MANUAL_SAVE",
        "MIGRATION",
        "MODERATION",
        "MOVE_TO_TRASH",
        "PRICING_PLANS_CHANGE",
        "PROVISION",
        "PUBLISH",
        "REASSIGN_OWNER",
        "REBLOG",
        "RESTORE",
        "REVERT_TO_DRAFT",
        "TRANSLATION",
        "UNPUBLISH",
        "UNSCHEDULE",
        "NEW_EDIT_SESSION",
        "SCHEDULING_SERVICE_SCHEDULE",
        "SCHEDULING_SERVICE_UNSCHEDULE",
        "SCHEDULING_SERVICE_PUBLISH",
        "SCHEDULE",
        "REMOVE_FROM_MODERATION",
        "REJECT_FROM_MODERATION",
        "APPROVE_IN_MODERATION",
        "DELETE_TAG",
        "PIN",
        "UNPIN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostStatus_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> PUBLISHED -  Status indicating the draft post is published.\n <\/code><\/li><li><code> UNPUBLISHED -  Status indicating the draft post is unpublished.\n <\/code><\/li><li><code> SCHEDULED -  Status indicating the draft post is scheduled for publication.\n <\/code><\/li><li><code> DELETED -  Status indicating the draft post is deleted.\n <\/code><\/li><li><code> IN_MODERATION -  Deprecated. Use `IN_REVIEW` instead. Status indicating the draft post is in review.\n Target removal date 2023-06-30\n Reserved for internal use.\n <\/code><\/li><li><code> IN_REVIEW -  Status indicating the draft post is in review.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "PUBLISHED",
        "UNPUBLISHED",
        "SCHEDULED",
        "DELETED",
        "IN_MODERATION",
        "IN_REVIEW"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_ModerationStatus_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> APPROVED <\/code><\/li><li><code> REJECTED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "APPROVED",
        "REJECTED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostField_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> URL -  Includes draft post preview URL.\n <\/code><\/li><li><code> INTERNAL_ID -  Includes internal id field.\n Reserved for internal use.\n <\/code><\/li><li><code> CONTENT -  Includes content field.\n <\/code><\/li><li><code> RICH_CONTENT -  Includes rich content field.\n <\/code><\/li><li><code> TRANSLATIONS -  Includes draft post translations when present.\n <\/code><\/li><li><code> GENERATED_EXCERPT -  If the user has not set excerpt, returns the one autogenerated from content.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "URL",
        "INTERNAL_ID",
        "CONTENT",
        "RICH_CONTENT",
        "TRANSLATIONS",
        "GENERATED_EXCERPT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_CategoryField_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> URL -  Includes Category url.\n <\/code><\/li><li><code> INTERNAL_ID -  Includes internal id field.\n Reserved for internal use\n <\/code><\/li><li><code> SEO -  Includes SEO data.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "URL",
        "INTERNAL_ID",
        "SEO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetPostsSort",
      "displayName": "Get Posts Sort Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FEED -  Sorting by publishing date descending with pinned posts first. The default value\n <\/code><\/li><li><code> PUBLISHED_DATE_ASC -  Sorting by publishing date ascending\n <\/code><\/li><li><code> PUBLISHED_DATE_DESC -  Sorting by publishing date descending\n <\/code><\/li><li><code> VIEW_COUNT -  Sorting by view count descending\n <\/code><\/li><li><code> LIKE_COUNT -  Sorting by like count descending\n <\/code><\/li><li><code> TITLE_ASC -  Sorting by title ascending\n <\/code><\/li><li><code> TITLE_DESC -  Sorting by title descending\n <\/code><\/li><li><code> RATING -  Sorting by post rating descending.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FEED",
        "PUBLISHED_DATE_ASC",
        "PUBLISHED_DATE_DESC",
        "VIEW_COUNT",
        "LIKE_COUNT",
        "TITLE_ASC",
        "TITLE_DESC",
        "RATING"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostField_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> COUNTERS -  Deprecated use `METRICS` instead\n <\/code><\/li><li><code> URL -  Includes Post url when present\n <\/code><\/li><li><code> CONTENT_TEXT -  Includes Post content text string when present\n <\/code><\/li><li><code> METRICS -  Includes Post metrics when present\n <\/code><\/li><li><code> SEO -  Includes SEO data\n <\/code><\/li><li><code> CONTENT -  Includes Post content as a stringified DraftJS document\n Reserved for internal use\n <\/code><\/li><li><code> INTERNAL_ID -  Includes internal id field\n Reserved for internal use\n <\/code><\/li><li><code> CONTACT_ID -  Includes post owners Contact Id\n <\/code><\/li><li><code> RICH_CONTENT -  Includes post rich content\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "COUNTERS",
        "URL",
        "CONTENT_TEXT",
        "METRICS",
        "SEO",
        "CONTENT",
        "INTERNAL_ID",
        "CONTACT_ID",
        "RICH_CONTENT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_PostCountersUpdatedField_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> TOTAL_COMMENTS -  Total comments field.\n <\/code><\/li><li><code> LIKE_COUNT -  Like count field.\n <\/code><\/li><li><code> VIEW_COUNT -  View count field.\n <\/code><\/li><li><code> RATING_COUNT -  Rating count field\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "TOTAL_COMMENTS",
        "LIKE_COUNT",
        "VIEW_COUNT",
        "RATING_COUNT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_GetDraftPostsSort",
      "displayName": "Get Draft Posts Sort Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EDITING_DATE_DESC -  Sorting by editing date descending.\n <\/code><\/li><li><code> EDITING_DATE_ASC -  Sorting by editing date ascending.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EDITING_DATE_DESC",
        "EDITING_DATE_ASC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostUpdateAction_Action",
      "displayName": "Action Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UPDATE -  Update draft post properties.\n <\/code><\/li><li><code> UPDATE_PUBLISH -  Update and publish draft post.\n <\/code><\/li><li><code> UPDATE_SCHEDULE -  Update and schedule draft post.\n <\/code><\/li><li><code> UPDATE_REVERT_TO_DRAFT -  Update and revert to draft a published post.\n <\/code><\/li><li><code> UPDATE_CANCEL_SCHEDULE -  Update draft and cancel post scheduling.\n <\/code><\/li><li><code> UPDATE_REJECT -  Update and reject draft post in moderation.\n <\/code><\/li><li><code> UPDATE_PUBLICATION -  Update published draft post.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UPDATE",
        "UPDATE_PUBLISH",
        "UPDATE_SCHEDULE",
        "UPDATE_REVERT_TO_DRAFT",
        "UPDATE_CANCEL_SCHEDULE",
        "UPDATE_REJECT",
        "UPDATE_PUBLICATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_DraftPostSaveType_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> MANUAL -  Manually saved.\n <\/code><\/li><li><code> AUTO_SAVE -  Triggered by autosave.\n <\/code><\/li><li><code> PROVISIONING -  Copied from template during provisioning flow.\n <\/code><\/li><li><code> IMPORT -  Imported from another blog.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "MANUAL",
        "AUTO_SAVE",
        "PROVISIONING",
        "IMPORT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_npm_communities_platformized_blog_v3_TotalDraftPostsGrouping_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> STATUS -  Groups results by status.\n <\/code><\/li><li><code> LANGUAGE -  Groups results by language.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "STATUS",
        "LANGUAGE"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.npm.communities-blog-node-api-kafka-consumers"}
}