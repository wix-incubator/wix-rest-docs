{
  "name": "Accounts",
  "client_id": "https://github.com/wix-private/app-market/tree/master/loyalty/loyalty-accounts#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Account",
    "entity": "_com_wixpress_loyalty_account_LoyaltyAccount"
  }],
  "relatedGuides": [  {
    "path": "../guides/accounts/docs/introduction.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Adjust Points",
      "methodName": "AdjustPoints",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "description",
          "type": "string",
          "doc": " Description to explain the reason for the points adjustment.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsRequest_type",
          "doc": " Type of the `Adjust Points` call.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Each time the loyalty account is updated, `revision` increments by 1.\n\nThe current `revision` must be passed when adjusting points in the loyalty account. This\nensures you're working with the latest version of the loyalty account and prevents unintended overwrites.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "AdjustPoints",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adjusts the point balance of a loyalty account.\n\nYou can adjust the balance in two ways:\n- `balance` allows you to set the total points balance to this new amount.\n- `amount` allows you to adjust the points balance by this amount. This amount can be a positive number to increase the points balance or a negative number to decrease the balance.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/adjust-points",
        "links": [],
        "examples": [        {
          "title": "Adjust account balance",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7/adjust-points' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n        \"accountId\": \"01e34b81-4e48-43e4-b178-c84f3b968574\",\n        \"description\": \"Sync from external program\",\n        \"balance\": 15,\n        \"revision\": \"3\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"9d29cf95-fd2c-4db4-8f4d-2d65c52cacb9\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AdjustPointsRequest",
        "rpcResponseName": "AdjustPointsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Account",
      "methodName": "CreateAccount",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["contactId"],
      "params": [      {
        "in": "BODY",
        "name": "contactId",
        "type": "string",
        "doc": " Contact ID for a Wix site contact. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateAccount",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_CreateAccountResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a loyalty account for one of a site's contacts.\n\nTo create a new loyalty account, the customer must first be a site contact with a contact ID. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object). The site must also\nhave an active loyalty program before loyalty accounts can be created. See the activate loyalty program endpoint\n[to activate a site's loyalty program](https://dev.wix.com/api/rest/wix-loyalty-program/program/activate-loyalty-program).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts",
        "links": [],
        "examples": [        {
          "title": "Create an account for the contact",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n        \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"3c7267de-204d-4f6c-b5a5-5d060bc3b21c\",\n  \"points\":   {\n    \"balance\": 0,\n    \"earned\": 0,\n    \"redeemed\": 0,\n    \"adjusted\": 0\n  },\n  \"latestTransaction\": null,\n  \"rewardAvailable\": false,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-06T14:33:19.114Z\",\n  \"revision\": \"1\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateAccountRequest",
        "rpcResponseName": "CreateAccountResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Earn Points",
      "methodName": "EarnPoints",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "appId",
        "idempotencyKey"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "amount",
          "type": "integer",
          "doc": " Amount of points to earn. Must be a positive, whole number.\n\nMin: `1`\n\nMax: `9,999,999`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "description",
          "type": "string",
          "doc": " Description of how the points were earned.\n\nMax: 100 characters\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nIf points were earned manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned in an automatic event,\nthen the `appId` is from that automation's `sourceUniqueId`.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "EarnPoints",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_EarnPointsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds points to a loyalty account.\n\nOnly a positive amount can be added using the earn points endpoint. To adjust an account's balance \nfor a negative amount, use [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/earn-points",
        "links": [],
        "examples": [        {
          "title": "Add points to account",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7/earn-points' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n          \"accountId\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n          \"amount\": 10,\n          \"description\": \"For subscribing to the newsletter\",\n          \"appId\": \"db9c3016-ff93-4105-bdef-ff852f3c74c0\",\n          \"idempotencyKey\": \"baa05589-20d1-45db-ba29-99920bccf37e\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 10,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 0\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 10,\n    \"type\": \"EARN\",\n    \"description\": \"points earned\",\n    \"createdDate\": \"2021-12-07T07:26:56.417Z\",\n    \"rewardId\": null,\n    \"appId\": \"db9c3016-ff93-4105-bdef-ff852f3c74c0\",\n    \"idempotencyKey\": \"baa05589-20d1-45db-ba29-99920bccf37e\"\n  },\n  \"rewardAvailable\": false,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:26:56.417Z\",\n  \"revision\": \"2\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "EarnPointsRequest",
        "rpcResponseName": "EarnPointsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Account",
      "methodName": "GetAccount",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the account to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetAccount",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetAccountResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an account using the loyalty account ID.\n\nYou can also retrieve an account using a secondary ID, such as a contact ID or a member ID by using\nthe [Get Account by Secondary Id endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-account-by-secondary-id).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{id}",
        "links": [],
        "examples": [        {
          "title": "Get an account",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n    \"rewardId\": null,\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetAccountRequest",
        "rpcResponseName": "GetAccountResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Account By Secondary Id",
      "methodName": "GetAccountBySecondaryId",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "QUERY",
        "name": "id",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
        "doc": "",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "GetAccountBySecondaryId",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the account belonging to the specified contact or member.\n\nThis endpoint retrieves loyalty accounts using the customer's contact ID or member ID. Your app can also retrieve an account\nusing the loyalty account ID by using the [Get Account endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-account-by-secondary-id).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/fetch-by",
        "links": [],
        "examples": [        {
          "title": "Get account by contactId or memberId",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/fetch-by' \\\n  -H 'Authorization: <AUTH>' \\\n    --data-raw '{\n            \"contact_id\": \"88615e02-3e8a-4297-8939-5d0a432b322a\"\n    }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"created_date\": \"2021-12-07T07:30:23.749Z\",\n    \"rewardId\": null,\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetAccountBySecondaryIdRequest",
        "rpcResponseName": "GetAccountBySecondaryIdResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Program Totals",
      "methodName": "GetProgramTotals",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetProgramTotals",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetProgramTotalsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the total amount of points earned, redeemed, and adjusted for the entire loyalty program.\n\nThe `balance` is the current total of points outstanding, while the `earned`, `adjusted`, and `redeemed` amounts\nare the historically accumulated amounts. The totals include the amounts for all loyalty accounts.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/program-totals",
        "links": [],
        "examples": [        {
          "title": "Get the program totals",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/program-totals' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"points\": {\n  \"balance\": 165,\n  \"earned\": 136,\n  \"redeemed\": 0,\n  \"adjusted\": 29\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetProgramTotalsRequest",
        "rpcResponseName": "GetProgramTotalsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Transaction",
      "methodName": "GetTransaction",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Transaction ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetTransaction",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetTransactionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a transaction using the transaction ID.\n\nLoyalty transactions include activity that changes a loyalty account point balance, such as adjusting, earning, or redeeming loyalty points.\nIf you want to [retrieve all of the transactions for a specific loyalty account](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/list-transactions), use the List Transactions endpoint.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/transactions/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a transaction",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/transactions/70f0711b-e16f-44d7-ad03-4301c78d8623' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{\"transaction\": {\n  \"id\": \"70f0711b-e16f-44d7-ad03-4301c78d8623\",\n  \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n  \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n  \"amount\": 50,\n  \"type\": \"EARN\",\n  \"description\": \"Shared post on social\",\n  \"createdDate\": \"2022-05-24T09:11:51.274Z\",\n  \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n  \"idempotencyKey\": \"0eb76578-8928-418e-8428-4a330d24186c\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTransactionRequest",
        "rpcResponseName": "GetTransactionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Accounts",
      "methodName": "ListAccounts",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "contactIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of contact IDs. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListAccounts",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_ListAccountsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of accounts, given the provided filters.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts",
        "links": [],
        "examples":         [
                    {
            "title": "Get a list of accounts, given the provided filters",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-raw '{\n          \"contactIds\": [],\n          \"cursorPaging\": {\n            \"limit\": 2\n          }\n    }'"],
            "response": ["{\n  \"accounts\":   [\n    {\"account\":     {\n      \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n      \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n      \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n      \"points\":       {\n        \"balance\": 15,\n        \"earned\": 10,\n        \"redeemed\": 0,\n        \"adjusted\": 5\n      },\n      \"latestTransaction\":       {\n        \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n        \"amount\": 5,\n        \"type\": \"ADJUST\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\"\n    }},\n    {\"account\":     {\n      \"id\": \"73618276-35cc-4d21-8380-bdd2fbebf781\",\n      \"contactId\": \"fb8f125e-bfc3-4d9a-80c2-215494f24731\",\n      \"memberId\": \"ddd5302e-23cf-4fd6-bf6b-461aaae3ab7d\",\n      \"points\":       {\n        \"balance\": 25,\n        \"earned\": 30,\n        \"redeemed\": 5,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\":       {\n        \"id\": \"95dc5eae-9c55-4a94-96fa-d70793af1a1f\",\n        \"amount\": 5,\n        \"type\": \"EARN\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\"\n    }}\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": null,\n    \"total\": 6,\n    \"tooManyToCount\": null,\n    \"cursors\":     {\n      \"next\": \"Gh0KDnBvaW50cy5iYWxhbmMlEAEaCREAAAAJJIBhQBorCgxfdXBkYXRlZERhdGUaGyoZChcKCiR0aW1lc3RhbXASCREA4GzcPdl3QiIkYjRkYzAyMzUtMjg2OS00MThjLWJjODQtNDMwNjUxMmMzYjhl\",\n      \"prev\": null\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get a list of accounts, given the provided filters",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-raw '{\n          \"contactIds\": [\n            \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n            \"fb8f125e-bfc3-4d9a-80c2-215494f24731\"\n          ],\n          \"cursorPaging\": {}\n    }'"],
            "response": ["{\n  \"accounts\":   [\n    {\"account\":     {\n      \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n      \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n      \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n      \"points\":       {\n        \"balance\": 15,\n        \"earned\": 10,\n        \"redeemed\": 0,\n        \"adjusted\": 5\n      },\n      \"latestTransaction\":       {\n        \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n        \"amount\": 5,\n        \"type\": \"ADJUST\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\"\n    }},\n    {\"account\":     {\n      \"id\": \"73618276-35cc-4d21-8380-bdd2fbebf781\",\n      \"contactId\": \"fb8f125e-bfc3-4d9a-80c2-215494f24731\",\n      \"memberId\": \"ddd5302e-23cf-4fd6-bf6b-461aaae3ab7d\",\n      \"points\":       {\n        \"balance\": 25,\n        \"earned\": 30,\n        \"redeemed\": 5,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\":       {\n        \"id\": \"95dc5eae-9c55-4a94-96fa-d70793af1a1f\",\n        \"amount\": 5,\n        \"type\": \"EARN\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\"\n    }}\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": null,\n    \"total\": 2,\n    \"tooManyToCount\": null,\n    \"cursors\":     {\n      \"next\": null,\n      \"prev\": null\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAccountsRequest",
        "rpcResponseName": "ListAccountsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Transactions",
      "methodName": "ListTransactions",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTransactions",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_ListTransactionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of transactions, given the provided filters.\n\nLoyalty transactions include activity that changes a loyalty account point balance, such as adjusting, earning, or redeeming loyalty points.\nIf you want to [retrieve a specific transaction using that transaction's ID](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-transaction), use the Get Transaction endpoint.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/transactions",
        "links": [],
        "examples": [        {
          "title": "Get a list of transactions",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/b04a7524-f0cc-435a-981a-b765f758438b/transactions' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{\"transactions\": [\n    {\n    \"id\": \"03992fc4-8e8c-4406-8d3c-0292ed3be5d8\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 150,\n    \"type\": \"ADJUST\",\n    \"description\": \"Signed up as site member.\",\n    \"createdDate\": \"2022-05-23T22:50:49.366Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\"\n  },\n    {\n    \"id\": \"70f0711b-e16f-44d7-ad03-4301c78d8623\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 50,\n    \"type\": \"EARN\",\n    \"description\": \"Shared post on social\",\n    \"createdDate\": \"2022-05-24T09:11:51.274Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": \"0eb76578-8928-418e-8428-4a330d24186c\"\n  },\n    {\n    \"id\": \"78a5c76e-fe47-4103-bfda-15e05c2ab003\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 50,\n    \"type\": \"EARN\",\n    \"description\": \"Shared post on social\",\n    \"createdDate\": \"2022-06-19T22:09:23.434Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": \"5a036e48-4188-4200-a42e-de37c273c3c1\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTransactionsRequest",
        "rpcResponseName": "ListTransactionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_loyalty_account_LoyaltyAccountCreatedDomainEvent",
      "name": "Loyalty Account Created Webhook",
      "docs": {"summary": " Triggered when a loyalty account is created.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_PointsUpdatedDomainEvent",
      "name": "Points Updated Webhook",
      "docs": {"summary": " Triggered when the points of a loyalty account are adjusted, earned, or redeemed.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_points_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_LoyaltyAccountUpdatedDomainEvent",
      "name": "Loyalty Account Updated Webhook",
      "docs": {"summary": " Triggered when a loyalty account is updated, including when points are adjusted, earned, or redeemed.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_updated",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountCreatedDomainEvent",
      "displayName": "Loyalty Account Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"72e7d409-1004-4c0e-aaee-f450d3b7795e\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"created\",\n  \"entityId\" : \"9d43c446-f97a-4622-a777-982717e9393f\",\n  \"createdEvent\" : {\n    \"entity\" : {\n      \"rewardAvailable\" : false,\n      \"revision\" : \"1\",\n      \"points\" : {\n        \"balance\" : 0,\n        \"earned\" : 0,\n        \"adjusted\" : 0,\n        \"redeemed\" : 0\n      },\n      \"id\" : \"39ebaa10-6888-47e4-a54a-70ef7a2e30b7\",\n      \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"updatedDate\" : \"2021-12-30T12:13:43.841Z\",\n      \"createdDate\" : \"2021-12-30T12:13:43.841Z\"\n    }\n  },\n  \"eventTime\" : \"2021-12-30T12:13:43.846444Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyAccount ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountEntityCreatedEvent",
      "displayName": "Loyalty Account Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMergedDomainEvent",
      "displayName": "Accounts Merged Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `accounts_merged`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AccountsMergedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "AccountsMerged ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMergedActionEvent",
      "displayName": "Accounts Merged Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_AccountsMerged",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdatedDomainEvent",
      "displayName": "Points Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"48b171b8-e2c1-46da-92ff-5ce4b173c751\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"points_updated\",\n  \"entityId\" : \"2bdbac7d-b121-4191-84bf-a359b20bc8c6\",\n  \"actionEvent\" : {\n    \"body\" : {\n      \"account\" : {\n        \"rewardAvailable\" : false,\n        \"revision\" : \"3\",\n        \"points\" : {\n          \"balance\" : 1,\n          \"earned\" : 0,\n          \"adjusted\" : 1,\n          \"redeemed\" : 0\n        },\n        \"id\" : \"fe0ca230-61a6-4ebf-9199-9c0d238619aa\",\n        \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n        \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n        \"latestTransaction\" : {\n          \"description\" : \"\",\n          \"amount\" : -1,\n          \"id\" : \"7af9dffd-0ae6-4408-a40d-e68093f4694e\",\n          \"type\" : \"ADJUST\",\n          \"appId\" : \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n          \"createdDate\" : \"2021-12-29T14:06:50.091Z\"\n        },\n        \"updatedDate\" : \"2021-12-29T14:06:50.092Z\",\n        \"createdDate\" : \"2021-12-29T13:55:32.505Z\"\n      }\n    }\n  },\n  \"eventTime\" : \"2021-12-29T14:06:50.106622Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `points_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_PointsUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PointsUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdatedActionEvent",
      "displayName": "Points Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_PointsUpdated",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountUpdatedDomainEvent",
      "displayName": "Loyalty Account Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"6d93e773-0d52-4e27-85b5-431e9c498633\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"4951bd93-ddb3-4406-b63f-547d684085bd\",\n  \"updatedEvent\" : {\n    \"currentEntity\" : {\n      \"rewardAvailable\" : false,\n      \"revision\" : \"2\",\n      \"points\" : {\n        \"balance\" : 50,\n        \"earned\" : 50,\n        \"adjusted\" : 0,\n        \"redeemed\" : 0\n      },\n      \"id\" : \"aa6dd651-066e-4fe4-8f3b-a99a90e5f59b\",\n      \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"latestTransaction\" : {\n        \"description\" : \"Sign Up to the Site & earn Stars\",\n        \"idempotencyKey\" : \"c138c707-029a-461b-a6b7-9ba796e61fca0130d405-8b13-4436-ad3b-42459bdefe6f\",\n        \"amount\" : 49,\n        \"id\" : \"0e921156-73ba-46ec-a311-9063e33eb9c9\",\n        \"type\" : \"EARN\",\n        \"appId\" : \"SiteMembers\",\n        \"createdDate\" : \"2021-12-30T12:13:43.875Z\"\n      },\n      \"updatedDate\" : \"2021-12-30T12:13:43.876Z\",\n      \"createdDate\" : \"2021-12-30T12:13:43.841Z\"\n    }\n  },\n  \"eventTime\" : \"2021-12-30T12:13:43.885001Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyAccount ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountEntityUpdatedEvent",
      "displayName": "Loyalty Account Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "fieldsMapEntry",
      "displayName": "fields Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Unordered map of dynamically typed values.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Accounts._google_protobuf_Value",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Struct",
      "displayName": "Struct Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fields",
        "type": "All APIs.Accounts.fieldsMapEntry",
        "doc": "Set of key-value pairs. Unordered map of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Accounts._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Accounts._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Accounts._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Accounts._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccount",
      "displayName": "Loyalty Account Object",
      "locations": [],
      "docs":       {
        "summary": " A loyalty account stores a customer's loyalty points balance. A site's customers can earn points to their account\nand redeem those points for rewards.\n",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"account\" : {\n    \"id\" : \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n    \"contactId\" : \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n    \"memberId\" : \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n    \"points\" : {\n      \"balance\" : 15,\n      \"earned\" : 10,\n      \"redeemed\" : 0,\n      \"adjusted\" : 5\n    },\n    \"latestTransaction\" : {\n      \"id\" : \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n      \"amount\" : 5,\n      \"type\" : \"ADJUST\",\n      \"description\" : \"\",\n      \"createdDate\" : \"2021-12-07T07:30:23.749Z\",\n      \"appId\" : \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n      \"idempotencyKey\" : null\n    },\n    \"rewardAvailable\" : true,\n    \"createdDate\" : \"2021-12-06T14:33:19.114Z\",\n    \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n    \"revision\" : \"4\"\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Account ID.\n",
          "readOnly": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
          "readOnly": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the Members API to [learn more about a site's members](https://dev.wix.com/api/rest/members/members/member-object).\n",
          "readOnly": true
        },
                {
          "name": "points",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_Points",
          "doc": " Information about the account totals.\n"
        },
                {
          "name": "latestTransaction",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LatestTransaction",
          "doc": " Details of the account's latest transaction.\n"
        },
                {
          "name": "rewardAvailable",
          "type": "boolean",
          "doc": " Whether the account has a reward available. `true` if the amount of points in `points.balance` are enough to redeem for a reward.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the account was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the account was last updated.\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the loyalty account is updated.\n\nTo prevent conflicting changes, the current `revision` must be passed when updating the loyalty account.  \n\nIgnored when creating an account.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Tier",
      "displayName": "Tier Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": "Date when the last time Tier was recalculated\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Points",
      "displayName": "Points Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "balance",
          "type": "integer",
          "doc": " Current point balance.\n\nEqual to the sum of `earned` and `adjusted` points, minus `redeemed` points.\n"
        },
                {
          "name": "earned",
          "type": "integer",
          "doc": " Total earned points.\n"
        },
                {
          "name": "adjusted",
          "type": "integer",
          "doc": " Total adjusted points.\n"
        },
                {
          "name": "redeemed",
          "type": "integer",
          "doc": " Total redeemed points.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LatestTransaction",
      "displayName": "Latest Transaction Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Transaction ID.\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Amount of earned, adjusted, or redeemed points in the latest transaction.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_TransactionType",
          "doc": " Transaction type.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the latest transaction.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the transaction was created.\n",
          "readOnly": true
        },
                {
          "name": "rewardId",
          "type": "string",
          "doc": " __Deprecated.__ For `latestTransaction.rewardId`, use `latestTransaction.redeemInfo.rewardId` instead. This property\nwill be removed on September 30, 2022.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nOnly present if `type` is `EARN` or `ADJUST`.\n\nIf points were earned or adjusted manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned or adjusted in an automatic event,\nthen the `appId` is from that automation's `sourceUniqueId`.\n",
          "readOnly": true
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": "Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n\nOnly present if points were added manually using the [Earn Points endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n",
          "readOnly": true
        },
                {
          "name": "redeemInfo",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RedeemInfo",
          "doc": " Additional information for redeemed points.  \n\nOnly present if `type` is `REDEEM`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Transaction",
      "displayName": "Transaction Object",
      "locations": [],
      "docs":       {
        "summary": " Loyalty transaction.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Transaction ID.\n",
          "readOnly": true
        },
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "readOnly": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
          "readOnly": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the Members API to [learn more about a site's members](https://dev.wix.com/api/rest/members/members/member-object).\n",
          "readOnly": true
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Points earned, adjusted, or redeemed in the latest transaction.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_TransactionType",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Transaction description. Only present for automated transactions of `type` `EARN` or `REDEEM`, when set by the site owner in the Business Manager.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time of the transaction.\n",
          "readOnly": true
        },
                {
          "name": "rewardId",
          "type": "string",
          "doc": " __Deprecated.__ For `transaction.rewardId`, use `transaction.redeemInfo.rewardId` instead. This property\nwill be removed on June 30, 2022.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nOnly present if `type` is `EARN` or `ADJUST`.\n\nIf points were earned or adjusted manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned or adjusted in an automatic event,\nthen the `appId` is from that automation's `sourceUniqueId`.\n",
          "readOnly": true
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n\nOnly present if points were added manually using the [Earn Points endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n",
          "readOnly": true
        },
                {
          "name": "redeemInfo",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RedeemInfo",
          "doc": " Additional redeem information. Only present if `type` is `REDEEM`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemInfo",
      "displayName": "Redeem Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewardId",
          "type": "string",
          "doc": " ID of the reward that was redeemed.  \n",
          "readOnly": true
        },
                {
          "name": "rewardType",
          "type": "string",
          "doc": " Type of reward that was redeemed.\n",
          "readOnly": true
        },
                {
          "name": "referenceEntityId",
          "type": "string",
          "doc": " ID of the specific item that was redeemed in this transaction.  \n\nEach reward that is redeemed has a unique `referenceEntityId`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdated",
      "displayName": "Points Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Updated account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMerged",
      "displayName": "Accounts Merged Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sourceAccounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": " Source accounts.\n",
          "readOnly": true
        },
                {
          "name": "updatedAccount",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
          "doc": " Merged account.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CreateAccountRequest",
      "displayName": "Create Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "contactId",
        "type": "string",
        "doc": " Contact ID for a Wix site contact. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CreateAccountResponse",
      "displayName": "Create Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountRequest",
      "displayName": "Get Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the account to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountResponse",
      "displayName": "Get Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListUserAccountsRequest",
      "displayName": "List User Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load. Minimum `1`, maximum `50`.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListUserAccountsResponse",
      "displayName": "List User Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accounts",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountForMetaSite"]
        },
        "doc": " Loyalty accounts.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountForMetaSite",
      "displayName": "Loyalty Account For Meta Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "account",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
          "doc": " Loyalty account.\n"
        },
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " Metasite ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetProgramTotalsRequest",
      "displayName": "Get Program Totals Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetProgramTotalsResponse",
      "displayName": "Get Program Totals Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "points",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_Points",
        "doc": " Point totals for the entire program.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetCurrentMemberAccountRequest",
      "displayName": "Get Current Member Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetCurrentMemberAccountResponse",
      "displayName": "Get Current Member Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest",
      "displayName": "Get Account By Secondary Id Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
      "displayName": "id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the Members API to [learn more about a site's members](https://dev.wix.com/api/rest/members/members/member-object).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdResponse",
      "displayName": "Get Account By Secondary Id Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListAccountsRequest",
      "displayName": "List Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of contact IDs. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Accounts._wix_common_CursorPaging",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListAccountsResponse",
      "displayName": "List Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": " Loyalty accounts.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_EarnPointsRequest",
      "displayName": "Earn Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Amount of points to earn. Must be a positive, whole number.\n\nMin: `1`\n\nMax: `9,999,999`\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of how the points were earned.\n\nMax: 100 characters\n"
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nIf points were earned manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned in an automatic event,\nthen the `appId` is from that automation's `sourceUniqueId`.\n"
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_EarnPointsResponse",
      "displayName": "Earn Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsRequest",
      "displayName": "Adjust Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description to explain the reason for the points adjustment.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsRequest_type",
          "doc": " Type of the `Adjust Points` call.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Each time the loyalty account is updated, `revision` increments by 1.\n\nThe current `revision` must be passed when adjusting points in the loyalty account. This\nensures you're working with the latest version of the loyalty account and prevents unintended overwrites.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsRequest_type",
      "displayName": "type Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "balance",
          "type": "integer",
          "doc": " Sets the account's point balance to this amount. Must be a positive, whole number.\n\nThe net difference between this new balance and the previous balance will be reflected in the `adjusted` field of the customer's account.  \n\nMin: `1`\n\nMax: `999,999,999`\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Adjusts the account's point balance by this amount. Must be a whole number with a maximum of 7 digits.\nThe amount can be negative, but cannot be `0`.\n\nMin: `-9,999,999`\n\nMax: `9,999,999`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsResponse",
      "displayName": "Adjust Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemPointsRequest",
      "displayName": "Redeem Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "rewardId",
          "type": "string",
          "doc": " Reward ID. See [Rewards API](https://dev.wix.com/api/rest/loyalty/rewards/rewards-object) for more details.\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of times the given reward will be redeemed. Must be a positive whole number.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time points are redeemed.\nTo prevent conflicting changes, the existing `revision` must be used when redeeming points.\n"
        },
                {
          "name": "referenceEntityId",
          "type": "string",
          "doc": " Id of the entity that is being redeemed (e.g. orderId for order discount, couponId for coupon reward).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemPointsResponse",
      "displayName": "Redeem Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetTransactionRequest",
      "displayName": "Get Transaction Request Object",
      "locations": [],
      "docs":       {
        "summary": " Retrieves a transaction.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Transaction ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetTransactionResponse",
      "displayName": "Get Transaction Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "transaction",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_Transaction",
        "doc": " Retrieved transaction.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListTransactionsRequest",
      "displayName": "List Transactions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Accounts._wix_common_CursorPaging",
          "doc": " TODO: This is not implemented and we can implement it later\n copied from https://github.com/wix-private/p13n/blob/master/protos/query/src/main/proto/wix/common/query.proto\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListTransactionsResponse",
      "displayName": "List Transactions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_Transaction"]
          },
          "doc": " Retrieved transactions.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_TransactionType",
      "displayName": "Transaction Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> EARN <\/code><\/li><li><code> REDEEM <\/code><\/li><li><code> ADJUST <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "EARN",
        "REDEEM",
        "ADJUST"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.loyalty.loyalty-accounts"}
}